{"version":3,"file":"autocomplete-empty-65d6e711.js","sources":["../../packages/components/autocomplete/src/use-autocomplete.tsx","../../packages/components/autocomplete/src/autocomplete-icon.tsx","../../packages/components/autocomplete/src/autocomplete-list.tsx","../../packages/components/autocomplete/src/autocomplete-option-group.tsx","../../packages/components/autocomplete/src/autocomplete-option.tsx","../../packages/components/autocomplete/src/autocomplete-create.tsx","../../packages/components/autocomplete/src/autocomplete-empty.tsx"],"sourcesContent":["import type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { layoutStylesProperties } from \"@yamada-ui/core\"\nimport type { FormControlOptions } from \"@yamada-ui/form-control\"\nimport {\n  formControlProperties,\n  useFormControlProps,\n} from \"@yamada-ui/form-control\"\nimport { popoverProperties, type PopoverProps } from \"@yamada-ui/popover\"\nimport { useControllableState } from \"@yamada-ui/use-controllable-state\"\nimport { createDescendant } from \"@yamada-ui/use-descendant\"\nimport { useOutsideClick } from \"@yamada-ui/use-outside-click\"\nimport type { Dict, PropGetter, Union, DOMAttributes } from \"@yamada-ui/utils\"\nimport {\n  ariaAttr,\n  createContext,\n  dataAttr,\n  funcAll,\n  getEventRelatedTarget,\n  handlerAll,\n  isArray,\n  isContains,\n  isHTMLElement,\n  mergeRefs,\n  omitObject,\n  pickObject,\n  splitObject,\n  useUnmountEffect,\n  useUpdateEffect,\n  getValidChildren,\n  isUndefined,\n} from \"@yamada-ui/utils\"\nimport type {\n  ChangeEvent,\n  CSSProperties,\n  Dispatch,\n  FocusEvent,\n  KeyboardEvent,\n  MouseEvent,\n  RefObject,\n  SetStateAction,\n} from \"react\"\nimport { useCallback, useEffect, useMemo, useRef, useState } from \"react\"\nimport type { AutocompleteOptionProps } from \"./\"\nimport { AutocompleteOption, AutocompleteOptionGroup } from \"./\"\n\ntype AutocompleteBaseItem = Omit<\n  AutocompleteOptionProps,\n  \"value\" | \"children\"\n> & {\n  label?: string\n}\n\ntype AutocompleteItemWithValue = AutocompleteBaseItem & {\n  value?: string\n}\n\ntype AutocompleteItemWithItems = AutocompleteBaseItem & {\n  items?: AutocompleteItemWithValue[]\n}\n\nexport type AutocompleteItem =\n  | AutocompleteItemWithValue\n  | AutocompleteItemWithItems\n\nconst kanaMap: Record<string, string> = {\n  ｶﾞ: \"ガ\",\n  ｷﾞ: \"ギ\",\n  ｸﾞ: \"グ\",\n  ｹﾞ: \"ゲ\",\n  ｺﾞ: \"ゴ\",\n  ｻﾞ: \"ザ\",\n  ｼﾞ: \"ジ\",\n  ｽﾞ: \"ズ\",\n  ｾﾞ: \"ゼ\",\n  ｿﾞ: \"ゾ\",\n  ﾀﾞ: \"ダ\",\n  ﾁﾞ: \"ヂ\",\n  ﾂﾞ: \"ヅ\",\n  ﾃﾞ: \"デ\",\n  ﾄﾞ: \"ド\",\n  ﾊﾞ: \"バ\",\n  ﾋﾞ: \"ビ\",\n  ﾌﾞ: \"ブ\",\n  ﾍﾞ: \"ベ\",\n  ﾎﾞ: \"ボ\",\n  ﾊﾟ: \"パ\",\n  ﾋﾟ: \"ピ\",\n  ﾌﾟ: \"プ\",\n  ﾍﾟ: \"ペ\",\n  ﾎﾟ: \"ポ\",\n  ｳﾞ: \"ヴ\",\n  ﾜﾞ: \"ヷ\",\n  ｦﾞ: \"ヺ\",\n  ｱ: \"ア\",\n  ｲ: \"イ\",\n  ｳ: \"ウ\",\n  ｴ: \"エ\",\n  ｵ: \"オ\",\n  ｶ: \"カ\",\n  ｷ: \"キ\",\n  ｸ: \"ク\",\n  ｹ: \"ケ\",\n  ｺ: \"コ\",\n  ｻ: \"サ\",\n  ｼ: \"シ\",\n  ｽ: \"ス\",\n  ｾ: \"セ\",\n  ｿ: \"ソ\",\n  ﾀ: \"タ\",\n  ﾁ: \"チ\",\n  ﾂ: \"ツ\",\n  ﾃ: \"テ\",\n  ﾄ: \"ト\",\n  ﾅ: \"ナ\",\n  ﾆ: \"ニ\",\n  ﾇ: \"ヌ\",\n  ﾈ: \"ネ\",\n  ﾉ: \"ノ\",\n  ﾊ: \"ハ\",\n  ﾋ: \"ヒ\",\n  ﾌ: \"フ\",\n  ﾍ: \"ヘ\",\n  ﾎ: \"ホ\",\n  ﾏ: \"マ\",\n  ﾐ: \"ミ\",\n  ﾑ: \"ム\",\n  ﾒ: \"メ\",\n  ﾓ: \"モ\",\n  ﾔ: \"ヤ\",\n  ﾕ: \"ユ\",\n  ﾖ: \"ヨ\",\n  ﾗ: \"ラ\",\n  ﾘ: \"リ\",\n  ﾙ: \"ル\",\n  ﾚ: \"レ\",\n  ﾛ: \"ロ\",\n  ﾜ: \"ワ\",\n  ｦ: \"ヲ\",\n  ﾝ: \"ン\",\n  ｧ: \"ァ\",\n  ｨ: \"ィ\",\n  ｩ: \"ゥ\",\n  ｪ: \"ェ\",\n  ｫ: \"ォ\",\n  ｯ: \"ッ\",\n  ｬ: \"ャ\",\n  ｭ: \"ュ\",\n  ｮ: \"ョ\",\n  \"｡\": \"。\",\n  \"､\": \"、\",\n  ｰ: \"ー\",\n  \"｢\": \"「\",\n  \"｣\": \"」\",\n  \"･\": \"・\",\n}\n\nconst defaultFormat = (value: string) => {\n  value = value.replace(/[！-～]/g, (v) =>\n    String.fromCharCode(v.charCodeAt(0) - 0xfee0),\n  )\n\n  const reg = new RegExp(\"(\" + Object.keys(kanaMap).join(\"|\") + \")\", \"g\")\n\n  value = value\n    .replace(reg, (v) => kanaMap[v])\n    .replace(/ﾞ/g, \"゛\")\n    .replace(/ﾟ/g, \"゜\")\n\n  value = value.toUpperCase()\n\n  return value\n}\n\nconst flattenItems = (\n  items: AutocompleteItem[],\n): AutocompleteItemWithValue[] => {\n  const filterItems = (\n    items: AutocompleteItem[] | AutocompleteItemWithValue[],\n  ): (AutocompleteItemWithValue | AutocompleteItemWithValue[])[] =>\n    items\n      .map((item) => {\n        const { isDisabled, isFocusable } = item\n        const trulyDisabled = !!isDisabled && !isFocusable\n\n        if (trulyDisabled) return\n\n        if (\"items\" in item) {\n          return filterItems(item.items ?? [])\n        } else {\n          return item as AutocompleteItemWithValue\n        }\n      })\n      .filter(Boolean) as (\n      | AutocompleteItemWithValue\n      | AutocompleteItemWithValue[]\n    )[]\n\n  return filterItems(items).flat(Infinity) as AutocompleteItemWithValue[]\n}\n\nconst isTargetOption = (target: EventTarget | null): boolean =>\n  isHTMLElement(target) &&\n  !!target?.getAttribute(\"role\")?.startsWith(\"autocomplete-item\")\n\nexport const {\n  DescendantsContextProvider: AutocompleteDescendantsContextProvider,\n  useDescendantsContext: useAutocompleteDescendantsContext,\n  useDescendants: useAutocompleteDescendants,\n  useDescendant: useAutocompleteDescendant,\n} = createDescendant<HTMLElement>()\n\ntype AutocompleteContext = Omit<\n  UseAutocompleteProps,\n  \"value\" | \"defaultValue\" | \"onChange\" | \"onCreate\"\n> & {\n  value: string | string[]\n  label: string | string[] | undefined\n  inputValue: string\n  isHit: boolean\n  isEmpty: boolean\n  isAllSelected: boolean\n  onChange: (newValue: string) => void\n  onChangeLabel: (newValue: string, runOmit?: boolean) => void\n  pickOptions: (value: string) => void\n  rebirthOptions: (runFocus?: boolean) => void\n  inputProps: DOMAttributes\n  isOpen: boolean\n  onOpen: () => void\n  onClose: () => void\n  onCreate: () => void\n  onFocusFirst: () => void\n  onFocusLast: () => void\n  onFocusNext: (index?: number) => void\n  onFocusPrev: (index?: number) => void\n  focusedIndex: number\n  setFocusedIndex: Dispatch<SetStateAction<number>>\n  listRef: RefObject<HTMLUListElement>\n  inputRef: RefObject<HTMLInputElement>\n  formControlProps: Record<string, any>\n  styles: Record<string, CSSUIObject>\n}\n\nexport const [AutocompleteProvider, useAutocompleteContext] =\n  createContext<AutocompleteContext>({\n    name: \"AutocompleteContext\",\n    errorMessage: `useAutocompleteContext returned is 'undefined'. Seems you forgot to wrap the components in \"<Autocomplete />\" or \"<MultiAutocomplete />\"`,\n  })\n\ntype UseAutocompleteBaseProps<T extends string | string[] = string> = Omit<\n  PopoverProps,\n  | \"initialFocusRef\"\n  | \"closeOnButton\"\n  | \"isOpen\"\n  | \"trigger\"\n  | \"autoFocus\"\n  | \"restoreFocus\"\n  | \"openDelay\"\n  | \"closeDelay\"\n> &\n  FormControlOptions & {\n    /**\n     * The value of the autocomplete.\n     */\n    value?: T\n    /**\n     * The initial value of the autocomplete.\n     */\n    defaultValue?: T\n    /**\n     * The callback invoked when value state changes.\n     */\n    onChange?: (value: T) => void\n    /**\n     * The callback invoked when search input.\n     */\n    onSearch?: (ev: ChangeEvent<HTMLInputElement>) => void\n    /**\n     * The callback invoked when autocomlete option created.\n     */\n    onCreate?: (newItem: AutocompleteItem, newItems: AutocompleteItem[]) => void\n    /**\n     * Function to format text when search input.\n     */\n    format?: (value: string) => string\n    /**\n     * The position to be inserted when the autocomplete option is created.\n     *\n     * @default 'first'\n     */\n    insertPositionItem?: Union<\"first\" | \"last\"> | [string, \"first\" | \"last\"]\n    /**\n     * If `true`, the list element will be closed when value is selected.\n     *\n     * @default true\n     */\n    closeOnSelect?: boolean\n    /**\n     * The message displayed when the search yields no hits.\n     *\n     * @default 'No results found'\n     */\n    emptyMessage?: string\n    /**\n     * If `true`, enables the creation of autocomplete option.\n     *\n     * @default false\n     */\n    allowCreate?: boolean\n    /**\n     * If `true`, enables the free input.\n     */\n    allowFree?: boolean\n    /**\n     * If `true`, the selected item(s) will be excluded from the list.\n     *\n     * @default false\n     */\n    omitSelectedValues?: boolean\n    /**\n     * The maximum selectable value.\n     */\n    maxSelectedValues?: number\n    /**\n     * Props for select option element.\n     */\n    optionProps?: Omit<AutocompleteOptionProps, \"value\" | \"children\">\n    /**\n     * If provided, generate options based on items.\n     */\n    items?: AutocompleteItem[]\n  }\n\nexport type UseAutocompleteProps<T extends string | string[] = string> = Omit<\n  HTMLUIProps<\"input\">,\n  | keyof UseAutocompleteBaseProps\n  | \"list\"\n  | \"disabled\"\n  | \"required\"\n  | \"readOnly\"\n  | \"size\"\n> &\n  UseAutocompleteBaseProps<T>\n\nexport const useAutocomplete = <T extends string | string[] = string>({\n  defaultIsOpen,\n  closeOnSelect = true,\n  omitSelectedValues = false,\n  maxSelectedValues,\n  closeOnBlur = true,\n  closeOnEsc = true,\n  allowCreate = false,\n  allowFree = false,\n  insertPositionItem = \"first\",\n  emptyMessage = \"No results found\",\n  format = defaultFormat,\n  placement = \"bottom-start\",\n  duration = 0.2,\n  optionProps,\n  placeholder,\n  items,\n  children,\n  ...rest\n}: UseAutocompleteProps<T>) => {\n  rest = useFormControlProps(rest)\n\n  const { id } = rest\n\n  const formControlProps = pickObject(rest, formControlProperties)\n  const [containerProps, inputProps] = splitObject<Dict, string>(\n    omitObject(rest, [\n      ...popoverProperties,\n      \"id\",\n      \"value\",\n      \"defaultValue\",\n      \"onChange\",\n      \"onCreate\",\n      \"onSearch\",\n    ]),\n    layoutStylesProperties,\n  )\n\n  const descendants = useAutocompleteDescendants()\n\n  const containerRef = useRef<HTMLDivElement>(null)\n  const listRef = useRef<HTMLUListElement>(null)\n  const inputRef = useRef<HTMLInputElement>(null)\n  const timeoutIds = useRef<Set<any>>(new Set([]))\n  const isComposition = useRef<boolean>(false)\n\n  const [resolvedItems, setResolvedItems] = useState<\n    AutocompleteItem[] | undefined\n  >(items)\n  const [value, setValue] = useControllableState({\n    value: rest.value,\n    defaultValue: rest.defaultValue,\n    onChange: rest.onChange,\n  })\n  const [label, setLabel] = useState<T | undefined>(undefined)\n  const [inputValue, setInputValue] = useState<string>(\"\")\n  const [focusedIndex, setFocusedIndex] = useState<number>(-1)\n  const [isAllSelected, setIsAllSelected] = useState<boolean>(false)\n  const [isHit, setIsHit] = useState<boolean>(true)\n\n  const [isOpen, setIsOpen] = useState<boolean>(defaultIsOpen ?? false)\n\n  const isFocused = focusedIndex > -1\n  const isCreate = focusedIndex === -2 && allowCreate\n  const isMulti = isArray(value)\n  const isEmptyValue = !isMulti ? !value : !value.length\n\n  const [firstInsertPositionItem, secondInsertPositionItem] = useMemo(() => {\n    if (isArray(insertPositionItem)) {\n      return insertPositionItem\n    } else {\n      return [insertPositionItem, \"first\"]\n    }\n  }, [insertPositionItem])\n\n  if (allowCreate && !isUndefined(children)) {\n    console.warn(\n      `${!isMulti ? \"Autocomplete\" : \"MultiAutocomplete\"}: ${\n        !isMulti ? \"Autocomplete\" : \"MultiAutocomplete\"\n      } internally prefers 'children'. If 'allowCreate' is true, it will not be reflected correctly. If want to reflect, please set 'items' in props.`,\n    )\n  }\n\n  const selectedValues = descendants.enabledValues(\n    ({ node }) => isMulti && value.includes(node.dataset.value ?? \"\"),\n  )\n  const selectedIndexes = selectedValues.map(({ index }) => index)\n  const enabledValues = descendants.enabledValues(\n    ({ node, index }) =>\n      \"target\" in node.dataset && !selectedIndexes.includes(index),\n  )\n\n  const validChildren = getValidChildren(children)\n\n  const computedChildren = resolvedItems?.map((item, i) => {\n    if (\"value\" in item) {\n      const { label, value, ...props } = item\n\n      return (\n        <AutocompleteOption key={i} value={value} {...props}>\n          {label}\n        </AutocompleteOption>\n      )\n    } else if (\"items\" in item) {\n      const { label, items = [], ...props } = item\n\n      return (\n        <AutocompleteOptionGroup\n          key={i}\n          label={label as string}\n          {...(props as HTMLUIProps<\"ul\">)}\n        >\n          {items.map(({ label, value, ...props }, i) => (\n            <AutocompleteOption key={i} value={value} {...props}>\n              {label}\n            </AutocompleteOption>\n          ))}\n        </AutocompleteOptionGroup>\n      )\n    }\n  })\n\n  const isEmpty = !validChildren.length && !computedChildren?.length\n\n  const onOpen = useCallback(() => {\n    if (formControlProps.disabled || formControlProps.readOnly) return\n\n    if (!allowCreate && (isEmpty || isAllSelected)) return\n\n    setIsOpen(true)\n\n    if (inputRef.current) inputRef.current.focus()\n\n    rest.onOpen?.()\n  }, [allowCreate, formControlProps, isAllSelected, isEmpty, rest])\n\n  const onClose = useCallback(() => {\n    setIsOpen(false)\n\n    rest.onClose?.()\n  }, [rest])\n\n  const onFocusFirst = useCallback(() => {\n    const id = setTimeout(() => {\n      if (isEmpty || isAllSelected) return\n\n      const first = descendants.enabledfirstValue(\n        ({ node }) => \"target\" in node.dataset,\n      )\n\n      if (!first) return\n\n      if (!isMulti || !omitSelectedValues) {\n        setFocusedIndex(first.index)\n      } else {\n        if (selectedIndexes.includes(first.index)) {\n          const enabledFirst = enabledValues[0]\n\n          setFocusedIndex(enabledFirst.index)\n        } else {\n          setFocusedIndex(first.index)\n        }\n      }\n    })\n\n    timeoutIds.current.add(id)\n  }, [\n    descendants,\n    enabledValues,\n    isAllSelected,\n    isEmpty,\n    isMulti,\n    omitSelectedValues,\n    selectedIndexes,\n  ])\n\n  const onFocusLast = useCallback(() => {\n    const id = setTimeout(() => {\n      if (isEmpty || isAllSelected) return\n\n      const last = descendants.enabledlastValue(\n        ({ node }) => \"target\" in node.dataset,\n      )\n\n      if (!last) return\n\n      if (!isMulti || !omitSelectedValues) {\n        setFocusedIndex(last.index)\n      } else {\n        if (selectedIndexes.includes(last.index)) {\n          const enabledlast = enabledValues.reverse()[0]\n\n          setFocusedIndex(enabledlast.index)\n        } else {\n          setFocusedIndex(last.index)\n        }\n      }\n    })\n\n    timeoutIds.current.add(id)\n  }, [\n    descendants,\n    enabledValues,\n    isAllSelected,\n    isEmpty,\n    isMulti,\n    omitSelectedValues,\n    selectedIndexes,\n  ])\n\n  const onFocusSelected = useCallback(() => {\n    const id = setTimeout(() => {\n      const values = descendants.enabledValues()\n\n      const selected = values.find(({ node }) =>\n        !isMulti\n          ? node.dataset.value === value\n          : value.includes(node.dataset.value ?? \"\"),\n      )\n\n      if (selected) setFocusedIndex(selected.index)\n    })\n\n    timeoutIds.current.add(id)\n  }, [descendants, isMulti, value])\n\n  const onFocusNext = useCallback(\n    (index: number = focusedIndex) => {\n      const id = setTimeout(() => {\n        const next = descendants.enabledNextValue(\n          index,\n          ({ node }) => \"target\" in node.dataset,\n        )\n\n        if (!next) return\n\n        if (!isMulti || !omitSelectedValues) {\n          setFocusedIndex(next.index)\n        } else {\n          if (selectedIndexes.includes(next.index)) {\n            const enabledNext =\n              enabledValues.find(({ index }) => next.index < index) ??\n              enabledValues[0]\n\n            setFocusedIndex(enabledNext.index)\n          } else {\n            setFocusedIndex(next.index)\n          }\n        }\n      })\n\n      timeoutIds.current.add(id)\n    },\n    [\n      descendants,\n      enabledValues,\n      focusedIndex,\n      isMulti,\n      omitSelectedValues,\n      selectedIndexes,\n    ],\n  )\n\n  const onFocusPrev = useCallback(\n    (index: number = focusedIndex) => {\n      const id = setTimeout(() => {\n        const prev = descendants.enabledPrevValue(\n          index,\n          ({ node }) => \"target\" in node.dataset,\n        )\n\n        if (!prev) return\n\n        if (!isMulti || !omitSelectedValues) {\n          setFocusedIndex(prev.index)\n        } else {\n          if (selectedIndexes.includes(prev.index)) {\n            const enabledPrev =\n              enabledValues.reverse().find(({ index }) => index < prev.index) ??\n              enabledValues[0]\n\n            setFocusedIndex(enabledPrev.index)\n          } else {\n            setFocusedIndex(prev.index)\n          }\n        }\n      })\n\n      timeoutIds.current.add(id)\n    },\n    [\n      descendants,\n      enabledValues,\n      focusedIndex,\n      isMulti,\n      omitSelectedValues,\n      selectedIndexes,\n    ],\n  )\n\n  const onFocusFirstOrSelected =\n    isEmptyValue || omitSelectedValues ? onFocusFirst : onFocusSelected\n  const onFocusLastOrSelected =\n    isEmptyValue || omitSelectedValues ? onFocusLast : onFocusSelected\n\n  const pickOptions = useCallback(\n    (value: string) => {\n      const values = descendants.values()\n\n      let isHit = false\n      let isFocused = false\n\n      values.forEach(({ node, index }) => {\n        if (format(node.textContent ?? \"\").includes(value)) {\n          isHit = true\n\n          const isDisabled = \"disabled\" in node.dataset\n\n          node.dataset.target = \"\"\n\n          if (!isFocused && !isDisabled) {\n            isFocused = true\n            setFocusedIndex(index)\n          }\n        } else {\n          delete node.dataset.target\n        }\n      })\n\n      setIsHit(isHit)\n    },\n    [descendants, format],\n  )\n\n  const rebirthOptions = useCallback(\n    (runFocus = true) => {\n      const values = descendants.values()\n\n      values.forEach(({ node }) => {\n        node.dataset.target = \"\"\n      })\n\n      if (runFocus) onFocusFirst()\n\n      setIsHit(true)\n    },\n    [descendants, onFocusFirst],\n  )\n\n  const onChangeLabel = useCallback(\n    (newValue: string, runOmit: boolean = true) => {\n      const enabledValues = descendants.enabledValues()\n      const selectedValues = enabledValues\n        .filter(({ node }) => node.dataset.value === newValue)\n        .map(({ node }) => node.textContent ?? \"\")\n\n      if (allowFree && selectedValues.length === 0) {\n        selectedValues.push(newValue)\n        setInputValue(\"\")\n      }\n\n      setLabel((prev) => {\n        if (!isMulti) {\n          return selectedValues[0] as T\n        } else {\n          selectedValues.forEach((selectedValue) => {\n            const isSelected =\n              isArray(prev) && prev.includes(selectedValue ?? \"\")\n\n            if (!isSelected) {\n              prev = [...(isArray(prev) ? prev : []), selectedValue] as T\n            } else if (runOmit) {\n              prev = (\n                isArray(prev)\n                  ? prev.filter((value) => value !== selectedValue)\n                  : undefined\n              ) as T\n            }\n          })\n\n          return prev\n        }\n      })\n    },\n    [descendants, isMulti, allowFree],\n  )\n\n  const onChange = useCallback(\n    (newValue: string) => {\n      setValue((prev) => {\n        if (!isArray(prev)) {\n          return newValue as T\n        } else {\n          const isSelected = prev.includes(newValue)\n\n          if (!isSelected) {\n            return [...prev, newValue] as T\n          } else {\n            return prev.filter((value) => value !== newValue) as T\n          }\n        }\n      })\n      const isHit =\n        descendants\n          .values()\n          .filter(({ node }) =>\n            format(node.textContent ?? \"\").includes(newValue),\n          ).length > 0\n      onChangeLabel(newValue)\n      if (!allowFree || isHit) {\n        setInputValue(\"\")\n      }\n      rebirthOptions(false)\n    },\n    [allowFree, onChangeLabel, rebirthOptions, setValue, descendants, format],\n  )\n\n  const onSelect = useCallback(() => {\n    let enabledValue = descendants.value(focusedIndex)\n\n    if (\"disabled\" in (enabledValue?.node.dataset ?? {}))\n      enabledValue = undefined\n\n    if (!enabledValue) return\n\n    const value = enabledValue.node.dataset.value ?? \"\"\n\n    onChange(value)\n\n    if (closeOnSelect) onClose()\n\n    if (omitSelectedValues) onFocusNext()\n  }, [\n    closeOnSelect,\n    descendants,\n    focusedIndex,\n    omitSelectedValues,\n    onChange,\n    onClose,\n    onFocusNext,\n  ])\n\n  const onSearch = useCallback(\n    (ev: ChangeEvent<HTMLInputElement>) => {\n      if (!isOpen) onOpen()\n\n      rest.onSearch?.(ev)\n\n      const value = ev.target.value\n      const computedValue = format(value)\n\n      if (computedValue) {\n        pickOptions(computedValue)\n      } else {\n        rebirthOptions()\n      }\n\n      setInputValue(value)\n    },\n    [isOpen, onOpen, format, rest, pickOptions, rebirthOptions],\n  )\n\n  const onCompositionStart = useCallback(() => {\n    isComposition.current = true\n  }, [])\n\n  const onCompositionEnd = useCallback(() => {\n    isComposition.current = false\n  }, [])\n\n  const onCreate = useCallback(() => {\n    if (!listRef.current) return\n\n    const newItem: AutocompleteItem = { label: inputValue, value: inputValue }\n\n    let newItems: AutocompleteItem[] = []\n\n    if (resolvedItems) newItems = resolvedItems\n\n    if (firstInsertPositionItem === \"first\") {\n      newItems = [newItem, ...newItems]\n    } else if (firstInsertPositionItem === \"last\") {\n      newItems = [...newItems, newItem]\n    } else {\n      const i = newItems.findIndex(\n        ({ label }) => label === firstInsertPositionItem,\n      )\n\n      const targetItem = newItems[i]\n\n      if (i !== -1 && \"items\" in targetItem) {\n        if (secondInsertPositionItem === \"first\") {\n          targetItem.items = [newItem, ...(targetItem.items ?? [])]\n        } else {\n          targetItem.items = [...(targetItem.items ?? []), newItem]\n        }\n\n        newItems[i] = targetItem\n      } else {\n        console.warn(\n          `${\n            !isMulti ? \"Autocomplete\" : \"MultiAutocomplete\"\n          }: '${firstInsertPositionItem}' specified in insertPositionItem does not exist in the option group.`,\n        )\n      }\n    }\n\n    setResolvedItems(newItems)\n    onChange(inputValue)\n    rebirthOptions(false)\n\n    const index = flattenItems(newItems).findIndex(\n      ({ value }) => value === inputValue,\n    )\n\n    setFocusedIndex(index)\n\n    rest.onCreate?.(newItem, newItems)\n  }, [\n    inputValue,\n    resolvedItems,\n    firstInsertPositionItem,\n    onChange,\n    rebirthOptions,\n    rest,\n    secondInsertPositionItem,\n    isMulti,\n  ])\n\n  const onDelete = useCallback(() => {\n    if (!isMulti) {\n      onChange(\"\")\n    } else {\n      onChange(value[value.length - 1])\n    }\n  }, [isMulti, onChange, value])\n\n  const onClear = useCallback(\n    (ev: MouseEvent<HTMLDivElement>) => {\n      ev.stopPropagation()\n\n      setValue([] as unknown as T)\n      setLabel(undefined)\n      setInputValue(\"\")\n      rebirthOptions()\n    },\n    [setLabel, setInputValue, setValue, rebirthOptions],\n  )\n\n  const onClick = useCallback(() => {\n    if (isOpen) {\n      if (inputRef.current) inputRef.current.focus()\n    } else {\n      onOpen()\n\n      onFocusFirstOrSelected()\n    }\n  }, [isOpen, onFocusFirstOrSelected, onOpen])\n\n  const onFocus = useCallback(() => {\n    if (isOpen) return\n\n    onOpen()\n\n    onFocusFirstOrSelected()\n  }, [isOpen, onFocusFirstOrSelected, onOpen])\n\n  const onBlur = useCallback(\n    (ev: FocusEvent<HTMLDivElement>) => {\n      const relatedTarget = getEventRelatedTarget(ev)\n\n      if (isContains(containerRef.current, relatedTarget)) return\n\n      if (!closeOnBlur && isHit) return\n\n      if (allowFree && !!inputValue) {\n        onChange(inputValue)\n      } else {\n        setInputValue(\"\")\n      }\n\n      if (isOpen) onClose()\n    },\n    [closeOnBlur, isHit, isOpen, inputValue, allowFree, onClose, onChange],\n  )\n\n  const onKeyDown = useCallback(\n    (ev: KeyboardEvent<HTMLDivElement>) => {\n      if (ev.key === \" \") ev.key = ev.code\n\n      if (formControlProps.disabled || formControlProps.readOnly) return\n      if (isComposition.current) return\n\n      const enabledDelete = label === inputValue || !inputValue.length\n\n      const actions: Record<string, Function | undefined> = {\n        ArrowDown: isFocused\n          ? () => onFocusNext()\n          : !isOpen\n          ? funcAll(onOpen, onFocusFirstOrSelected)\n          : undefined,\n        ArrowUp: isFocused\n          ? () => onFocusPrev()\n          : !isOpen\n          ? funcAll(onOpen, onFocusLastOrSelected)\n          : undefined,\n        Space: isCreate\n          ? onCreate\n          : isFocused\n          ? onSelect\n          : !isOpen\n          ? funcAll(onOpen, onFocusFirstOrSelected)\n          : undefined,\n        Enter: isCreate\n          ? onCreate\n          : isFocused\n          ? onSelect\n          : !isOpen\n          ? funcAll(onOpen, onFocusFirstOrSelected)\n          : allowFree && isMulti\n          ? () => {\n              if (inputValue) onChange(inputValue)\n              setFocusedIndex(0)\n            }\n          : undefined,\n        Home: isOpen ? onFocusFirst : undefined,\n        End: isOpen ? onFocusLast : undefined,\n        Escape: closeOnEsc ? onClose : undefined,\n        Backspace: !isEmptyValue && enabledDelete ? onDelete : undefined,\n      }\n\n      const action = actions[ev.key]\n\n      if (!action) return\n\n      ev.preventDefault()\n      ev.stopPropagation()\n\n      action(ev)\n    },\n    [\n      allowFree,\n      formControlProps,\n      label,\n      inputValue,\n      onOpen,\n      isFocused,\n      isMulti,\n      onFocusFirstOrSelected,\n      onFocusNext,\n      onFocusLastOrSelected,\n      onFocusPrev,\n      isCreate,\n      onCreate,\n      onSelect,\n      isOpen,\n      onFocusFirst,\n      onFocusLast,\n      closeOnEsc,\n      onClose,\n      isEmptyValue,\n      onDelete,\n      onChange,\n    ],\n  )\n\n  useEffect(() => {\n    if (!isMulti) return\n\n    if (!omitSelectedValues && isUndefined(maxSelectedValues)) return\n\n    const isAll = value.length > 0 && value.length === descendants.count()\n    const isMax = value.length === maxSelectedValues\n\n    if (isAll || isMax) {\n      onClose()\n      setIsAllSelected(true)\n    } else {\n      setIsAllSelected(false)\n    }\n  }, [\n    omitSelectedValues,\n    value,\n    descendants,\n    isMulti,\n    onClose,\n    maxSelectedValues,\n  ])\n\n  useUpdateEffect(() => {\n    if (isOpen || allowFree) return\n\n    setFocusedIndex(-1)\n    setInputValue(\"\")\n  }, [isOpen])\n\n  useUpdateEffect(() => {\n    if (!isHit) setFocusedIndex(-2)\n  }, [isHit])\n\n  useUnmountEffect(() => {\n    timeoutIds.current.forEach((id) => clearTimeout(id))\n    timeoutIds.current.clear()\n  })\n\n  useOutsideClick({\n    ref: containerRef,\n    handler: onClose,\n    enabled: closeOnBlur || !isHit,\n  })\n\n  const getPopoverProps = useCallback(\n    (props?: PopoverProps): PopoverProps => ({\n      matchWidth: true,\n      ...rest,\n      ...props,\n      isOpen,\n      onOpen,\n      onClose,\n      placement,\n      duration,\n      trigger: \"never\",\n      closeOnButton: false,\n    }),\n    [duration, isOpen, onClose, onOpen, placement, rest],\n  )\n\n  const getContainerProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ref: mergeRefs(containerRef, ref),\n      ...containerProps,\n      ...props,\n      ...formControlProps,\n      onClick: handlerAll(props.onClick, rest.onClick, onClick),\n      onBlur: handlerAll(props.onBlur, rest.onBlur, onBlur),\n    }),\n\n    [containerProps, formControlProps, onBlur, onClick, rest],\n  )\n\n  const getFieldProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ref,\n      tabIndex: -1,\n      ...props,\n      ...formControlProps,\n      placeholder,\n      \"data-active\": dataAttr(isOpen),\n      \"aria-expanded\": dataAttr(isOpen),\n      onFocus: handlerAll(props.onFocus, rest.onFocus, onFocus),\n      onKeyDown: handlerAll(props.onKeyDown, rest.onKeyDown, onKeyDown),\n    }),\n    [formControlProps, placeholder, isOpen, rest, onFocus, onKeyDown],\n  )\n\n  return {\n    id,\n    descendants,\n    value,\n    label,\n    inputValue,\n    isHit,\n    isEmpty,\n    computedChildren,\n    focusedIndex,\n    omitSelectedValues,\n    closeOnSelect,\n    allowCreate,\n    allowFree,\n    emptyMessage,\n    isOpen,\n    isAllSelected,\n    listRef,\n    inputRef,\n    optionProps,\n    formControlProps,\n    setFocusedIndex,\n    onChangeLabel,\n    onChange,\n    onSearch,\n    onCreate,\n    onClear,\n    onCompositionStart,\n    onCompositionEnd,\n    pickOptions,\n    rebirthOptions,\n    onOpen,\n    onClose,\n    onFocusFirst,\n    onFocusLast,\n    onFocusSelected,\n    onFocusNext,\n    onFocusPrev,\n    getPopoverProps,\n    getContainerProps,\n    getFieldProps,\n    inputProps,\n  }\n}\n\nexport type UseAutocompleteReturn = ReturnType<typeof useAutocomplete>\n\nexport const useAutocompleteInput = () => {\n  const {\n    id,\n    inputRef,\n    onSearch,\n    onCompositionStart,\n    onCompositionEnd,\n    isAllSelected,\n    formControlProps,\n    inputProps,\n  } = useAutocompleteContext()\n\n  useUpdateEffect(() => {\n    if (isAllSelected && inputRef.current) inputRef.current.blur()\n  }, [isAllSelected])\n\n  const getInputProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ref: mergeRefs(inputRef, ref),\n      ...formControlProps,\n      ...inputProps,\n      ...props,\n      id,\n      cursor: formControlProps.readOnly ? \"default\" : \"text\",\n      pointerEvents:\n        formControlProps.disabled || isAllSelected ? \"none\" : \"auto\",\n      tabIndex: isAllSelected ? -1 : 0,\n      onChange: handlerAll(props.onChange, onSearch),\n      onCompositionStart: handlerAll(\n        props.onCompositionStart,\n        inputProps.onCompositionStart,\n        onCompositionStart,\n      ),\n      onCompositionEnd: handlerAll(\n        props.onCompositionEnd,\n        inputProps.onCompositionEnd,\n        onCompositionEnd,\n      ),\n    }),\n    [\n      inputProps,\n      inputRef,\n      formControlProps,\n      id,\n      isAllSelected,\n      onSearch,\n      onCompositionStart,\n      onCompositionEnd,\n    ],\n  )\n\n  return {\n    getInputProps,\n  }\n}\n\nexport type UseAutocompleteInputReturn = ReturnType<typeof useAutocompleteInput>\n\nexport const useAutocompleteList = () => {\n  const { focusedIndex, isOpen, listRef, rebirthOptions } =\n    useAutocompleteContext()\n\n  const descendants = useAutocompleteDescendantsContext()\n\n  const beforeFocusedIndex = useRef<number>(-1)\n  const selectedValue = descendants.value(focusedIndex)\n\n  const onAnimationComplete = useCallback(() => {\n    if (!isOpen) rebirthOptions(false)\n  }, [isOpen, rebirthOptions])\n\n  useEffect(() => {\n    if (!listRef.current || !selectedValue) return\n\n    if (beforeFocusedIndex.current === selectedValue.index) return\n\n    const parent = listRef.current\n    const child = selectedValue.node\n\n    const parentHeight = parent.clientHeight\n    const viewTop = parent.scrollTop\n    const viewBottom = viewTop + parentHeight\n\n    const childHeight = child.clientHeight\n    const childTop = child.offsetTop\n    const childBottom = childTop + childHeight\n\n    const isInView = viewTop <= childTop && childBottom <= viewBottom\n\n    const isScrollBottom = beforeFocusedIndex.current < selectedValue.index\n\n    if (!isInView) {\n      if (childBottom <= parentHeight) {\n        listRef.current.scrollTo({ top: 0 })\n      } else {\n        if (!isScrollBottom) {\n          listRef.current.scrollTo({ top: childTop + 1 })\n        } else {\n          listRef.current.scrollTo({ top: childBottom - parentHeight })\n        }\n      }\n    }\n\n    beforeFocusedIndex.current = selectedValue.index\n  }, [listRef, selectedValue])\n\n  useUpdateEffect(() => {\n    if (!isOpen) beforeFocusedIndex.current = -1\n  }, [isOpen])\n\n  const getListProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      as: \"ul\",\n      ref: mergeRefs(listRef, ref),\n      role: \"select\",\n      tabIndex: -1,\n      ...props,\n      onAnimationComplete: handlerAll(\n        props.onAnimationComplete,\n        onAnimationComplete,\n      ),\n    }),\n    [listRef, onAnimationComplete],\n  )\n\n  return {\n    getListProps,\n  }\n}\n\nexport type UseAutocompleteOptionGroupProps = HTMLUIProps<\"ul\"> & {\n  /**\n   * The label of the autocomplete option group.\n   */\n  label: string\n}\n\nexport const useAutocompleteOptionGroup = ({\n  label,\n  ...rest\n}: UseAutocompleteOptionGroupProps) => {\n  const { value, omitSelectedValues } = useAutocompleteContext()\n\n  const isMulti = isArray(value)\n\n  const descendants = useAutocompleteDescendantsContext()\n\n  const values = descendants.values()\n  const selectedValues =\n    isMulti && omitSelectedValues\n      ? descendants.values(({ node }) =>\n          value.includes(node.dataset.value ?? \"\"),\n        )\n      : []\n  const selectedIndexes = selectedValues.map(({ index }) => index)\n  const childValues = values.filter(\n    ({ node, index }) =>\n      node.parentElement?.dataset.label === label &&\n      !selectedIndexes.includes(index) &&\n      \"target\" in node.dataset,\n  )\n\n  const isEmpty = !childValues.length\n\n  const computedRest = splitObject(rest, layoutStylesProperties)\n\n  const getContainerProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const style: CSSProperties = {\n        border: \"0px\",\n        clip: \"rect(0px, 0px, 0px, 0px)\",\n        height: \"1px\",\n        width: \"1px\",\n        margin: \"-1px\",\n        padding: \"0px\",\n        overflow: \"hidden\",\n        whiteSpace: \"nowrap\",\n        position: \"absolute\",\n      }\n\n      return {\n        ref,\n        ...props,\n        ...computedRest[0],\n        style: isEmpty ? style : undefined,\n        \"data-label\": label,\n        role: \"autocomplete-group-container\",\n      }\n    },\n    [computedRest, isEmpty, label],\n  )\n\n  const getGroupProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ref,\n      ...props,\n      ...computedRest[1],\n      \"data-label\": label,\n      role: \"autocomplete-group\",\n    }),\n    [computedRest, label],\n  )\n\n  return {\n    label,\n    getContainerProps,\n    getGroupProps,\n  }\n}\n\nexport type UseAutocompleteOptionGroupReturn = ReturnType<\n  typeof useAutocompleteOptionGroup\n>\n\nexport type UseAutocompleteOptionProps = Omit<\n  HTMLUIProps<\"li\">,\n  \"value\" | \"children\"\n> & {\n  /**\n   * The value of the select option.\n   */\n  value?: string\n  /**\n   * The label of the select option.\n   */\n  children?: string\n  /**\n   * If `true`, the select option will be disabled.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the select option will be focusable.\n   *\n   * @default false\n   */\n  isFocusable?: boolean\n  /**\n   * If `true`, the list element will be closed when selected.\n   *\n   * @default false\n   */\n  closeOnSelect?: boolean\n}\n\nexport const useAutocompleteOption = (props: UseAutocompleteOptionProps) => {\n  const {\n    value,\n    omitSelectedValues,\n    onChange,\n    onChangeLabel,\n    focusedIndex,\n    setFocusedIndex,\n    onClose,\n    closeOnSelect: generalCloseOnSelect,\n    optionProps,\n    inputRef,\n    onFocusNext,\n  } = useAutocompleteContext()\n\n  let {\n    icon: customIcon,\n    isDisabled,\n    isFocusable,\n    closeOnSelect: customCloseOnSelect,\n    children,\n    ...computedProps\n  } = { ...optionProps, ...props }\n\n  const trulyDisabled = !!isDisabled && !isFocusable\n\n  const itemRef = useRef<HTMLLIElement>(null)\n\n  const { index, register, descendants } = useAutocompleteDescendant({\n    disabled: trulyDisabled,\n  })\n\n  const values = descendants.values()\n  const frontValues = values.slice(0, index)\n\n  const isMulti = isArray(value)\n  const isDuplicated = !isMulti\n    ? frontValues.some(\n        ({ node }) => node.dataset.value === (computedProps.value ?? \"\"),\n      )\n    : false\n\n  const isSelected =\n    !isDuplicated &&\n    (!isMulti\n      ? (computedProps.value ?? \"\") === value\n      : value.includes(computedProps.value ?? \"\"))\n  const isTarget = \"target\" in (itemRef.current?.dataset ?? {})\n  const isFocused = index === focusedIndex\n\n  const onClick = useCallback(\n    (ev: MouseEvent<HTMLLIElement>) => {\n      ev.stopPropagation()\n\n      if (isDisabled) {\n        if (inputRef.current) inputRef.current.focus()\n\n        return\n      }\n\n      if (!isTargetOption(ev.currentTarget)) {\n        if (inputRef.current) inputRef.current.focus()\n\n        return\n      }\n\n      setFocusedIndex(index)\n\n      onChange(computedProps.value ?? \"\")\n\n      if (inputRef.current) inputRef.current.focus()\n\n      if (customCloseOnSelect ?? generalCloseOnSelect) onClose()\n\n      if (omitSelectedValues) onFocusNext(index)\n    },\n    [\n      onFocusNext,\n      omitSelectedValues,\n      isDisabled,\n      computedProps,\n      setFocusedIndex,\n      index,\n      onChange,\n      customCloseOnSelect,\n      generalCloseOnSelect,\n      onClose,\n      inputRef,\n    ],\n  )\n\n  useEffect(() => {\n    if (isSelected) onChangeLabel(computedProps.value ?? \"\", false)\n  }, [computedProps, isSelected, onChangeLabel])\n\n  const getOptionProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const style: CSSProperties = {\n        border: \"0px\",\n        clip: \"rect(0px, 0px, 0px, 0px)\",\n        height: \"1px\",\n        width: \"1px\",\n        margin: \"-1px\",\n        padding: \"0px\",\n        overflow: \"hidden\",\n        whiteSpace: \"nowrap\",\n        position: \"absolute\",\n      }\n\n      return {\n        ref: mergeRefs(itemRef, ref, register),\n        ...omitObject(computedProps, [\"value\"]),\n        ...props,\n        role: \"autocomplete-item\",\n        tabIndex: -1,\n        style:\n          !isTarget || (omitSelectedValues && isSelected) ? style : undefined,\n        \"data-target\": dataAttr(true),\n        \"data-value\": computedProps.value ?? \"\",\n        \"data-focus\": dataAttr(isFocused),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"aria-checked\": ariaAttr(isSelected),\n        \"aria-disabled\": ariaAttr(isDisabled),\n        onClick: handlerAll(computedProps.onClick, props.onClick, onClick),\n      }\n    },\n    [\n      computedProps,\n      isDisabled,\n      isFocused,\n      isSelected,\n      isTarget,\n      omitSelectedValues,\n      onClick,\n      register,\n    ],\n  )\n\n  return {\n    isSelected,\n    isFocused,\n    customIcon,\n    children,\n    getOptionProps,\n  }\n}\n\nexport type UseAutocompleteOptionReturn = ReturnType<\n  typeof useAutocompleteOption\n>\n\nexport const useAutocompleteCreate = () => {\n  const { isHit, onCreate } = useAutocompleteContext()\n\n  const getCreateProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const style: CSSProperties = {\n        border: \"0px\",\n        clip: \"rect(0px, 0px, 0px, 0px)\",\n        height: \"1px\",\n        width: \"1px\",\n        margin: \"-1px\",\n        padding: \"0px\",\n        overflow: \"hidden\",\n        whiteSpace: \"nowrap\",\n        position: \"absolute\",\n      }\n\n      return {\n        ref,\n        ...props,\n        tabIndex: -1,\n        style: isHit ? style : undefined,\n        \"data-focus\": dataAttr(!isHit),\n        onClick: handlerAll(props.onClick, onCreate),\n      }\n    },\n    [isHit, onCreate],\n  )\n\n  return { getCreateProps }\n}\n\nexport type UseAutocompleteCreateReturn = ReturnType<\n  typeof useAutocompleteCreate\n>\n\nexport const useAutocompleteEmpty = () => {\n  const { isHit, isEmpty } = useAutocompleteContext()\n\n  const getEmptyProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const style: CSSProperties = {\n        border: \"0px\",\n        clip: \"rect(0px, 0px, 0px, 0px)\",\n        height: \"1px\",\n        width: \"1px\",\n        margin: \"-1px\",\n        padding: \"0px\",\n        overflow: \"hidden\",\n        whiteSpace: \"nowrap\",\n        position: \"absolute\",\n      }\n\n      return {\n        ref,\n        ...props,\n        tabIndex: -1,\n        style: isHit && !isEmpty ? style : undefined,\n      }\n    },\n    [isHit, isEmpty],\n  )\n\n  return { getEmptyProps }\n}\n\nexport type UseAutocompleteEmptyReturn = ReturnType<typeof useAutocompleteEmpty>\n","import type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { ChevronIcon, CloseIcon } from \"@yamada-ui/icon\"\nimport { useClickable } from \"@yamada-ui/use-clickable\"\nimport { cx, getValidChildren, isValidElement } from \"@yamada-ui/utils\"\nimport type { FC, HTMLAttributes } from \"react\"\nimport { cloneElement, useRef } from \"react\"\nimport { useAutocompleteContext } from \"./use-autocomplete\"\n\nexport type AutocompleteIconProps = HTMLUIProps<\"div\">\n\nexport const AutocompleteIcon = forwardRef<AutocompleteIconProps, \"div\">(\n  ({ className, children, __css, ...rest }, ref) => {\n    const { styles } = useAutocompleteContext()\n\n    const css: CSSUIObject = {\n      position: \"absolute\",\n      top: \"50%\",\n      transform: \"translateY(-50%)\",\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      pointerEvents: \"none\",\n      cursor: \"pointer\",\n      ...styles.icon,\n      ...__css,\n    }\n\n    const validChildren = getValidChildren(children)\n\n    const cloneChildren = validChildren.map((child) =>\n      cloneElement(child, {\n        focusable: false,\n        \"aria-hidden\": true,\n        style: {\n          maxWidth: \"1em\",\n          maxHeight: \"1em\",\n          color: \"currentColor\",\n        },\n      }),\n    )\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-autocomplete__icon\", className)}\n        __css={css}\n        {...rest}\n      >\n        {isValidElement(children) ? cloneChildren : <ChevronIcon />}\n      </ui.div>\n    )\n  },\n)\n\nexport type AutocompleteClearIconProps = AutocompleteIconProps & {\n  disabled?: boolean\n}\n\nexport const AutocompleteClearIcon: FC<AutocompleteClearIconProps> = ({\n  className,\n  children,\n  ...props\n}) => {\n  const ref = useRef<HTMLDivElement>(null)\n  const { styles } = useAutocompleteContext()\n\n  const isDisabled = props.disabled\n\n  const rest = useClickable({\n    ref,\n    isDisabled,\n    ...(props as HTMLAttributes<HTMLElement>),\n  })\n\n  return (\n    <AutocompleteIcon\n      className={cx(\"ui-autocomplete__icon--clear\", className)}\n      __css={styles.clearIcon}\n      {...rest}\n    >\n      {children ?? <CloseIcon w=\"0.5em\" h=\"0.5em\" />}\n    </AutocompleteIcon>\n  )\n}\n\nexport type AutocompleteItemIconProps = HTMLUIProps<\"span\">\n\nexport const AutocompleteItemIcon = forwardRef<\n  AutocompleteItemIconProps,\n  \"span\"\n>(({ className, ...rest }, ref) => {\n  const { styles } = useAutocompleteContext()\n\n  const css: CSSUIObject = {\n    flexShrink: 0,\n    display: \"inline-flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    fontSize: \"0.85em\",\n    ...styles.itemIcon,\n  }\n\n  return (\n    <ui.span\n      ref={ref}\n      className={cx(\"ui-autocomplete__item__icon\", className)}\n      __css={css}\n      {...rest}\n    />\n  )\n})\n","import type { CSSUIObject, CSSUIProps, HTMLUIProps } from \"@yamada-ui/core\"\nimport { forwardRef } from \"@yamada-ui/core\"\nimport { PopoverContent } from \"@yamada-ui/popover\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useAutocompleteContext, useAutocompleteList } from \"./use-autocomplete\"\n\nexport type AutocompleteListProps = HTMLUIProps<\"ul\">\n\nexport const AutocompleteList = forwardRef<AutocompleteListProps, \"ul\">(\n  ({ className, w, width, minW, minWidth, ...rest }, ref) => {\n    const { styles } = useAutocompleteContext()\n\n    const { getListProps } = useAutocompleteList()\n\n    w =\n      w ?? width ?? ((styles.list?.w ?? styles.list?.width) as CSSUIProps[\"w\"])\n    minW =\n      minW ??\n      minWidth ??\n      ((styles.list?.minW ?? styles.list?.minWidth) as CSSUIProps[\"minW\"])\n\n    const css: CSSUIObject = { ...styles.list }\n\n    return (\n      <PopoverContent\n        className={cx(\"ui-autocomplete__list\", className)}\n        w={w}\n        minW={minW}\n        __css={css}\n        {...getListProps(rest, ref)}\n      />\n    )\n  },\n)\n","import type { HTMLUIProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport type { UseAutocompleteOptionGroupProps } from \"./use-autocomplete\"\nimport {\n  useAutocompleteContext,\n  useAutocompleteOptionGroup,\n} from \"./use-autocomplete\"\n\ntype AutocompleteOptionGroupOptions = UseAutocompleteOptionGroupProps\n\nexport type AutocompleteOptionGroupProps = HTMLUIProps<\"ul\"> &\n  AutocompleteOptionGroupOptions\n\nexport const AutocompleteOptionGroup = forwardRef<\n  AutocompleteOptionGroupProps,\n  \"ul\"\n>(\n  (\n    { className, color, h, height, minH, minHeight, children, ...rest },\n    ref,\n  ) => {\n    const { styles } = useAutocompleteContext()\n    const { label, getContainerProps, getGroupProps } =\n      useAutocompleteOptionGroup(rest)\n\n    h ??= height\n    minH ??= minHeight\n\n    return (\n      <ui.li\n        className={cx(\n          \"ui-autocomplete__item\",\n          \"ui-autocomplete__item--group\",\n          className,\n        )}\n        __css={{ w: \"100%\", h: \"fit-content\", color }}\n        {...getContainerProps()}\n      >\n        <ui.span\n          className={cx(\"ui-autocomplete__item__group-label\")}\n          __css={styles.groupLabel}\n          noOfLines={1}\n        >\n          {label}\n        </ui.span>\n\n        <ui.ul\n          {...getGroupProps({}, ref)}\n          className={cx(\"ui-autocomplete__item__group\", className)}\n          __css={{ h, minH, ...styles.group }}\n        >\n          {children}\n        </ui.ul>\n      </ui.li>\n    )\n  },\n)\n","import type { CSSUIObject } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport type { FC, ReactElement } from \"react\"\nimport { AutocompleteItemIcon } from \"./autocomplete-icon\"\nimport type { UseAutocompleteOptionProps } from \"./use-autocomplete\"\nimport {\n  useAutocompleteContext,\n  useAutocompleteOption,\n} from \"./use-autocomplete\"\n\ntype AutocompleteOptionOptions = {\n  /**\n   * The autocomplete option icon to use.\n   */\n  icon?: ReactElement\n}\n\nexport type AutocompleteOptionProps = UseAutocompleteOptionProps &\n  AutocompleteOptionOptions\n\nexport const AutocompleteOption = forwardRef<AutocompleteOptionProps, \"li\">(\n  ({ className, icon, ...rest }, ref) => {\n    const { styles } = useAutocompleteContext()\n    const { isSelected, customIcon, children, getOptionProps } =\n      useAutocompleteOption(rest)\n\n    icon ??= customIcon\n\n    const css: CSSUIObject = {\n      textDecoration: \"none\",\n      color: \"inherit\",\n      userSelect: \"none\",\n      display: \"flex\",\n      width: \"100%\",\n      alignItems: \"center\",\n      textAlign: \"start\",\n      flex: \"0 0 auto\",\n      outline: 0,\n      gap: \"0.75rem\",\n      ...styles.item,\n    }\n\n    return (\n      <ui.li\n        className={cx(\"ui-autocomplete__item\", className)}\n        __css={css}\n        {...getOptionProps({}, ref)}\n      >\n        {icon !== null ? (\n          <AutocompleteItemIcon opacity={isSelected ? 1 : 0}>\n            {icon || <CheckIcon />}\n          </AutocompleteItemIcon>\n        ) : null}\n        {icon ? (\n          <ui.span style={{ pointerEvents: \"none\", flex: 1 }} noOfLines={1}>\n            {children}\n          </ui.span>\n        ) : (\n          children\n        )}\n      </ui.li>\n    )\n  },\n)\n\nconst CheckIcon: FC = () => (\n  <svg viewBox=\"0 0 14 14\" width=\"1em\" height=\"1em\">\n    <polygon\n      fill=\"currentColor\"\n      points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    />\n  </svg>\n)\n","import type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx, runIfFunc } from \"@yamada-ui/utils\"\nimport type { FC, ReactElement } from \"react\"\nimport { AutocompleteItemIcon } from \"./autocomplete-icon\"\nimport {\n  useAutocompleteContext,\n  useAutocompleteCreate,\n} from \"./use-autocomplete\"\n\ntype AutocompleteCreateOptions = {\n  /**\n   * The autocomplete create option icon to use.\n   */\n  icon?: ReactElement\n  /**\n   * The label of the autocomplete create option.\n   */\n  children?: string | ((inputValue: string) => string)\n}\n\nexport type AutocompleteCreateProps = Omit<HTMLUIProps<\"li\">, \"children\"> &\n  AutocompleteCreateOptions\n\nexport const AutocompleteCreate = forwardRef<AutocompleteCreateProps, \"li\">(\n  ({ className, icon, children, ...rest }, ref) => {\n    const { inputValue, styles } = useAutocompleteContext()\n    const { getCreateProps } = useAutocompleteCreate()\n\n    children ??= inputValue\n\n    const css: CSSUIObject = {\n      textDecoration: \"none\",\n      color: \"inherit\",\n      userSelect: \"none\",\n      display: \"flex\",\n      width: \"100%\",\n      alignItems: \"center\",\n      textAlign: \"start\",\n      flex: \"0 0 auto\",\n      outline: 0,\n      gap: \"0.75rem\",\n      ...styles.item,\n    }\n\n    return (\n      <ui.li\n        className={cx(\"ui-autocomplete__item--create\", className)}\n        __css={css}\n        {...getCreateProps(rest, ref)}\n      >\n        {icon !== null ? (\n          <AutocompleteItemIcon>{icon || <PlusIcon />}</AutocompleteItemIcon>\n        ) : null}\n        {icon ? (\n          <ui.span style={{ pointerEvents: \"none\", flex: 1 }} noOfLines={1}>\n            {runIfFunc(children, inputValue)}\n          </ui.span>\n        ) : (\n          runIfFunc(children, inputValue)\n        )}\n      </ui.li>\n    )\n  },\n)\n\nconst PlusIcon: FC = () => (\n  <svg viewBox=\"0 0 45.402 45.402\" width=\"1em\" height=\"1em\">\n    <path\n      fill=\"currentColor\"\n      d=\"M41.267,18.557H26.832V4.134C26.832,1.851,24.99,0,22.707,0c-2.283,0-4.124,1.851-4.124,4.135v14.432H4.141   c-2.283,0-4.139,1.851-4.138,4.135c-0.001,1.141,0.46,2.187,1.207,2.934c0.748,0.749,1.78,1.222,2.92,1.222h14.453V41.27   c0,1.142,0.453,2.176,1.201,2.922c0.748,0.748,1.777,1.211,2.919,1.211c2.282,0,4.129-1.851,4.129-4.133V26.857h14.435   c2.283,0,4.134-1.867,4.133-4.15C45.399,20.425,43.548,18.557,41.267,18.557z\"\n    />\n  </svg>\n)\n","import type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport type { FC, ReactElement } from \"react\"\nimport { AutocompleteItemIcon } from \"./autocomplete-icon\"\nimport {\n  useAutocompleteContext,\n  useAutocompleteEmpty,\n} from \"./use-autocomplete\"\n\ntype AutocompleteEmptyOptions = {\n  /**\n   * The autocomplete empty option icon to use.\n   */\n  icon?: ReactElement\n  /**\n   * The label of the autocomplete empty option.\n   */\n  children?: string\n}\n\nexport type AutocompleteEmptyProps = Omit<HTMLUIProps<\"li\">, \"children\"> &\n  AutocompleteEmptyOptions\n\nexport const AutocompleteEmpty = forwardRef<AutocompleteEmptyProps, \"li\">(\n  ({ className, icon, children, ...rest }, ref) => {\n    const { emptyMessage, styles } = useAutocompleteContext()\n    const { getEmptyProps } = useAutocompleteEmpty()\n\n    children ??= emptyMessage\n\n    const css: CSSUIObject = {\n      textDecoration: \"none\",\n      color: \"inherit\",\n      userSelect: \"none\",\n      display: \"flex\",\n      width: \"100%\",\n      alignItems: \"center\",\n      textAlign: \"start\",\n      flex: \"0 0 auto\",\n      outline: 0,\n      gap: \"0.75rem\",\n      pointerEvents: \"none\",\n      ...styles.item,\n    }\n\n    return (\n      <ui.li\n        className={cx(\"ui-autocomplete__item--empty\", className)}\n        __css={css}\n        {...getEmptyProps(rest, ref)}\n      >\n        {icon !== null ? (\n          <AutocompleteItemIcon>{icon || <MinusIcon />}</AutocompleteItemIcon>\n        ) : null}\n        {icon ? (\n          <ui.span style={{ pointerEvents: \"none\", flex: 1 }} noOfLines={1}>\n            {children}\n          </ui.span>\n        ) : (\n          children\n        )}\n      </ui.li>\n    )\n  },\n)\n\nconst MinusIcon: FC = () => (\n  <svg viewBox=\"0 0 448 512\" width=\"1em\" height=\"1em\">\n    <path\n      fill=\"currentColor\"\n      d=\"M432 256c0 17.7-14.3 32-32 32L48 288c-17.7 0-32-14.3-32-32s14.3-32 32-32l352 0c17.7 0 32 14.3 32 32z\"\n    />\n  </svg>\n)\n"],"names":["kanaMap","defaultFormat","value","v","reg","flattenItems","items","filterItems","item","isDisabled","isFocusable","isTargetOption","target","isHTMLElement","_a","AutocompleteDescendantsContextProvider","useAutocompleteDescendantsContext","useAutocompleteDescendants","useAutocompleteDescendant","createDescendant","AutocompleteProvider","useAutocompleteContext","createContext","useAutocomplete","defaultIsOpen","closeOnSelect","omitSelectedValues","maxSelectedValues","closeOnBlur","closeOnEsc","allowCreate","allowFree","insertPositionItem","emptyMessage","format","placement","duration","optionProps","placeholder","children","rest","useFormControlProps","id","formControlProps","pickObject","formControlProperties","containerProps","inputProps","splitObject","omitObject","popoverProperties","layoutStylesProperties","descendants","containerRef","useRef","listRef","inputRef","timeoutIds","isComposition","resolvedItems","setResolvedItems","useState","setValue","useControllableState","label","setLabel","inputValue","setInputValue","focusedIndex","setFocusedIndex","isAllSelected","setIsAllSelected","isHit","setIsHit","isOpen","setIsOpen","isFocused","isCreate","isMulti","isArray","isEmptyValue","firstInsertPositionItem","secondInsertPositionItem","useMemo","isUndefined","selectedIndexes","node","index","enabledValues","validChildren","getValidChildren","computedChildren","i","props","jsx","AutocompleteOption","AutocompleteOptionGroup","isEmpty","onOpen","useCallback","onClose","onFocusFirst","first","enabledFirst","onFocusLast","last","enabledlast","onFocusSelected","selected","onFocusNext","next","enabledNext","onFocusPrev","prev","enabledPrev","onFocusFirstOrSelected","onFocusLastOrSelected","pickOptions","values","rebirthOptions","runFocus","onChangeLabel","newValue","runOmit","selectedValues","selectedValue","onChange","onSelect","enabledValue","onSearch","ev","computedValue","onCompositionStart","onCompositionEnd","onCreate","newItem","newItems","targetItem","onDelete","onClear","onClick","onFocus","onBlur","relatedTarget","getEventRelatedTarget","isContains","onKeyDown","enabledDelete","action","funcAll","useEffect","isAll","isMax","useUpdateEffect","useUnmountEffect","useOutsideClick","getPopoverProps","getContainerProps","ref","mergeRefs","handlerAll","getFieldProps","dataAttr","useAutocompleteInput","useAutocompleteList","beforeFocusedIndex","onAnimationComplete","parent","child","parentHeight","viewTop","viewBottom","childHeight","childTop","childBottom","isInView","isScrollBottom","useAutocompleteOptionGroup","computedRest","style","getGroupProps","useAutocompleteOption","generalCloseOnSelect","customIcon","customCloseOnSelect","computedProps","trulyDisabled","itemRef","register","frontValues","isSelected","isTarget","getOptionProps","ariaAttr","useAutocompleteCreate","useAutocompleteEmpty","AutocompleteIcon","forwardRef","className","__css","styles","css","cloneChildren","cloneElement","ui","cx","isValidElement","ChevronIcon","AutocompleteClearIcon","useClickable","CloseIcon","AutocompleteItemIcon","AutocompleteList","w","width","minW","minWidth","getListProps","_b","_c","_d","PopoverContent","color","h","height","minH","minHeight","jsxs","icon","CheckIcon","AutocompleteCreate","getCreateProps","PlusIcon","runIfFunc","AutocompleteEmpty","getEmptyProps","MinusIcon"],"mappings":"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"}