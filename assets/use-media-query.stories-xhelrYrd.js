import{j as u,a as y,F as D}from"./jsx-runtime-5BUNAZ9W.js";import{r as f}from"./index-4g5l5LRQ.js";import{u as F}from"./environment-provider-9ZVa87yJ.js";import{S as g,n as L}from"./factory-Ei-jEUJK.js";import{T as h}from"./text-rkzyuG52.js";import"./_commonjsHelpers-4gQjN7DL.js";import"./emotion-use-insertion-effect-with-fallbacks.browser.esm-KmmwFJNj.js";import"./forward-ref-A-8Arhkk.js";import"./use-component-style-eekTqtz5.js";import"./theme-provider-PZSzWP7q.js";const Q=(t,{ssr:i=!0,fallback:c}={})=>{const{getWindow:m}=F(),d=L(t)?t:[t];let p=L(c)?c:[c];p=p.filter(r=>r!=null);const[S,x]=f.useState(()=>d.map((r,s)=>({media:r,matches:i?!!p[s]:m().matchMedia(r).matches})));return f.useEffect(()=>{const r=m();x(d.map(e=>({media:e,matches:r.matchMedia(e).matches})));const s=d.map(e=>r.matchMedia(e)),a=e=>{x(j=>j.slice().map(l=>l.media===e.media?{...l,matches:e.matches}:l))};return s.forEach(e=>{g(e.addListener)?e.addListener(a):e.addEventListener("change",a)}),()=>{s.forEach(e=>{g(e.removeListener)?e.removeListener(a):e.removeEventListener("change",a)})}},[m]),S.map(r=>r.matches)},G={title:"Hooks / useMediaQuery"},n=()=>{const[t]=Q("(min-width: 1280px)");return u(h,{children:t?"larger than 1280px":"smaller than 1280px"})},o=()=>{const[t,i]=Q(["(min-width: 1280px)","(prefers-color-scheme: dark)"]);return y(D,{children:[u(h,{children:t?"larger than 1280px":"smaller than 1280px"}),u(h,{children:i?"color mode is dark":"color mode is light"})]})};var M,E,T;n.parameters={...n.parameters,docs:{...(M=n.parameters)==null?void 0:M.docs,source:{originalSource:`() => {
  const [flg] = useMediaQuery("(min-width: 1280px)");
  return <Text>{flg ? "larger than 1280px" : "smaller than 1280px"}</Text>;
}`,...(T=(E=n.parameters)==null?void 0:E.docs)==null?void 0:T.source}}};var k,v,w;o.parameters={...o.parameters,docs:{...(k=o.parameters)==null?void 0:k.docs,source:{originalSource:`() => {
  const [isLarge, isDark] = useMediaQuery(["(min-width: 1280px)", "(prefers-color-scheme: dark)"]);
  return <>
      <Text>{isLarge ? "larger than 1280px" : "smaller than 1280px"}</Text>
      <Text>{isDark ? "color mode is dark" : "color mode is light"}</Text>
    </>;
}`,...(w=(v=o.parameters)==null?void 0:v.docs)==null?void 0:w.source}}};const I=["basic","useMulti"];export{I as __namedExportsOrder,n as basic,G as default,o as useMulti};
