{"version":3,"file":"select-5fe428ef.js","sources":["../../packages/components/select/src/select.tsx"],"sourcesContent":["import type { CSSUIObject, HTMLUIProps, ThemeProps } from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport { Popover, PopoverTrigger } from \"@yamada-ui/popover\"\nimport { cx, getValidChildren } from \"@yamada-ui/utils\"\nimport type { ReactElement } from \"react\"\nimport type { SelectIconProps } from \"./select-icon\"\nimport { SelectIcon } from \"./select-icon\"\nimport type { SelectListProps } from \"./select-list\"\nimport { SelectList } from \"./select-list\"\nimport type { UseSelectProps } from \"./use-select\"\nimport {\n  useSelect,\n  SelectDescendantsContextProvider,\n  SelectProvider,\n  useSelectContext,\n} from \"./use-select\"\nimport type { OptionProps } from \"./\"\nimport { OptionGroup, Option } from \"./\"\n\ntype SelectBaseItem = Omit<OptionProps, \"value\" | \"children\"> & {\n  label?: string\n}\n\ntype SelectItemWithValue = SelectBaseItem & { value?: string }\n\ntype SelectItemWithItems = SelectBaseItem & { items?: SelectItemWithValue[] }\n\nexport type SelectItem = SelectItemWithValue | SelectItemWithItems\n\ntype SelectOptions = {\n  /**\n   * If provided, generate options based on items.\n   *\n   * @default '[]'\n   */\n  items?: SelectItem[]\n  /**\n   * The border color when the input is focused.\n   */\n  focusBorderColor?: string\n  /**\n   * The border color when the input is invalid.\n   */\n  errorBorderColor?: string\n  /**\n   * Props for select container element.\n   */\n  containerProps?: Omit<HTMLUIProps<\"div\">, \"children\">\n  /**\n   * Props for select list element.\n   */\n  listProps?: Omit<SelectListProps, \"children\">\n  /**\n   * Props for select icon element.\n   */\n  iconProps?: SelectIconProps\n}\n\nexport type SelectProps = ThemeProps<\"Select\"> &\n  Omit<\n    UseSelectProps<string>,\n    \"isEmpty\" | \"maxSelectedValues\" | \"omitSelectedValues\"\n  > &\n  SelectOptions\n\nexport const Select = forwardRef<SelectProps, \"div\">((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle(\"Select\", props)\n  let {\n    className,\n    placeholder,\n    defaultValue = \"\",\n    placeholderInOptions = true,\n    items = [],\n    color,\n    h,\n    height,\n    minH,\n    minHeight,\n    containerProps,\n    listProps,\n    iconProps,\n    children,\n    ...computedProps\n  } = omitThemeProps(mergedProps)\n\n  const validChildren = getValidChildren(children)\n  let computedChildren: ReactElement[] = []\n\n  if (!validChildren.length && items.length) {\n    computedChildren = items\n      .map((item, i) => {\n        if (\"value\" in item) {\n          const { label, value, ...props } = item\n\n          return (\n            <Option key={i} value={value} {...props}>\n              {label}\n            </Option>\n          )\n        } else if (\"items\" in item) {\n          const { label, items = [], ...props } = item\n\n          return (\n            <OptionGroup\n              key={i}\n              label={label ?? \"\"}\n              {...(props as HTMLUIProps<\"ul\">)}\n            >\n              {items.map(({ label, value, ...props }, i) => (\n                <Option key={i} value={value} {...props}>\n                  {label}\n                </Option>\n              ))}\n            </OptionGroup>\n          )\n        }\n      })\n      .filter(Boolean) as ReactElement[]\n  }\n\n  const isEmpty =\n    !validChildren.length &&\n    !computedChildren.length &&\n    !(!!placeholder && placeholderInOptions)\n\n  const {\n    descendants,\n    formControlProps,\n    getPopoverProps,\n    getContainerProps,\n    getFieldProps,\n    ...rest\n  } = useSelect({\n    ...computedProps,\n    placeholder,\n    placeholderInOptions,\n    defaultValue,\n    isEmpty,\n  })\n\n  h ??= height\n  minH ??= minHeight\n\n  const css: CSSUIObject = {\n    w: \"100%\",\n    h: \"fit-content\",\n    color,\n    ...styles.container,\n  }\n\n  return (\n    <SelectDescendantsContextProvider value={descendants}>\n      <SelectProvider\n        value={{ ...rest, placeholder, placeholderInOptions, styles }}\n      >\n        <Popover {...getPopoverProps()}>\n          <ui.div\n            className={cx(\"ui-select\", className)}\n            __css={css}\n            {...getContainerProps(containerProps)}\n          >\n            <ui.div\n              className=\"ui-select__inner\"\n              __css={{ position: \"relative\", ...styles.inner }}\n            >\n              <PopoverTrigger>\n                <SelectField h={h} minH={minH} {...getFieldProps({}, ref)}>\n                  <SelectIcon {...iconProps} {...formControlProps} />\n                </SelectField>\n              </PopoverTrigger>\n\n              {!isEmpty ? (\n                <SelectList {...listProps}>\n                  {!!placeholder && placeholderInOptions ? (\n                    <Option>{placeholder}</Option>\n                  ) : null}\n\n                  {children ?? computedChildren}\n                </SelectList>\n              ) : null}\n            </ui.div>\n          </ui.div>\n        </Popover>\n      </SelectProvider>\n    </SelectDescendantsContextProvider>\n  )\n})\n\ntype SelectFieldProps = HTMLUIProps<\"div\">\n\nconst SelectField = forwardRef<SelectFieldProps, \"div\">(\n  ({ className, isTruncated = true, noOfLines, h, minH, ...rest }, ref) => {\n    const { displayValue, placeholder, styles } = useSelectContext()\n\n    const css: CSSUIObject = {\n      paddingEnd: \"2rem\",\n      h,\n      minH,\n      display: \"flex\",\n      alignItems: \"center\",\n      ...styles.field,\n    }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-select__field\", className)}\n        __css={css}\n        {...rest}\n      >\n        <ui.span isTruncated={isTruncated} noOfLines={noOfLines}>\n          {displayValue ?? placeholder}\n        </ui.span>\n      </ui.div>\n    )\n  },\n)\n"],"names":["Select","forwardRef","props","ref","styles","mergedProps","useMultiComponentStyle","className","placeholder","defaultValue","placeholderInOptions","items","color","h","height","minH","minHeight","containerProps","listProps","iconProps","children","computedProps","omitThemeProps","validChildren","getValidChildren","computedChildren","item","i","label","value","Option","jsx","OptionGroup","isEmpty","descendants","formControlProps","getPopoverProps","getContainerProps","getFieldProps","rest","useSelect","css","SelectDescendantsContextProvider","SelectProvider","Popover","ui","cx","jsxs","PopoverTrigger","SelectField","SelectIcon","SelectList","isTruncated","noOfLines","displayValue","useSelectContext"],"mappings":"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"}