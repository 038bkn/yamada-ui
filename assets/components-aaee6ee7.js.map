{"version":3,"file":"components-aaee6ee7.js","sources":["../../stories/components.tsx"],"sourcesContent":["import {\n  Box,\n  Container,\n  ContainerProps,\n  Dict,\n  HStack,\n  Text,\n  UIProvider,\n  VStack,\n  isArray,\n  useColorMode,\n} from \"@yamada-ui/react\"\nimport { FC, ReactNode, useEffect } from \"react\"\nimport { useDarkMode } from \"storybook-dark-mode\"\n\nexport const JSX: FC<{ children: ReactNode }> = ({ children }) => {\n  return (\n    <UIProvider>\n      <App>{children}</App>\n    </UIProvider>\n  )\n}\n\nconst App: FC<ContainerProps> = ({ children }) => {\n  const { changeColorMode } = useColorMode()\n\n  const colorMode = useDarkMode() ? \"dark\" : \"light\"\n\n  useEffect(() => {\n    changeColorMode(colorMode)\n  }, [colorMode, changeColorMode])\n\n  return <Container>{children}</Container>\n}\n\ntype ColorPalletsProps = {\n  name: string\n  colors: Dict<Dict>\n}\n\nexport const ColorPallets: FC<ColorPalletsProps> = ({ name, colors }) => {\n  return Object.entries(colors[name]).map(([hue, value]) => (\n    <ColorPallet key={hue} {...{ name, hue, value }} />\n  ))\n}\n\ntype ColorPalletProps = {\n  name: string\n  value: string\n  hue?: string\n}\n\nexport const ColorPallet: FC<ColorPalletProps> = ({ name, hue, value }) => {\n  const colorMode = useDarkMode() ? \"dark\" : \"light\"\n\n  return (\n    <HStack key={hue}>\n      <Box\n        bg={hue ? `${name}.${hue}` : name}\n        minW=\"12\"\n        minH=\"12\"\n        rounded=\"md\"\n        boxShadow=\"inner\"\n      />\n      <VStack gap=\"1\">\n        <Text m=\"0\" fontWeight=\"semibold\" noOfLines={1}>\n          {name.charAt(0).toUpperCase() + name.slice(1)} {hue}\n        </Text>\n        <Text m=\"0\" noOfLines={1}>\n          {!isArray(value)\n            ? value\n            : colorMode === \"light\"\n            ? value[0]\n            : value[1]}\n        </Text>\n      </VStack>\n    </HStack>\n  )\n}\n"],"names":["JSX","children","jsx","UIProvider","App","changeColorMode","useColorMode","colorMode","useDarkMode","useEffect","Container","ColorPallets","name","colors","hue","value","ColorPallet","HStack","Box","jsxs","VStack","Text","isArray"],"mappings":"uYAeO,MAAMA,EAAmC,CAAC,CAAE,SAAAC,KAE9CC,EAAAC,EAAA,CACC,SAACD,EAAAE,EAAA,CAAK,SAAAH,EAAS,CACjB,CAAA,EAIEG,EAA0B,CAAC,CAAE,SAAAH,KAAe,CAC1C,KAAA,CAAE,gBAAAI,GAAoBC,IAEtBC,EAAYC,IAAgB,OAAS,QAE3CC,OAAAA,EAAAA,UAAU,IAAM,CACdJ,EAAgBE,CAAS,CAAA,EACxB,CAACA,EAAWF,CAAe,CAAC,EAExBH,EAACQ,GAAW,SAAAT,CAAS,CAAA,CAC9B,EAOaU,EAAsC,CAAC,CAAE,KAAAC,EAAM,OAAAC,KACnD,OAAO,QAAQA,EAAOD,CAAI,CAAC,EAAE,IAAI,CAAC,CAACE,EAAKC,CAAK,IAClDb,EAACc,GAA4B,KAAAJ,EAAM,IAAAE,EAAK,MAAAC,CAAtB,EAAAD,CAA+B,CAClD,EASUE,EAAoC,CAAC,CAAE,KAAAJ,EAAM,IAAAE,EAAK,MAAAC,KAAY,CACnE,MAAAR,EAAYC,IAAgB,OAAS,QAE3C,SACGS,EACC,CAAA,SAAA,CAAAf,EAACgB,EAAA,CACC,GAAIJ,EAAM,GAAGF,CAAI,IAAIE,CAAG,GAAKF,EAC7B,KAAK,KACL,KAAK,KACL,QAAQ,KACR,UAAU,OAAA,CACZ,EACAO,EAACC,EAAO,CAAA,IAAI,IACV,SAAA,CAAAD,EAACE,GAAK,EAAE,IAAI,WAAW,WAAW,UAAW,EAC1C,SAAA,CAAAT,EAAK,OAAO,CAAC,EAAE,cAAgBA,EAAK,MAAM,CAAC,EAAE,IAAEE,CAAA,EAClD,IACCO,EAAK,CAAA,EAAE,IAAI,UAAW,EACpB,SAACC,EAAQP,CAAK,EAEXR,IAAc,QACdQ,EAAM,CAAC,EACPA,EAAM,CAAC,EAHPA,EAIN,CAAA,EACF,CAAA,CAAA,EAnBWD,CAoBb,CAEJ"}