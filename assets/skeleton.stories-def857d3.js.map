{"version":3,"file":"skeleton.stories-def857d3.js","sources":["../../packages/components/skeleton/src/skeleton.tsx","../../packages/components/skeleton/src/skeleton-circle.tsx","../../packages/components/skeleton/src/skeleton-text.tsx"],"sourcesContent":["import {\n  ui,\n  forwardRef,\n  omitThemeProps,\n  CSSUIObject,\n  HTMLUIProps,\n  ThemeProps,\n  useComponentStyle,\n  CSSUIProps,\n} from '@yamada-ui/core'\nimport { useAnimation } from '@yamada-ui/use-animation'\nimport { usePrevious } from '@yamada-ui/use-previous'\nimport { useValue } from '@yamada-ui/use-value'\nimport { cx, useIsMounted } from '@yamada-ui/utils'\n\ntype SkeletonOptions = {\n  /**\n   * The color at the animation start.\n   */\n  startColor?: CSSUIProps['color']\n  /**\n   * The color at the animation end.\n   */\n  endColor?: CSSUIProps['color']\n  /**\n   * If `true`, it'll render its children with a nice fade transition.\n   *\n   * @default false\n   */\n  isLoaded?: boolean\n  /**\n   * The animation speed in seconds.\n   *\n   * @default 0.8\n   */\n  speed?: string | number\n  /**\n   * The fadeIn duration in seconds. Requires `isLoaded` toggled to `true` in order to see the transition.\n   *\n   * @default 0.4\n   */\n  fadeDuration?: string | number\n  /**\n   * If `true`, the skeleton will take the width of it's children.\n   *\n   * @default false\n   */\n  isFitContent?: boolean\n}\n\nexport type SkeletonProps = HTMLUIProps<'div'> &\n  ThemeProps<'Skeleton'> &\n  SkeletonOptions\n\nexport const Skeleton = forwardRef<SkeletonProps, 'div'>((props, ref) => {\n  let [styles, mergedProps] = useComponentStyle('Skeleton', props)\n  const {\n    className,\n    startColor,\n    endColor,\n    fadeDuration = 0.4,\n    speed = 0.8,\n    isLoaded,\n    isFitContent,\n    ...rest\n  } = omitThemeProps(mergedProps)\n  const isMounted = useIsMounted()\n\n  const prevIsLoaded = usePrevious(isLoaded)\n\n  const computedStartColor = useValue(startColor)\n  const computedEndColor = useValue(endColor)\n\n  const fadeIn = useAnimation({\n    keyframes: {\n      '0%': {\n        opacity: 0,\n      },\n      '100%': {\n        opacity: 1,\n      },\n    },\n    duration:\n      typeof fadeDuration === 'string' ? fadeDuration : `${fadeDuration}s`,\n  })\n\n  const animation = useAnimation({\n    keyframes: {\n      '0%': {\n        borderColor: computedStartColor,\n        background: computedStartColor,\n      },\n      '100%': {\n        borderColor: computedEndColor,\n        background: computedEndColor,\n      },\n    },\n    duration: typeof speed === 'string' ? speed : `${speed}s`,\n    iterationCount: 'infinite',\n    direction: 'alternate',\n    timingFunction: 'linear',\n  })\n\n  const css: CSSUIObject = {\n    w: isFitContent ? 'fit-content' : 'full',\n    h: '4',\n    boxShadow: 'none',\n    backgroundClip: 'padding-box',\n    cursor: 'default',\n    color: 'transparent',\n    pointerEvents: 'none',\n    userSelect: 'none',\n    '&::before, &::after, *': {\n      visibility: 'hidden',\n    },\n    ...styles,\n  }\n\n  if (isLoaded) {\n    const animation = !isMounted.current || prevIsLoaded ? 'none' : fadeIn\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx('ui-skeleton', className)}\n        {...rest}\n        animation={animation}\n      />\n    )\n  } else {\n    return (\n      <ui.div\n        ref={ref}\n        className={cx('ui-skeleton', className)}\n        __css={css}\n        {...rest}\n        animation={animation}\n      />\n    )\n  }\n})\n","import { forwardRef } from '@yamada-ui/core'\nimport { cx } from '@yamada-ui/utils'\nimport { Skeleton, SkeletonProps } from './'\n\nexport type SkeletonCircleProps = SkeletonProps\n\nexport const SkeletonCircle = forwardRef<SkeletonCircleProps, 'div'>(\n  ({ className, boxSize = '12', ...rest }, ref) => {\n    return (\n      <Skeleton\n        ref={ref}\n        className={cx('ui-skeleton-circle', className)}\n        rounded='full'\n        boxSize={boxSize}\n        {...rest}\n      />\n    )\n  },\n)\n","import { ui, forwardRef, UIProps, CSSUIObject } from '@yamada-ui/core'\nimport { useValue } from '@yamada-ui/use-value'\nimport { cx } from '@yamada-ui/utils'\nimport { Skeleton, SkeletonProps } from './'\n\ntype SkeletonTextOptions = {\n  /**\n   * The CSS `gap` property.\n   */\n  gap?: UIProps['gap']\n  /**\n   * The CSS `height` property.\n   */\n  textHeight?: UIProps['height']\n}\n\nexport type SkeletonTextProps = SkeletonProps & SkeletonTextOptions\n\nexport const SkeletonText = forwardRef<SkeletonTextProps, 'div'>(\n  (\n    {\n      className,\n      noOfLines = 3,\n      startColor,\n      endColor,\n      fadeDuration,\n      speed,\n      isLoaded,\n      gap = '2',\n      textHeight = '2',\n      children,\n      ...rest\n    },\n    ref,\n  ) => {\n    const computedNoOfLines = useValue(noOfLines)\n\n    const css: CSSUIObject = {\n      w: 'full',\n    }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx('ui-skeleton-text', className)}\n        __css={css}\n        {...rest}\n      >\n        {Array(computedNoOfLines)\n          .fill(0)\n          .map((_, index) => {\n            if (isLoaded && index > 0) return null\n\n            const isLast = index + 1 === computedNoOfLines\n\n            const props: SkeletonProps = !isLoaded\n              ? {\n                  mb: !isLast ? gap : undefined,\n                  w:\n                    computedNoOfLines > 1 ? (!isLast ? '100%' : '80%') : '100%',\n                  h: textHeight,\n                }\n              : {}\n\n            return (\n              <Skeleton\n                key={index}\n                {...{\n                  startColor,\n                  endColor,\n                  fadeDuration,\n                  speed,\n                  isLoaded,\n                  ...props,\n                }}\n              >\n                {index === 0 ? children : undefined}\n              </Skeleton>\n            )\n          })}\n      </ui.div>\n    )\n  },\n)\n"],"names":["Skeleton","forwardRef","props","ref","styles","mergedProps","useComponentStyle","className","startColor","endColor","fadeDuration","speed","isLoaded","isFitContent","rest","omitThemeProps","isMounted","useIsMounted","prevIsLoaded","usePrevious","computedStartColor","useValue","computedEndColor","fadeIn","useAnimation","animation","css","jsx","ui","cx","SkeletonCircle","boxSize","SkeletonText","noOfLines","gap","textHeight","children","computedNoOfLines","_","index","isLast"],"mappings":"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"}