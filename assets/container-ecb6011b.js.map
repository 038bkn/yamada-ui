{"version":3,"file":"container-ecb6011b.js","sources":["../../packages/components/layouts/src/container.tsx"],"sourcesContent":["import {\n  ui,\n  forwardRef,\n  HTMLUIProps,\n  ThemeProps,\n  useComponentStyle,\n  omitThemeProps,\n  CSSUIObject,\n} from '@yamada-ui/core'\nimport { cx } from '@yamada-ui/utils'\nimport { useMemo } from 'react'\n\ntype ContainerOptions = {\n  /**\n   * If `true`, container will center its children regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\nexport type ContainerProps = HTMLUIProps<'section'> &\n  ThemeProps<'Container'> &\n  ContainerOptions\n\nexport const Container = forwardRef<ContainerProps, 'section'>((props, ref) => {\n  const [styles, mergedProps] = useComponentStyle('Container', props)\n  const { className, centerContent, ...rest } = omitThemeProps(mergedProps)\n\n  const css: CSSUIObject = useMemo(\n    () => ({\n      alignItems: centerContent ? 'center' : undefined,\n      ...styles,\n    }),\n    [centerContent, styles],\n  )\n\n  return (\n    <ui.section\n      ref={ref}\n      className={cx('ui-container', className)}\n      __css={css}\n      {...rest}\n    />\n  )\n})\n"],"names":["Container","forwardRef","props","ref","styles","mergedProps","useComponentStyle","className","centerContent","rest","omitThemeProps","css","useMemo","jsx","ui","cx"],"mappings":"mRAyBO,MAAMA,EAAYC,EAAsC,CAACC,EAAOC,IAAQ,CAC7E,KAAM,CAACC,EAAQC,CAAW,EAAIC,EAAkB,YAAaJ,CAAK,EAC5D,CAAE,UAAAK,EAAW,cAAAC,EAAe,GAAGC,CAAK,EAAIC,EAAeL,CAAW,EAElEM,EAAmBC,EAAA,QACvB,KAAO,CACL,WAAYJ,EAAgB,SAAW,OACvC,GAAGJ,CAAA,GAEL,CAACI,EAAeJ,CAAM,CAAA,EAItB,OAAAS,EAACC,EAAG,QAAH,CACC,IAAAX,EACA,UAAWY,EAAG,eAAgBR,CAAS,EACvC,MAAOI,EACN,GAAGF,CAAA,CAAA,CAGV,CAAC"}