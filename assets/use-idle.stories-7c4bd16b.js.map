{"version":3,"file":"use-idle.stories-7c4bd16b.js","sources":["../../packages/hooks/use-idle/src/index.ts"],"sourcesContent":["import { useRef, useEffect, useState } from 'react'\n\nconst DEFAULT_EVENTS: (keyof DocumentEventMap)[] = [\n  'keypress',\n  'mousemove',\n  'touchmove',\n  'click',\n  'scroll',\n]\n\nconst DEFAULT_OPTIONS = {\n  events: DEFAULT_EVENTS,\n  initialState: true,\n}\n\nexport type IdleOptions = Partial<{\n  events: (keyof DocumentEventMap)[]\n  initialState: boolean\n}>\n\nexport const useIdle = (timeout: number, options?: IdleOptions) => {\n  const { events, initialState } = { ...DEFAULT_OPTIONS, ...options }\n  const [idle, setIdle] = useState<boolean>(initialState)\n  const timeoutId = useRef<any>(null)\n\n  useEffect(() => {\n    const handleEvent = () => {\n      setIdle(false)\n\n      if (timeoutId.current) window.clearTimeout(timeoutId.current)\n\n      timeoutId.current = window.setTimeout(() => {\n        setIdle(true)\n      }, timeout)\n    }\n\n    events.forEach((event) => document.addEventListener(event, handleEvent))\n\n    return () => {\n      events.forEach((event) =>\n        document.removeEventListener(event, handleEvent),\n      )\n    }\n  }, [events, timeout])\n\n  return idle\n}\n"],"names":["DEFAULT_EVENTS","DEFAULT_OPTIONS","useIdle","timeout","options","events","initialState","idle","setIdle","useState","timeoutId","useRef","useEffect","handleEvent","event"],"mappings":"+QAEA,MAAMA,EAA6C,CACjD,WACA,YACA,YACA,QACA,QACF,EAEMC,EAAkB,CACtB,OAAQD,EACR,aAAc,EAChB,EAOaE,EAAU,CAACC,EAAiBC,IAA0B,CAC3D,KAAA,CAAE,OAAAC,EAAQ,aAAAC,CAAa,EAAI,CAAE,GAAGL,EAAiB,GAAGG,GACpD,CAACG,EAAMC,CAAO,EAAIC,WAAkBH,CAAY,EAChDI,EAAYC,SAAY,IAAI,EAElCC,OAAAA,EAAAA,UAAU,IAAM,CACd,MAAMC,EAAc,IAAM,CACxBL,EAAQ,EAAK,EAETE,EAAU,SAAgB,OAAA,aAAaA,EAAU,OAAO,EAElDA,EAAA,QAAU,OAAO,WAAW,IAAM,CAC1CF,EAAQ,EAAI,GACXL,CAAO,CAAA,EAGZ,OAAAE,EAAO,QAASS,GAAU,SAAS,iBAAiBA,EAAOD,CAAW,CAAC,EAEhE,IAAM,CACJR,EAAA,QAASS,GACd,SAAS,oBAAoBA,EAAOD,CAAW,CAAA,CACjD,CACF,EACC,CAACR,EAAQF,CAAO,CAAC,EAEbI,CACT;;;;;"}