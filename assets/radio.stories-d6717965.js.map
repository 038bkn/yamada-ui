{"version":3,"file":"radio.stories-d6717965.js","sources":["../../packages/components/radio/src/radio-group.tsx","../../packages/components/radio/src/radio.tsx"],"sourcesContent":["import { ComponentArgs, ThemeProps } from '@yamada-ui/core'\nimport { useFormControl, FormControlOptions } from '@yamada-ui/form-control'\nimport { Flex, FlexProps } from '@yamada-ui/layouts'\nimport { useControllableState } from '@yamada-ui/use-controllable-state'\nimport {\n  createContext,\n  cx,\n  isObject,\n  mergeRefs,\n  PropGetter,\n  DOMAttributes,\n  useCallbackRef,\n  omitObject,\n} from '@yamada-ui/utils'\nimport {\n  ChangeEvent,\n  useCallback,\n  useId,\n  useRef,\n  forwardRef,\n  ForwardedRef,\n  Ref,\n} from 'react'\n\nconst isEvent = (value: any): value is { target: HTMLInputElement } =>\n  value && isObject(value) && isObject(value.target)\n\nexport type UseRadioGroupProps<Y extends string | number = string> = {\n  /**\n   * The top-level id string that will be applied to the radios.\n   * The index of the radio will be appended to this top-level id.\n   */\n  id?: string\n  /**\n   * The HTML `name` attribute used for forms.\n   */\n  name?: string\n  /**\n   * The value of the radio group.\n   */\n  value?: Y\n  /**\n   * The initial value of the radio group.\n   */\n  defaultValue?: Y\n  /**\n   * The callback fired when any children radio is checked or unchecked.\n   */\n  onChange?: (value: Y) => void\n  /**\n   * If `true`, input elements will receive `checked` attribute instead of `isChecked`.\n   *\n   * This assumes, you're using native radio inputs.\n   *\n   * @default false\n   */\n  isNative?: boolean\n}\n\nexport const useRadioGroup = <Y extends string | number = string>({\n  id,\n  name,\n  isNative,\n  ...props\n}: UseRadioGroupProps<Y>) => {\n  id = id ?? useId()\n  name = name ?? `radio-${id}`\n\n  props.onChange = useCallbackRef(props.onChange)\n\n  const [value, setValue] = useControllableState({\n    value: props.value,\n    defaultValue: props.defaultValue,\n    onChange: props.onChange,\n  })\n\n  const containerRef = useRef<any>(null)\n\n  const onFocus = useCallback(() => {\n    const container = containerRef.current\n\n    if (!container) return\n\n    let query = `input:not(:disabled):checked`\n\n    let firstInput = container.querySelector(query) as HTMLElement | undefined\n\n    if (firstInput) {\n      firstInput.focus()\n    } else {\n      query = `input:not(:disabled)`\n      firstInput = container.querySelector(query) as HTMLElement | undefined\n\n      firstInput?.focus()\n    }\n  }, [])\n\n  const onChange = useCallback(\n    (evOrValue: ChangeEvent<HTMLInputElement> | Y) => {\n      const nextValue = (\n        isEvent(evOrValue) ? evOrValue.target.value : evOrValue\n      ) as Y\n\n      setValue(nextValue)\n    },\n    [setValue],\n  )\n\n  const getContainerProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref: mergeRefs(ref, containerRef),\n      role: 'group',\n    }),\n    [],\n  )\n\n  const getRadioProps: PropGetter<\n    DOMAttributes<HTMLInputElement> & { isChecked?: boolean },\n    Omit<DOMAttributes<HTMLInputElement>, 'onChange'> & {\n      onChange: (ev: ChangeEvent<HTMLInputElement> | Y) => void\n    }\n  > = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ref,\n      name,\n      [isNative ? 'checked' : 'isChecked']:\n        value != null ? props.value === value : undefined,\n      onChange,\n    }),\n    [name, value, onChange, isNative],\n  )\n\n  return {\n    name,\n    value,\n    setValue,\n    onChange,\n    onFocus,\n    getContainerProps,\n    getRadioProps,\n  }\n}\n\nexport type UseRadioGroupReturn = ReturnType<typeof useRadioGroup>\n\nexport type RadioGroupProps<Y extends string | number = string> =\n  ThemeProps<'Radio'> &\n    Omit<FlexProps, 'onChange'> &\n    UseRadioGroupProps<Y> &\n    FormControlOptions\n\ntype RadioGroupContext = ThemeProps<'Radio'> &\n  FormControlOptions & {\n    name: string\n    value: string | number\n    onChange: (\n      evOrValue: ChangeEvent<HTMLInputElement> | string | number,\n    ) => void\n  }\n\nconst [RadioGroupProvider, useRadioGroupContenxt] = createContext<\n  RadioGroupContext | undefined\n>({\n  strict: false,\n  name: 'RadioGroupContext',\n})\n\nexport { useRadioGroupContenxt }\n\nexport const RadioGroup = forwardRef(\n  <Y extends string | number = string>(\n    {\n      className,\n      size,\n      variant,\n      colorScheme,\n      children,\n      direction = 'column',\n      gap,\n      ...props\n    }: RadioGroupProps<Y>,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) => {\n    const { name, value, onChange, getContainerProps } = useRadioGroup(props)\n    const { isRequired, isReadOnly, isDisabled, isInvalid } =\n      useFormControl(props)\n\n    return (\n      <RadioGroupProvider\n        value={\n          {\n            size,\n            variant,\n            colorScheme,\n            isRequired,\n            isReadOnly,\n            isDisabled,\n            isInvalid,\n            name,\n            value,\n            onChange,\n          } as RadioGroupContext\n        }\n      >\n        <Flex\n          ref={ref}\n          className={cx('ui-radio-group', className)}\n          direction={direction}\n          gap={gap ?? (direction === 'row' ? '1rem' : undefined)}\n          {...getContainerProps(\n            omitObject(props, [\n              'onChange',\n              'isInvalid',\n              'isDisabled',\n              'isRequired',\n              'isReadOnly',\n            ]),\n          )}\n        >\n          {children}\n        </Flex>\n      </RadioGroupProvider>\n    )\n  },\n) as {\n  <Y extends string | number = string>(\n    props: RadioGroupProps<Y> & { ref?: Ref<HTMLDivElement> },\n  ): JSX.Element\n} & ComponentArgs\n\nRadioGroup.displayName = 'RadioGroup'\n","import {\n  ui,\n  useMultiComponentStyle,\n  omitThemeProps,\n  HTMLUIProps,\n  ThemeProps,\n  ComponentArgs,\n} from '@yamada-ui/core'\nimport {\n  useFormControl,\n  useFormControlProps,\n  FormControlOptions,\n  formControlProperties,\n} from '@yamada-ui/form-control'\nimport { trackFocusVisible } from '@yamada-ui/use-focus-visible'\nimport {\n  cx,\n  PropGetter,\n  useCallbackRef,\n  omitObject,\n  funcAll,\n  handlerAll,\n  dataAttr,\n  pickObject,\n} from '@yamada-ui/utils'\nimport {\n  forwardRef,\n  ForwardedRef,\n  Ref,\n  ChangeEvent,\n  ChangeEventHandler,\n  InputHTMLAttributes,\n  KeyboardEvent,\n  SyntheticEvent,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react'\nimport { useRadioGroupContenxt } from './radio-group'\n\nexport type UseRadioProps<Y extends string | number = string> =\n  FormControlOptions & {\n    /**\n     * id assigned to input.\n     */\n    id?: string\n    /**\n     * The name of the input field in a radio.\n     */\n    name?: string\n    /**\n     * The value to be used in the radio button.\n     */\n    value?: Y\n    /**\n     * If `true`, the radio will be initially checked.\n     *\n     * @default false\n     */\n    defaultChecked?: boolean\n    /**\n     * If `true`, the radio will be checked.\n     *\n     * @default false\n     */\n    isChecked?: boolean\n    /**\n     * The callback invoked when the checked state changes.\n     */\n    onChange?: ChangeEventHandler<HTMLInputElement>\n  }\n\nexport const useRadio = <Y extends string | number = string>(\n  props: UseRadioProps<Y>,\n) => {\n  const { id, name, value, required, disabled, readOnly, ...rest } =\n    useFormControlProps(props)\n\n  const [isFocusVisible, setIsFocusVisible] = useState<boolean>(false)\n  const [isFocused, setFocused] = useState<boolean>(false)\n  const [isHovered, setHovered] = useState<boolean>(false)\n  const [isActive, setActive] = useState<boolean>(false)\n\n  const [isChecked, setIsChecked] = useState<boolean>(!!props.defaultChecked)\n\n  const isControlled = props.isChecked !== undefined\n  const checked = isControlled ? (props.isChecked as boolean) : isChecked\n\n  useEffect(() => {\n    return trackFocusVisible(setIsFocusVisible)\n  }, [])\n\n  const onChange = useCallbackRef(\n    (ev: ChangeEvent<HTMLInputElement>) => {\n      if (readOnly || disabled) {\n        ev.preventDefault()\n\n        return\n      }\n\n      if (!isControlled) setIsChecked(ev.target.checked)\n\n      rest.onChange?.(ev)\n    },\n    [readOnly, disabled, isControlled],\n  )\n  const onBlur = useCallbackRef(rest.onBlur)\n  const onFocus = useCallbackRef(rest.onFocus)\n\n  const onKeyDown = useCallback(\n    ({ key }: KeyboardEvent<Element>) => {\n      if (key === ' ') setActive(true)\n    },\n    [setActive],\n  )\n\n  const onKeyUp = useCallback(\n    ({ key }: KeyboardEvent<Element>) => {\n      if (key === ' ') setActive(false)\n    },\n    [setActive],\n  )\n\n  const getContainerProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...pickObject(rest, formControlProperties),\n      ...props,\n      ref,\n      'data-checked': dataAttr(checked),\n    }),\n    [checked, rest],\n  )\n\n  const getIconProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...pickObject(rest, formControlProperties),\n      ...props,\n      ref,\n      'data-active': dataAttr(isActive),\n      'data-hover': dataAttr(isHovered),\n      'data-checked': dataAttr(checked),\n      'data-focus': dataAttr(isFocused),\n      'data-focus-visible': dataAttr(isFocused && isFocusVisible),\n      'aria-hidden': true,\n      onMouseDown: handlerAll(props.onMouseDown, () => setActive(true)),\n      onMouseUp: handlerAll(props.onMouseUp, () => setActive(false)),\n      onMouseEnter: handlerAll(props.onMouseEnter, () => setHovered(true)),\n      onMouseLeave: handlerAll(props.onMouseLeave, () => setHovered(false)),\n    }),\n    [checked, isActive, isFocused, isFocusVisible, isHovered, rest],\n  )\n\n  const getInputProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...pickObject(rest, formControlProperties),\n      ...props,\n      ref,\n      id,\n      type: 'radio',\n      name,\n      value,\n      required,\n      disabled,\n      readOnly,\n      checked,\n      style: {\n        border: '0px',\n        clip: 'rect(0px, 0px, 0px, 0px)',\n        height: '1px',\n        width: '1px',\n        margin: '-1px',\n        padding: '0px',\n        overflow: 'hidden',\n        whiteSpace: 'nowrap',\n        position: 'absolute',\n      },\n      onChange: handlerAll(props.onChange, onChange),\n      onBlur: handlerAll(props.onBlur, onBlur, () => setFocused(false)),\n      onFocus: handlerAll(props.onFocus, onFocus, () => setFocused(true)),\n      onKeyDown: handlerAll(props.onKeyDown, onKeyDown),\n      onKeyUp: handlerAll(props.onKeyUp, onKeyUp),\n    }),\n    [\n      rest,\n      id,\n      name,\n      value,\n      required,\n      disabled,\n      readOnly,\n      checked,\n      onChange,\n      onBlur,\n      onFocus,\n      onKeyDown,\n      onKeyUp,\n    ],\n  )\n\n  const getLabelProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...pickObject(rest, formControlProperties),\n      props,\n      ref,\n      onMouseDown: handlerAll(props.onMouseDown, (ev: SyntheticEvent) => {\n        ev.preventDefault()\n        ev.stopPropagation()\n      }),\n      onTouchStart: handlerAll(props.onTouchStart, (ev: SyntheticEvent) => {\n        ev.preventDefault()\n        ev.stopPropagation()\n      }),\n      'data-checked': dataAttr(checked),\n    }),\n    [checked, rest],\n  )\n\n  return {\n    isFocusVisible,\n    isFocused,\n    isHovered,\n    isActive,\n    isChecked: checked,\n    getContainerProps,\n    getInputProps,\n    getIconProps,\n    getLabelProps,\n  }\n}\n\nexport type UseRadioReturn = ReturnType<typeof useRadio>\n\ntype RadioOptions = {\n  iconProps?: HTMLUIProps<'span'>\n  inputProps?: InputHTMLAttributes<HTMLInputElement>\n  labelProps?: HTMLUIProps<'span'>\n}\n\nexport type RadioProps<Y extends string | number = string> = Omit<\n  HTMLUIProps<'label'>,\n  keyof UseRadioProps\n> &\n  ThemeProps<'Radio'> &\n  UseRadioProps<Y> &\n  RadioOptions\n\nexport const Radio = forwardRef(\n  <Y extends string | number = string>(\n    props: RadioProps<Y>,\n    ref: ForwardedRef<HTMLInputElement>,\n  ) => {\n    const group = useRadioGroupContenxt()\n    const control = useFormControl(props)\n    const [styles, mergedProps] = useMultiComponentStyle('Radio', {\n      ...group,\n      ...props,\n    })\n    const {\n      className,\n      gap = '0.5rem',\n      isRequired = group?.isRequired ?? control.isRequired,\n      isReadOnly = group?.isReadOnly ?? control.isReadOnly,\n      isDisabled = group?.isDisabled ?? control.isDisabled,\n      isInvalid = group?.isInvalid ?? control.isInvalid,\n      iconProps,\n      inputProps,\n      labelProps,\n      children,\n      ...rest\n    } = omitThemeProps(mergedProps)\n\n    const { getContainerProps, getInputProps, getIconProps, getLabelProps } =\n      useRadio({\n        ...rest,\n        isRequired,\n        isReadOnly,\n        isDisabled,\n        isInvalid,\n        isChecked:\n          group?.value && rest.value\n            ? group.value === rest.value\n            : rest.isChecked,\n        onChange:\n          group?.onChange && rest.value\n            ? funcAll(group.onChange, rest.onChange)\n            : rest.onChange,\n      })\n\n    return (\n      <ui.label\n        className={cx('ui-radio', className)}\n        {...getContainerProps()}\n        {...omitObject(rest, [\n          'id',\n          'name',\n          'value',\n          'defaultValue',\n          'defaultChecked',\n          'isChecked',\n          'onChange',\n          'onBlur',\n          'onFocus',\n        ])}\n        __css={{\n          cursor: 'pointer',\n          position: 'relative',\n          display: 'inline-flex',\n          alignItems: 'center',\n          verticalAlign: 'top',\n          gap,\n          ...styles.container,\n        }}\n      >\n        <ui.input\n          className='ui-radio-input'\n          {...getInputProps(inputProps, ref)}\n        />\n\n        <ui.span\n          className='ui-radio-icon'\n          {...getIconProps(iconProps)}\n          __css={{\n            position: 'relative',\n            display: 'inline-block',\n            userSelect: 'none',\n            ...styles.icon,\n          }}\n        />\n\n        <ui.span\n          className='ui-radio-label'\n          {...getLabelProps(labelProps)}\n          __css={{ ...styles.label }}\n        >\n          {children}\n        </ui.span>\n      </ui.label>\n    )\n  },\n) as {\n  <Y extends string | number = string>(\n    props: RadioProps<Y> & { ref?: Ref<HTMLInputElement> },\n  ): JSX.Element\n} & ComponentArgs\n\nRadio.displayName = 'Radio'\n"],"names":["isEvent","value","isObject","useRadioGroup","id","name","isNative","props","useId","useCallbackRef","setValue","useControllableState","containerRef","useRef","onFocus","useCallback","container","query","firstInput","onChange","evOrValue","nextValue","getContainerProps","ref","mergeRefs","getRadioProps","RadioGroupProvider","useRadioGroupContenxt","createContext","RadioGroup","forwardRef","className","size","variant","colorScheme","children","direction","gap","isRequired","isReadOnly","isDisabled","isInvalid","useFormControl","jsx","Flex","cx","omitObject","useRadio","required","disabled","readOnly","rest","useFormControlProps","isFocusVisible","setIsFocusVisible","useState","isFocused","setFocused","isHovered","setHovered","isActive","setActive","isChecked","setIsChecked","isControlled","checked","useEffect","trackFocusVisible","ev","_a","onBlur","onKeyDown","key","onKeyUp","pickObject","formControlProperties","dataAttr","getIconProps","handlerAll","getInputProps","getLabelProps","Radio","group","control","styles","mergedProps","useMultiComponentStyle","iconProps","inputProps","labelProps","omitThemeProps","funcAll","jsxs","ui"],"mappings":"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"}