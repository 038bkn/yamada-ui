{"version":3,"file":"index-f4a21ab0.js","sources":["../../packages/hooks/use-animation/src/index.ts"],"sourcesContent":["import {\n  css,\n  keyframes as emotionKeyframes,\n  StyledTheme,\n  useTheme,\n  useColorMode,\n  ColorMode,\n  AnimationStyle,\n  Theme,\n} from '@yamada-ui/core'\nimport { useBoolean } from '@yamada-ui/use-boolean'\nimport { useEventListener } from '@yamada-ui/use-event-listener'\nimport {\n  Dict,\n  isArray,\n  isUndefined,\n  runIfFunc,\n  getOwnerWindow,\n  getMemoizedObject as get,\n  isString,\n} from '@yamada-ui/utils'\nimport { useCallback, useEffect, useRef, useState } from 'react'\n\nconst getValue =\n  (\n    name: string,\n    path: Omit<AnimationStyle, 'keyframes'>[keyof Omit<\n      AnimationStyle,\n      'keyframes'\n    >],\n  ) =>\n  (theme: StyledTheme<Dict>, colorMode: ColorMode) => {\n    const value = get(theme, `${name}.${path}`)\n\n    if (isArray(value)) {\n      const [lightValue, darkValue] = value\n\n      return colorMode === 'light' ? lightValue : darkValue\n    } else {\n      return value\n    }\n  }\n\nconst transformConfig =\n  (obj: Omit<AnimationStyle, 'keyframes'>) =>\n  (\n    theme: StyledTheme<Dict>,\n    colorMode: ColorMode,\n  ): Omit<AnimationStyle, 'keyframes'> =>\n    Object.entries(obj).reduce((obj, [key, value]) => {\n      if (key === 'duration')\n        value =\n          getValue('transitions.duration', value)(theme, colorMode) ?? value\n      if (key === 'timingFunction')\n        value = getValue('transitions.easing', value)(theme, colorMode) ?? value\n\n      obj[key] = value\n\n      return obj\n    }, {} as Dict) as Omit<AnimationStyle, 'keyframes'>\n\nconst createKeyframes =\n  (\n    keyframes: AnimationStyle['keyframes'],\n    config: Omit<AnimationStyle, 'keyframes'>,\n  ) =>\n  (theme: StyledTheme<Dict>, colorMode: ColorMode): string => {\n    const generatedKeyframes = css(keyframes)(theme)\n\n    const {\n      duration = '0s',\n      timingFunction = 'ease',\n      delay = '0s',\n      iterationCount = '1',\n      direction = 'normal',\n      fillMode = 'none',\n      playState = 'running',\n    } = transformConfig(config)(theme, colorMode)\n\n    const name = emotionKeyframes(generatedKeyframes)\n\n    return `${name} ${duration} ${timingFunction} ${delay} ${iterationCount} ${direction} ${fillMode} ${playState}`\n  }\n\nconst createAnimation =\n  (tokenOrObj: AnimationStyle | Theme['animations']) =>\n  (theme: StyledTheme<Dict>, colorMode: ColorMode) => {\n    let resolvedStyle: AnimationStyle | undefined\n\n    if (isString(tokenOrObj)) {\n      resolvedStyle = get(theme, `animations.${tokenOrObj}`, {})\n    } else {\n      resolvedStyle = tokenOrObj\n    }\n\n    const { keyframes = {}, ...config } = resolvedStyle ?? {}\n\n    return createKeyframes(keyframes, config)(theme, colorMode)\n  }\n\ntype Styles =\n  | AnimationStyle\n  | Theme['animations']\n  | (AnimationStyle | Theme['animations'])[]\n\nexport const useAnimation = (styles: Styles): string => {\n  const { theme } = useTheme()\n  const { colorMode } = useColorMode()\n\n  if (isArray(styles)) {\n    return styles\n      .map((style) => createAnimation(style)(theme, colorMode))\n      .join(', ')\n  } else {\n    return createAnimation(styles)(theme, colorMode)\n  }\n}\n\nexport const useDynamicAnimation = <\n  T extends (AnimationStyle | Theme['animations'])[] | Record<string, Styles>,\n>(\n  arrayOrObj: T,\n  init?: keyof T | (keyof T)[],\n): [\n  string | undefined,\n  (\n    key:\n      | keyof T\n      | (keyof T)[]\n      | ((key: keyof T | (keyof T)[] | undefined) => keyof T | (keyof T)[]),\n  ) => void,\n] => {\n  const { theme } = useTheme()\n  const { colorMode } = useColorMode()\n\n  const keys = useRef<string | string[] | undefined>(\n    !isUndefined(init)\n      ? isArray(init)\n        ? init.map(String)\n        : String(init)\n      : undefined,\n  )\n  const cache = useRef<Map<string, string>>(new Map<string, string>())\n\n  const [animations, setAnimations] = useState<string | undefined>(() => {\n    for (const [key, styles] of Object.entries(arrayOrObj)) {\n      if (cache.current.has(key)) return\n\n      if (isArray(styles)) {\n        cache.current.set(\n          key,\n          styles\n            .map((style) => createAnimation(style)(theme, colorMode))\n            .join(', '),\n        )\n      } else {\n        cache.current.set(key, createAnimation(styles)(theme, colorMode))\n      }\n    }\n\n    if (isArray(keys.current)) {\n      return keys.current.map((key) => cache.current.get(key)).join(', ')\n    } else {\n      return cache.current.get(keys.current ?? '')\n    }\n  })\n\n  const setAnimation = useCallback(\n    (\n      keysOrFunc:\n        | keyof T\n        | (keyof T)[]\n        | ((key: keyof T | (keyof T)[] | undefined) => keyof T | (keyof T)[]),\n    ) => {\n      const args = (() => {\n        if (!isUndefined(keys.current) && isArray(arrayOrObj)) {\n          return isArray(keys.current)\n            ? keys.current.map(Number)\n            : Number(keys.current)\n        } else {\n          return keys.current\n        }\n      })() as keyof T | (keyof T)[] | undefined\n\n      const keyOrArray = runIfFunc(keysOrFunc, args)\n\n      keys.current = isArray(keyOrArray)\n        ? keyOrArray.map(String)\n        : String(keyOrArray)\n\n      if (isArray(keys.current)) {\n        setAnimations(\n          keys.current.map((key) => cache.current.get(key)).join(', '),\n        )\n      } else {\n        setAnimations(cache.current.get(keys.current ?? ''))\n      }\n    },\n    [arrayOrObj],\n  )\n\n  return [animations, setAnimation]\n}\n\nexport type UseAnimationObserverProps = {\n  isOpen: boolean\n  ref: React.RefObject<HTMLElement>\n}\n\nexport const useAnimationObserver = ({\n  isOpen,\n  ref,\n}: UseAnimationObserverProps) => {\n  const [mounted, setMounted] = useState(isOpen)\n  const [flg, { on }] = useBoolean()\n\n  useEffect(() => {\n    if (flg) return\n\n    setMounted(isOpen)\n    on()\n  }, [isOpen, flg, on])\n\n  useEventListener(\n    () => ref.current,\n    'animationend',\n    () => setMounted(isOpen),\n  )\n\n  const hidden = isOpen ? false : !mounted\n\n  return {\n    present: !hidden,\n    onAnimationComplete() {\n      const ownerWindow = getOwnerWindow(ref.current)\n      const ev = new ownerWindow.CustomEvent('animationend', {\n        bubbles: true,\n      })\n\n      ref.current?.dispatchEvent(ev)\n    },\n  }\n}\n\nexport type ReturnUseAnimationObserver = ReturnType<typeof useAnimationObserver>\n"],"names":["getValue","name","path","theme","colorMode","value","get","isArray","lightValue","darkValue","transformConfig","obj","key","createKeyframes","keyframes","config","generatedKeyframes","css","duration","timingFunction","delay","iterationCount","direction","fillMode","playState","emotionKeyframes","createAnimation","tokenOrObj","resolvedStyle","isString","useAnimation","styles","useTheme","useColorMode","style","useDynamicAnimation","arrayOrObj","init","keys","useRef","isUndefined","cache","animations","setAnimations","useState","setAnimation","useCallback","keysOrFunc","args","keyOrArray","runIfFunc","useAnimationObserver","isOpen","ref","mounted","setMounted","flg","on","useBoolean","useEffect","useEventListener","ownerWindow","getOwnerWindow","ev","_a"],"mappings":"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"}