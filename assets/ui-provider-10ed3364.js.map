{"version":3,"file":"ui-provider-10ed3364.js","sources":["../../packages/components/notice/src/notice-provider.tsx","../../packages/providers/src/ui-provider.tsx"],"sourcesContent":["import type { CSSUIObject, ThemeConfig } from \"@yamada-ui/core\"\nimport { ui } from \"@yamada-ui/core\"\nimport type { MotionVariants, MotionStyle } from \"@yamada-ui/motion\"\nimport { AnimatePresence, motion, useIsPresent } from \"@yamada-ui/motion\"\nimport { Portal } from \"@yamada-ui/portal\"\nimport { useTimeout } from \"@yamada-ui/use-timeout\"\nimport { cx, runIfFunc, useUpdateEffect } from \"@yamada-ui/utils\"\nimport type { FC } from \"react\"\nimport { memo, useEffect, useState, useSyncExternalStore } from \"react\"\nimport type { NoticeOptions } from \"./notice\"\nimport { noticeStore } from \"./notice\"\n\nexport type NoticeProviderProps = Omit<\n  Required<ThemeConfig>[\"notice\"],\n  \"options\"\n>\n\nexport const NoticeProvider: FC<NoticeProviderProps> = ({\n  variants,\n  gap = \"md\",\n  appendToParentPortal,\n  containerRef,\n}) => {\n  const state = useSyncExternalStore(\n    noticeStore.subscribe,\n    noticeStore.getSnapshot,\n    noticeStore.getSnapshot,\n  )\n\n  const components = Object.entries(state).map(([placement, notices]) => {\n    const top = placement.includes(\"top\")\n      ? \"env(safe-area-inset-top, 0px)\"\n      : undefined\n    const bottom = placement.includes(\"bottom\")\n      ? \"env(safe-area-inset-bottom, 0px)\"\n      : undefined\n    const right = !placement.includes(\"left\")\n      ? \"env(safe-area-inset-right, 0px)\"\n      : undefined\n    const left = !placement.includes(\"right\")\n      ? \"env(safe-area-inset-left, 0px)\"\n      : undefined\n\n    const css: CSSUIObject = {\n      position: \"fixed\",\n      zIndex: \"zarbon\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      margin: gap,\n      gap,\n      top,\n      bottom,\n      right,\n      left,\n    }\n\n    return (\n      <ui.ul\n        key={placement}\n        className={cx(\"ui-notice__list\", `ui-notice__list--${placement}`)}\n        __css={css}\n      >\n        <AnimatePresence initial={false}>\n          {notices.map((notice) => (\n            <NoticeComponent key={notice.id} variants={variants} {...notice} />\n          ))}\n        </AnimatePresence>\n      </ui.ul>\n    )\n  })\n\n  return (\n    <Portal\n      appendToParentPortal={appendToParentPortal}\n      containerRef={containerRef}\n    >\n      {components}\n    </Portal>\n  )\n}\n\nconst defaultVariants: MotionVariants = {\n  initial: ({ placement }) => ({\n    opacity: 0,\n    [[\"top\", \"bottom\"].includes(placement) ? \"y\" : \"x\"]:\n      (placement === \"bottom\" ? 1 : placement.includes(\"right\") ? 1 : -1) * 24,\n  }),\n  animate: {\n    opacity: 1,\n    y: 0,\n    x: 0,\n    scale: 1,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    opacity: 0,\n    scale: 0.95,\n    transition: {\n      duration: 0.2,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n}\n\ntype NoticeComponentProps = NoticeOptions &\n  Pick<NoticeProviderProps, \"variants\">\n\nconst NoticeComponent = memo(\n  ({\n    variants = defaultVariants,\n    placement,\n    duration = 5000,\n    message,\n    onCloseComplete,\n    isDelete = false,\n    onDelete,\n    style,\n  }: NoticeComponentProps) => {\n    const [delay, setDelay] = useState(duration)\n    const isPresent = useIsPresent()\n\n    useUpdateEffect(() => {\n      if (!isPresent) onCloseComplete?.()\n    }, [isPresent])\n\n    useUpdateEffect(() => {\n      setDelay(duration)\n    }, [duration])\n\n    const onMouseEnter = () => setDelay(null)\n    const onMouseLeave = () => setDelay(duration)\n\n    const onClose = () => {\n      if (isPresent) onDelete()\n    }\n\n    useEffect(() => {\n      if (isPresent && isDelete) onDelete()\n    }, [isPresent, isDelete, onDelete])\n\n    useTimeout(onClose, delay)\n\n    const css: CSSUIObject = {\n      pointerEvents: \"auto\",\n      maxW: \"2xl\",\n      minW: \"sm\",\n      ...style,\n    }\n\n    return (\n      <motion.li\n        layout\n        className=\"ui-notice__list__item\"\n        variants={variants}\n        initial=\"initial\"\n        animate=\"animate\"\n        exit=\"exit\"\n        onHoverStart={onMouseEnter}\n        onHoverEnd={onMouseLeave}\n        custom={{ placement }}\n        style={\n          {\n            display: \"flex\",\n            justifyContent: placement.includes(\"left\")\n              ? \"flex-start\"\n              : placement.includes(\"right\")\n              ? \"flex-end\"\n              : \"center\",\n          } as MotionStyle\n        }\n      >\n        <ui.div className=\"ui-notice__list__item__inner\" __css={css}>\n          {runIfFunc(message, { onClose })}\n        </ui.div>\n      </motion.li>\n    )\n  },\n)\n\nNoticeComponent.displayName = \"NoticeComponent\"\n","import type {\n  ThemeConfig,\n  ColorModeManager,\n  ThemeSchemeManager,\n} from \"@yamada-ui/core\"\nimport {\n  ThemeProvider,\n  ColorModeProvider,\n  ResetStyle,\n  GlobalStyle,\n} from \"@yamada-ui/core\"\nimport { LoadingProvider } from \"@yamada-ui/loading\"\nimport { NoticeProvider } from \"@yamada-ui/notice\"\nimport { defaultTheme, defaultConfig } from \"@yamada-ui/theme\"\nimport type { Dict } from \"@yamada-ui/utils\"\nimport type { FC, ReactNode } from \"react\"\nimport type { Environment } from \"./environment-provider\"\nimport { EnvironmentProvider } from \"./environment-provider\"\n\nexport type UIProviderProps = {\n  /**\n   * The theme of the yamada ui.\n   *\n   * If omitted, uses the default theme provided by yamada ui.\n   */\n  theme?: Dict\n  /**\n   * The config of the yamada ui.\n   *\n   * If omitted, uses the default config provided by yamada ui.\n   */\n  config?: ThemeConfig\n  /**\n   * If `true`, `ResetStyle` component will be mounted to help reset browser styles.\n   *\n   * @default true\n   */\n  disableResetStyle?: boolean\n  /**\n   * If `true`, will not mount the global styles defined in the theme.\n   *\n   * @default true\n   */\n  disableGlobalStyle?: boolean\n  /**\n   * Manager to persist a user's color mode preference.\n   *\n   * Omit if you don't render server-side.\n   * For SSR, choose `cookieStorageManager`.\n   *\n   * @default 'localStorageManager'\n   */\n  colorModeManager?: ColorModeManager\n  /**\n   * Manager to persist a user's theme scheme preference.\n   *\n   * Omit if you don't render server-side.\n   * For SSR, choose `cookieStorageManager`.\n   *\n   * @default 'localStorageManager'\n   */\n  themeSchemeManager?: ThemeSchemeManager\n  /**\n   * The environment `window` and `document` to be used by all components and hooks.\n   *\n   * By default, we smartly determine the ownerDocument and defaultView\n   * based on where `UIProvider` is rendered.\n   */\n  environment?: Environment\n  /**\n   * If `true`,  the use of automatic window and document detection will be disabled.\n   *\n   * @default false\n   */\n  disableEnvironment?: boolean\n  /**\n   * Application content.\n   */\n  children: ReactNode\n}\n\nexport const UIProvider: FC<UIProviderProps> = ({\n  theme = defaultTheme,\n  config = defaultConfig,\n  disableResetStyle,\n  disableGlobalStyle,\n  colorModeManager,\n  themeSchemeManager,\n  environment,\n  disableEnvironment,\n  children,\n}) => {\n  return (\n    <ThemeProvider\n      theme={theme}\n      config={config}\n      themeSchemeManager={themeSchemeManager}\n    >\n      <ColorModeProvider colorModeManager={colorModeManager} config={config}>\n        <EnvironmentProvider\n          environment={environment}\n          disabled={disableEnvironment}\n        >\n          <LoadingProvider {...config.loading}>\n            {!disableResetStyle ? <ResetStyle /> : null}\n            {!disableGlobalStyle ? <GlobalStyle /> : null}\n\n            {children}\n\n            <NoticeProvider {...config.notice} />\n          </LoadingProvider>\n        </EnvironmentProvider>\n      </ColorModeProvider>\n    </ThemeProvider>\n  )\n}\n"],"names":["NoticeProvider","variants","gap","appendToParentPortal","containerRef","state","useSyncExternalStore","noticeStore","components","placement","notices","top","bottom","right","left","css","jsx","ui","cx","AnimatePresence","notice","NoticeComponent","Portal","defaultVariants","memo","duration","message","onCloseComplete","isDelete","onDelete","style","delay","setDelay","useState","isPresent","useIsPresent","useUpdateEffect","onMouseEnter","onMouseLeave","onClose","useEffect","useTimeout","motion","runIfFunc","UIProvider","theme","defaultTheme","config","defaultConfig","disableResetStyle","disableGlobalStyle","colorModeManager","themeSchemeManager","environment","disableEnvironment","children","ThemeProvider","ColorModeProvider","EnvironmentProvider","jsxs","LoadingProvider","ResetStyle","GlobalStyle"],"mappings":"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"}