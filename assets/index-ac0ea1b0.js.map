{"version":3,"file":"index-ac0ea1b0.js","sources":["../../packages/utils/src/event.ts","../../packages/hooks/use-latest-ref/src/index.ts","../../node_modules/.pnpm/framesync@6.1.2/node_modules/framesync/dist/es/on-next-frame.mjs","../../node_modules/.pnpm/framesync@6.1.2/node_modules/framesync/dist/es/create-render-step.mjs","../../node_modules/.pnpm/framesync@6.1.2/node_modules/framesync/dist/es/index.mjs","../../packages/hooks/use-pan-event/src/index.ts","../../packages/hooks/use-size/src/index.ts"],"sourcesContent":["export type AnyPointerEvent = MouseEvent | TouchEvent | PointerEvent\n\nexport type PointType = 'page' | 'client'\n\nexport type Point = {\n  x: number\n  y: number\n}\n\nexport type PointerEventInfo = {\n  point: Point\n}\n\nexport type MixedEventListener = (\n  e: AnyPointerEvent,\n  info: PointerEventInfo,\n) => void\n\nexport const isMouseEvent = (ev: any): ev is MouseEvent => {\n  const win = getEventWindow(ev)\n\n  if (typeof win.PointerEvent !== 'undefined' && ev instanceof win.PointerEvent)\n    return !!(ev.pointerType === 'mouse')\n\n  return ev instanceof win.MouseEvent\n}\n\nexport const isTouchEvent = (ev: AnyPointerEvent): ev is TouchEvent =>\n  !!(ev as TouchEvent).touches\n\nexport const isMultiTouchEvent = (ev: AnyPointerEvent) =>\n  isTouchEvent(ev) && ev.touches.length > 1\n\nexport const getEventWindow = (ev: Event): typeof globalThis =>\n  ((ev as UIEvent).view ?? window) as unknown as typeof globalThis\n\nexport const pointFromTouch = (e: TouchEvent, type: PointType = 'page') => {\n  const point = e.touches[0] || e.changedTouches[0]\n\n  return { x: point[`${type}X`], y: point[`${type}Y`] }\n}\n\nexport const pointFromMouse = (\n  point: MouseEvent | PointerEvent,\n  type: PointType = 'page',\n) => ({\n  x: point[`${type}X`],\n  y: point[`${type}Y`],\n})\n\nexport const getEventPoint = (ev: AnyPointerEvent, type: PointType = 'page') =>\n  isTouchEvent(ev) ? pointFromTouch(ev, type) : pointFromMouse(ev, type)\n\nexport const addDomEvent = (\n  target: EventTarget,\n  type: string,\n  cb: EventListener,\n  options?: AddEventListenerOptions,\n) => {\n  target.addEventListener(type, cb, options)\n\n  return () => {\n    target.removeEventListener(type, cb, options)\n  }\n}\n\nconst filter =\n  (cb: EventListener): EventListener =>\n  (ev: Event) => {\n    const isMouse = isMouseEvent(ev)\n\n    if (!isMouse || (isMouse && ev.button === 0)) cb(ev)\n  }\n\nconst wrap = (cb: MixedEventListener, filterPrimary = false): EventListener => {\n  const listener = (ev: any) => cb(ev, { point: getEventPoint(ev) })\n\n  const fn = filterPrimary ? filter(listener) : listener\n\n  return fn as EventListener\n}\n\nexport const addPointerEvent = (\n  target: EventTarget,\n  type: string,\n  cb: MixedEventListener,\n  options?: AddEventListenerOptions,\n) => addDomEvent(target, type, wrap(cb, type === 'pointerdown'), options)\n","import { MutableRefObject, useRef } from 'react'\n\nexport const useLatestRef = <T extends any>(value: T) => {\n  const ref = useRef<T | null>(null)\n\n  ref.current = value\n\n  return ref as MutableRefObject<T>\n}\n","const defaultTimestep = (1 / 60) * 1000;\nconst getCurrentTime = typeof performance !== \"undefined\"\n    ? () => performance.now()\n    : () => Date.now();\nconst onNextFrame = typeof window !== \"undefined\"\n    ? (callback) => window.requestAnimationFrame(callback)\n    : (callback) => setTimeout(() => callback(getCurrentTime()), defaultTimestep);\n\nexport { defaultTimestep, onNextFrame };\n","function createRenderStep(runNextFrame) {\n    let toRun = [];\n    let toRunNextFrame = [];\n    let numToRun = 0;\n    let isProcessing = false;\n    let flushNextFrame = false;\n    const toKeepAlive = new WeakSet();\n    const step = {\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const buffer = addToCurrentFrame ? toRun : toRunNextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (buffer.indexOf(callback) === -1) {\n                buffer.push(callback);\n                if (addToCurrentFrame && isProcessing)\n                    numToRun = toRun.length;\n            }\n            return callback;\n        },\n        cancel: (callback) => {\n            const index = toRunNextFrame.indexOf(callback);\n            if (index !== -1)\n                toRunNextFrame.splice(index, 1);\n            toKeepAlive.delete(callback);\n        },\n        process: (frameData) => {\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [toRun, toRunNextFrame] = [toRunNextFrame, toRun];\n            toRunNextFrame.length = 0;\n            numToRun = toRun.length;\n            if (numToRun) {\n                for (let i = 0; i < numToRun; i++) {\n                    const callback = toRun[i];\n                    callback(frameData);\n                    if (toKeepAlive.has(callback)) {\n                        step.schedule(callback);\n                        runNextFrame();\n                    }\n                }\n            }\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","import { onNextFrame, defaultTimestep } from './on-next-frame.mjs';\nimport { createRenderStep } from './create-render-step.mjs';\n\nconst maxElapsed = 40;\nlet useDefaultElapsed = true;\nlet runNextFrame = false;\nlet isProcessing = false;\nconst frame = {\n    delta: 0,\n    timestamp: 0,\n};\nconst stepsOrder = [\n    \"read\",\n    \"update\",\n    \"preRender\",\n    \"render\",\n    \"postRender\",\n];\nconst steps = stepsOrder.reduce((acc, key) => {\n    acc[key] = createRenderStep(() => (runNextFrame = true));\n    return acc;\n}, {});\nconst sync = stepsOrder.reduce((acc, key) => {\n    const step = steps[key];\n    acc[key] = (process, keepAlive = false, immediate = false) => {\n        if (!runNextFrame)\n            startLoop();\n        return step.schedule(process, keepAlive, immediate);\n    };\n    return acc;\n}, {});\nconst cancelSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = steps[key].cancel;\n    return acc;\n}, {});\nconst flushSync = stepsOrder.reduce((acc, key) => {\n    acc[key] = () => steps[key].process(frame);\n    return acc;\n}, {});\nconst processStep = (stepId) => steps[stepId].process(frame);\nconst processFrame = (timestamp) => {\n    runNextFrame = false;\n    frame.delta = useDefaultElapsed\n        ? defaultTimestep\n        : Math.max(Math.min(timestamp - frame.timestamp, maxElapsed), 1);\n    frame.timestamp = timestamp;\n    isProcessing = true;\n    stepsOrder.forEach(processStep);\n    isProcessing = false;\n    if (runNextFrame) {\n        useDefaultElapsed = false;\n        onNextFrame(processFrame);\n    }\n};\nconst startLoop = () => {\n    runNextFrame = true;\n    useDefaultElapsed = true;\n    if (!isProcessing)\n        onNextFrame(processFrame);\n};\nconst getFrameData = () => frame;\n\nexport default sync;\nexport { cancelSync, flushSync, getFrameData };\n","import { useLatestRef } from '@yamada-ui/use-latest-ref'\nimport {\n  addPointerEvent,\n  AnyPointerEvent,\n  getEventPoint,\n  isMultiTouchEvent,\n  Point,\n  PointerEventInfo,\n} from '@yamada-ui/utils'\nimport sync, { cancelSync, getFrameData } from 'framesync'\nimport { RefObject, useEffect, useRef } from 'react'\n\ntype PanEventInfo = {\n  point: Point\n  delta: Point\n  offset: Point\n  velocity: Point\n}\n\ntype PanEventHandler = (event: AnyPointerEvent, info: PanEventInfo) => void\n\ntype TimestampedPoint = Point & { timestamp: number }\n\ntype PanEventHistory = TimestampedPoint[]\n\ntype PanEventHandlers = {\n  onSessionStart: PanEventHandler\n  onSessionEnd: PanEventHandler\n  onStart: PanEventHandler\n  onMove: PanEventHandler\n  onEnd: PanEventHandler\n}\n\nconst subtract = (a: Point, b: Point) => ({ x: a.x - b.x, y: a.y - b.y })\n\nconst getPanInfo = (info: PointerEventInfo, history: PanEventHistory) => ({\n  point: info.point,\n  delta: subtract(info.point, history[history.length - 1]),\n  offset: subtract(info.point, history[0]),\n  velocity: getVelocity(history, 0.1),\n})\n\nconst toMilliseconds = (v: number) => v * 1000\n\nconst getVelocity = (history: TimestampedPoint[], timeDelta: number): Point => {\n  if (history.length < 2) return { x: 0, y: 0 }\n\n  let i = history.length - 1\n  let timestampedPoint: TimestampedPoint | null = null\n\n  const lastPoint = history[history.length - 1]\n\n  while (i >= 0) {\n    timestampedPoint = history[i]\n\n    if (\n      lastPoint.timestamp - timestampedPoint.timestamp >\n      toMilliseconds(timeDelta)\n    ) {\n      break\n    }\n\n    i--\n  }\n\n  if (!timestampedPoint) return { x: 0, y: 0 }\n\n  const time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000\n\n  if (time === 0) return { x: 0, y: 0 }\n\n  const currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time,\n  }\n\n  if (currentVelocity.x === Infinity) currentVelocity.x = 0\n\n  if (currentVelocity.y === Infinity) currentVelocity.y = 0\n\n  return currentVelocity\n}\n\nconst pipe =\n  <Y extends any>(...fns: ((a: Y) => Y)[]) =>\n  (v: Y) =>\n    fns.reduce((a, b) => b(a), v)\n\nconst distance1D = (a: number, b: number) => Math.abs(a - b)\n\nconst isPoint = (point: any): point is { x: number; y: number } =>\n  'x' in point && 'y' in point\n\nconst distance = <Y extends Point | number>(a: Y, b: Y) => {\n  if (typeof a === 'number' && typeof b === 'number') return distance1D(a, b)\n\n  if (isPoint(a) && isPoint(b)) {\n    const xDelta = distance1D(a.x, b.x)\n    const yDelta = distance1D(a.y, b.y)\n\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2)\n  }\n\n  return 0\n}\n\nconst panEvent = (\n  ev: AnyPointerEvent,\n  handlers: Partial<PanEventHandlers>,\n  threshold: number = 3,\n) => {\n  if (isMultiTouchEvent(ev)) return\n\n  const win = ev.view ?? window\n  const info = { point: getEventPoint(ev) }\n  const { timestamp } = getFrameData()\n  const { onSessionStart } = handlers\n\n  const history: PanEventHistory = [{ ...info.point, timestamp }]\n\n  let startEvent: AnyPointerEvent | null = null\n  let lastEvent: AnyPointerEvent | null = null\n  let lastEventInfo: PointerEventInfo | null = null\n\n  ev.stopPropagation()\n  ev.preventDefault()\n\n  onSessionStart?.(ev, getPanInfo(info, history))\n\n  const updatePoint = () => {\n    if (!(lastEvent && lastEventInfo)) return\n\n    const info = getPanInfo(lastEventInfo, history)\n\n    const isPanStarted = startEvent !== null\n\n    const isDistancePastThreshold =\n      distance(info.offset, { x: 0, y: 0 }) >= threshold\n\n    if (!isPanStarted && !isDistancePastThreshold) return\n\n    const { timestamp } = getFrameData()\n\n    history.push({ ...info.point, timestamp })\n\n    const { onStart, onMove } = handlers\n\n    if (!isPanStarted) {\n      onStart?.(lastEvent, info)\n\n      startEvent = lastEvent\n    }\n\n    onMove?.(lastEvent, info)\n  }\n\n  const onPointerMove = (ev: AnyPointerEvent, info: PointerEventInfo) => {\n    lastEvent = ev\n    lastEventInfo = info\n\n    sync.update(updatePoint, true)\n  }\n\n  const onPointerUp = (event: AnyPointerEvent, info: PointerEventInfo) => {\n    const panInfo = getPanInfo(info, history)\n    const { onEnd, onSessionEnd } = handlers\n\n    onSessionEnd?.(event, panInfo)\n\n    end()\n\n    if (!onEnd || !startEvent) return\n\n    onEnd?.(event, panInfo)\n  }\n\n  const updateHandlers = (newHandlers: Partial<PanEventHandlers>) => {\n    handlers = newHandlers\n  }\n\n  let removeListeners = pipe(\n    addPointerEvent(win, 'pointermove', onPointerMove),\n    addPointerEvent(win, 'pointerup', onPointerUp),\n    addPointerEvent(win, 'pointercancel', onPointerUp),\n  )\n\n  const end = () => {\n    removeListeners?.()\n\n    cancelSync.update(updatePoint)\n  }\n\n  return {\n    updateHandlers,\n    end,\n  }\n}\n\ntype ReturnPanEvent = ReturnType<typeof panEvent>\n\nexport type UsePanEventProps = {\n  onMove?: PanEventHandler\n  onStart?: PanEventHandler\n  onEnd?: PanEventHandler\n  onSessionStart?: PanEventHandler\n  onSessionEnd?: PanEventHandler\n  threshold?: number\n}\n\nexport const usePanEvent = (\n  ref: RefObject<HTMLElement>,\n  {\n    onMove,\n    onStart,\n    onEnd,\n    onSessionStart,\n    onSessionEnd,\n    threshold,\n  }: UsePanEventProps,\n) => {\n  const hasPanEvents =\n    !!onMove || !!onStart || !!onEnd || !!onSessionStart || !!onSessionEnd\n\n  const panSession = useRef<ReturnPanEvent | null>(null)\n\n  const handlersRef = useLatestRef<Partial<PanEventHandlers>>({\n    onSessionStart,\n    onSessionEnd,\n    onStart,\n    onMove,\n    onEnd: (event, info) => {\n      panSession.current = null\n\n      onEnd?.(event, info)\n    },\n  })\n\n  useEffect(() => {\n    panSession.current?.updateHandlers(handlersRef.current)\n  })\n\n  useEffect(() => {\n    const node = ref.current\n\n    if (!node || !hasPanEvents) return\n\n    const onPointerDown = (event: AnyPointerEvent) => {\n      panSession.current = panEvent(event, handlersRef.current, threshold)\n    }\n\n    return addPointerEvent(node, 'pointerdown', onPointerDown)\n  }, [ref, hasPanEvents, handlersRef, threshold])\n\n  useEffect(() => {\n    return () => {\n      panSession.current?.end()\n      panSession.current = null\n    }\n  }, [])\n}\n","import { useSafeLayoutEffect, isRefObject, isArray } from '@yamada-ui/utils'\nimport { useState } from 'react'\n\ntype Size = {\n  width: number\n  height: number\n}\n\nexport const trackElementSize = (\n  el: HTMLElement | null,\n  cb: (size: Size | undefined) => void,\n) => {\n  if (!el) {\n    cb(undefined)\n\n    return\n  }\n\n  cb({ width: el.offsetWidth, height: el.offsetHeight })\n\n  const win = el.ownerDocument.defaultView ?? window\n\n  const observer = new win.ResizeObserver((entries) => {\n    if (!isArray(entries) || !entries.length) return\n\n    const [entry] = entries\n    let width: number\n    let height: number\n\n    if ('borderBoxSize' in entry) {\n      const borderSizeEntry = entry.borderBoxSize\n      const borderSize = isArray(borderSizeEntry)\n        ? borderSizeEntry[0]\n        : borderSizeEntry\n\n      width = borderSize.inlineSize\n      height = borderSize.blockSize\n    } else {\n      width = el.offsetWidth\n      height = el.offsetHeight\n    }\n\n    cb({ width, height })\n  })\n\n  observer.observe(el, { box: 'border-box' })\n\n  return () => observer.unobserve(el)\n}\n\nconst trackMutation = (el: HTMLElement | null, cb: () => void) => {\n  if (!el || !el.parentElement) return\n\n  const win = el.ownerDocument?.defaultView ?? window\n\n  const observer = new win.MutationObserver(() => {\n    cb()\n  })\n\n  observer.observe(el.parentElement, { childList: true })\n\n  return () => {\n    observer.disconnect()\n  }\n}\n\nexport const useSizes = <T extends HTMLElement | null>({\n  getNodes,\n  observeMutation = true,\n}: {\n  getNodes: () => T[]\n  observeMutation?: boolean\n}) => {\n  const [sizes, setSizes] = useState<Size[]>([])\n  const [count, setCount] = useState(0)\n\n  useSafeLayoutEffect(() => {\n    const elements = getNodes()\n\n    const cleanups = elements.map((element, index) =>\n      trackElementSize(element, (size) => {\n        setSizes((sizes) => {\n          return [\n            ...sizes.slice(0, index),\n            size,\n            ...sizes.slice(index + 1),\n          ] as Size[]\n        })\n      }),\n    )\n\n    if (observeMutation) {\n      const firstNode = elements[0]\n\n      cleanups.push(\n        trackMutation(firstNode, () => {\n          setCount((count) => count + 1)\n        }),\n      )\n    }\n\n    return () => {\n      cleanups.forEach((cleanup) => {\n        cleanup?.()\n      })\n    }\n  }, [count])\n\n  return sizes as (Size | undefined)[]\n}\n\nexport const useSize = <T extends HTMLElement | null>(\n  refOrEl: T | React.RefObject<T>,\n) => {\n  const [size] = useSizes({\n    observeMutation: false,\n\n    getNodes: () => {\n      const node = isRefObject(refOrEl) ? refOrEl.current : refOrEl\n\n      return [node]\n    },\n  })\n\n  return size as Size | undefined\n}\n"],"names":["isMouseEvent","ev","win","getEventWindow","isTouchEvent","isMultiTouchEvent","pointFromTouch","e","type","point","pointFromMouse","getEventPoint","addDomEvent","target","cb","options","filter","isMouse","wrap","filterPrimary","listener","addPointerEvent","useLatestRef","value","ref","useRef","defaultTimestep","getCurrentTime","onNextFrame","callback","createRenderStep","runNextFrame","toRun","toRunNextFrame","numToRun","isProcessing","flushNextFrame","toKeepAlive","step","keepAlive","immediate","addToCurrentFrame","buffer","index","frameData","maxElapsed","useDefaultElapsed","frame","stepsOrder","steps","acc","key","sync","process","startLoop","cancelSync","processStep","stepId","processFrame","timestamp","getFrameData","subtract","a","b","getPanInfo","info","history","getVelocity","toMilliseconds","v","timeDelta","i","timestampedPoint","lastPoint","time","currentVelocity","pipe","fns","distance1D","isPoint","distance","xDelta","yDelta","panEvent","handlers","threshold","onSessionStart","startEvent","lastEvent","lastEventInfo","updatePoint","isPanStarted","isDistancePastThreshold","onStart","onMove","onPointerMove","onPointerUp","event","panInfo","onEnd","onSessionEnd","end","updateHandlers","newHandlers","removeListeners","usePanEvent","hasPanEvents","panSession","handlersRef","useEffect","_a","node","trackElementSize","el","observer","entries","isArray","entry","width","height","borderSizeEntry","borderSize","trackMutation","useSizes","getNodes","observeMutation","sizes","setSizes","useState","count","setCount","useSafeLayoutEffect","elements","cleanups","element","size","firstNode","cleanup","useSize","refOrEl","isRefObject"],"mappings":"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","x_google_ignoreList":[2,3,4]}