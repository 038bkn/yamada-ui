{"version":3,"file":"index-30db043d.js","sources":["../../packages/hooks/use-descendant/src/index.ts"],"sourcesContent":["import {\n  cast,\n  createContext,\n  isElement,\n  mergeRefs,\n  useSafeLayoutEffect,\n} from '@yamada-ui/utils'\nimport { Provider, RefCallback, useRef, useState } from 'react'\n\nconst sortNodes = (nodes: Node[]) =>\n  nodes.sort((a, b) => {\n    const compare = a.compareDocumentPosition(b)\n\n    if (\n      compare & Node.DOCUMENT_POSITION_FOLLOWING ||\n      compare & Node.DOCUMENT_POSITION_CONTAINED_BY\n    )\n      return -1\n\n    if (\n      compare & Node.DOCUMENT_POSITION_PRECEDING ||\n      compare & Node.DOCUMENT_POSITION_CONTAINS\n    )\n      return 1\n\n    if (\n      compare & Node.DOCUMENT_POSITION_DISCONNECTED ||\n      compare & Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC\n    ) {\n      throw Error('Cannot sort the given nodes.')\n    } else {\n      return 0\n    }\n  })\n\nconst getNextIndex = (current: number, max: number, loop: boolean) => {\n  let next = current + 1\n\n  if (loop && next >= max) next = 0\n\n  return next\n}\n\nconst getPrevIndex = (current: number, max: number, loop: boolean) => {\n  let next = current - 1\n\n  if (loop && next < 0) next = max\n\n  return next\n}\n\ntype DescendantOptions<T, K = {}> = K & {\n  disabled?: boolean\n  id?: string\n  filter?: FilterDescendant<T, K>\n}\n\ntype Descendant<T, K> = DescendantOptions<K> & {\n  node: T\n  index: number\n}\n\ntype FilterDescendant<T, K> = (\n  value: Descendant<T, K>,\n  index: number,\n  array: Descendant<T, K>[],\n) => boolean\n\nconst descendantsManager = <T extends HTMLElement, K = {}>() => {\n  const descendants = new Map<T, Descendant<T, K>>()\n\n  const assignIndex = (newDescendants: Node[]) => {\n    descendants.forEach((descendant) => {\n      const index = newDescendants.indexOf(descendant.node)\n\n      descendant.index = index\n      descendant.node.dataset.index = descendant.index.toString()\n    })\n  }\n\n  const setDescendants = (\n    node: T | null,\n    options?: DescendantOptions<T, K>,\n  ) => {\n    if (!node || descendants.has(node)) return\n\n    const keys = Array.from(descendants.keys()).concat(node)\n    const sorted = sortNodes(keys)\n\n    if (options?.disabled) options.disabled = !!options.disabled\n\n    const descendant = { node, index: -1, ...options }\n\n    descendants.set(node, descendant as Descendant<T, K>)\n\n    assignIndex(sorted)\n  }\n\n  const register = (nodeOrOptions: T | null | DescendantOptions<T, K>) => {\n    if (nodeOrOptions == null) return\n\n    if (isElement(nodeOrOptions)) return setDescendants(nodeOrOptions)\n\n    return (node: T | null) => setDescendants(node, nodeOrOptions)\n  }\n\n  const unregister = (node: T) => {\n    descendants.delete(node)\n\n    const sorted = sortNodes(Array.from(descendants.keys()))\n\n    assignIndex(sorted)\n  }\n\n  const destroy = () => descendants.clear()\n\n  const count = (filter?: FilterDescendant<T, K>) => values(filter).length\n\n  const enabledCount = (filter?: FilterDescendant<T, K>) =>\n    enabledValues(filter).length\n\n  const indexOf = (node: T | null) =>\n    !node ? -1 : descendants.get(node)?.index ?? -1\n\n  const enabledIndexOf = (node: T | null, filter?: FilterDescendant<T, K>) =>\n    node == null\n      ? -1\n      : enabledValues(filter).findIndex((i) => i.node.isSameNode(node))\n\n  const values = (filter?: FilterDescendant<T, K>) => {\n    const values = Array.from(descendants.values())\n\n    if (filter) {\n      return values.filter(filter).sort((a, b) => a.index - b.index)\n    } else {\n      return values.sort((a, b) => a.index - b.index)\n    }\n  }\n\n  const enabledValues = (filter?: FilterDescendant<T, K>) =>\n    values(filter).filter(({ disabled }) => !disabled)\n\n  const value = (index: number, filter?: FilterDescendant<T, K>) => {\n    if (count(filter) === 0) return undefined\n\n    return values(filter)[index]\n  }\n\n  const enabledValue = (index: number, filter?: FilterDescendant<T, K>) => {\n    if (enabledCount(filter) === 0) return undefined\n\n    return enabledValues(filter)[index]\n  }\n\n  const firstValue = (filter?: FilterDescendant<T, K>) => value(0, filter)\n\n  const enabledfirstValue = (filter?: FilterDescendant<T, K>) =>\n    enabledValue(0, filter)\n\n  const lastValue = (filter?: FilterDescendant<T, K>) =>\n    value(descendants.size - 1, filter)\n\n  const enabledlastValue = (filter?: FilterDescendant<T, K>) =>\n    enabledValue(enabledValues(filter).length - 1, filter)\n\n  const prevValue = (\n    index: number,\n    filter?: FilterDescendant<T, K>,\n    loop = true,\n  ) => {\n    const prev = getPrevIndex(index, count(filter) - 1, loop)\n\n    return value(prev, filter)\n  }\n\n  const enabledPrevValue = (\n    index: number,\n    filter?: FilterDescendant<T, K>,\n    loop = true,\n  ) => {\n    const target = value(index)\n\n    if (!target) return\n\n    const enabledIndex = enabledIndexOf(target.node, filter)\n    const prevEnabledIndex = getPrevIndex(\n      enabledIndex,\n      enabledCount(filter) - 1,\n      loop,\n    )\n\n    return enabledValue(prevEnabledIndex, filter)\n  }\n\n  const nextValue = (\n    index: number,\n    filter?: FilterDescendant<T, K>,\n    loop = true,\n  ) => {\n    const next = getNextIndex(index, count(filter), loop)\n\n    return value(next, filter)\n  }\n\n  const enabledNextValue = (\n    index: number,\n    filter?: FilterDescendant<T, K>,\n    loop = true,\n  ) => {\n    const target = value(index)\n\n    if (!target) return\n\n    const enabledIndex = enabledIndexOf(target.node, filter)\n    const nextEnabledIndex = getNextIndex(\n      enabledIndex,\n      enabledCount(filter),\n      loop,\n    )\n\n    return enabledValue(nextEnabledIndex, filter)\n  }\n\n  return {\n    register,\n    unregister,\n    destroy,\n    count,\n    values,\n    value,\n    indexOf,\n    firstValue,\n    lastValue,\n    prevValue,\n    nextValue,\n    enabledCount,\n    enabledValues,\n    enabledValue,\n    enabledIndexOf,\n    enabledfirstValue,\n    enabledlastValue,\n    enabledPrevValue,\n    enabledNextValue,\n  }\n}\n\nexport type DescendantsManager<\n  T extends HTMLElement,\n  K extends Record<string, any> = {},\n> = ReturnType<typeof descendantsManager<T, K>>\n\nconst useDescendants = <\n  T extends HTMLElement = HTMLElement,\n  K extends Record<string, any> = {},\n>() => {\n  const descendants = useRef(descendantsManager<T, K>())\n\n  useSafeLayoutEffect(() => {\n    return () => descendants.current.destroy()\n  })\n\n  return descendants.current\n}\n\ntype UseDescendantsReturn = ReturnType<typeof useDescendants>\n\nconst [DescendantsContextProvider, useDescendantsContext] =\n  createContext<UseDescendantsReturn>({\n    name: 'DescendantsProvider',\n    errorMessage:\n      'useDescendantsContext must be used within DescendantsContextProvider',\n  })\n\nconst useDescendant = <\n  T extends HTMLElement = HTMLElement,\n  K extends Record<string, any> = {},\n>(\n  options?: DescendantOptions<T, K>,\n) => {\n  const descendants = useDescendantsContext()\n  const [index, setIndex] = useState<number>(-1)\n  const ref = useRef<T>(null)\n\n  useSafeLayoutEffect(() => {\n    return () => {\n      if (!ref.current) return\n\n      descendants.unregister(ref.current)\n    }\n  }, [])\n\n  useSafeLayoutEffect(() => {\n    if (!ref.current) return\n\n    const dataIndex = Number(ref.current.dataset.index)\n\n    if (index != dataIndex && !Number.isNaN(dataIndex)) setIndex(dataIndex)\n  })\n\n  const refCallback = options\n    ? cast<RefCallback<T>>(descendants.register(options))\n    : cast<RefCallback<T>>(descendants.register)\n\n  return {\n    descendants,\n    index,\n    enabledIndex: descendants.enabledIndexOf(\n      ref.current,\n      options?.filter as any,\n    ),\n    register: mergeRefs(refCallback, ref),\n  }\n}\n\nexport const createDescendant = <\n  T extends HTMLElement = HTMLElement,\n  K extends Record<string, any> = {},\n>() =>\n  ({\n    DescendantsContextProvider: cast<Provider<DescendantsManager<T, K>>>(\n      DescendantsContextProvider,\n    ),\n    useDescendantsContext: () =>\n      cast<DescendantsManager<T, K>>(useDescendantsContext()),\n    useDescendants: () => useDescendants<T, K>(),\n    useDescendant: (options?: DescendantOptions<T, K>) =>\n      useDescendant<T, K>(options),\n  }) as const\n"],"names":["sortNodes","nodes","a","b","compare","getNextIndex","current","max","loop","next","getPrevIndex","descendantsManager","descendants","assignIndex","newDescendants","descendant","index","setDescendants","node","options","keys","sorted","register","nodeOrOptions","isElement","unregister","destroy","count","filter","values","enabledCount","enabledValues","indexOf","_a","enabledIndexOf","i","disabled","value","enabledValue","prev","target","enabledIndex","prevEnabledIndex","nextEnabledIndex","useDescendants","useRef","useSafeLayoutEffect","DescendantsContextProvider","useDescendantsContext","createContext","useDescendant","setIndex","useState","ref","dataIndex","refCallback","cast","mergeRefs","createDescendant"],"mappings":"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"}