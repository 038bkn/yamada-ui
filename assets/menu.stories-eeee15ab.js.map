{"version":3,"file":"menu.stories-eeee15ab.js","sources":["../../packages/components/menu/src/menu.tsx","../../packages/components/menu/src/menu-button.tsx","../../packages/components/menu/src/menu-list.tsx","../../packages/components/menu/src/menu-item.tsx","../../packages/components/menu/src/menu-group.tsx","../../packages/components/menu/src/menu-option-group.tsx","../../packages/components/menu/src/menu-divider.tsx"],"sourcesContent":["import {\n  useMultiComponentStyle,\n  omitThemeProps,\n  CSSUIObject,\n  ThemeProps,\n} from '@yamada-ui/core'\nimport { Popover, PopoverProps } from '@yamada-ui/popover'\nimport { createDescendant } from '@yamada-ui/use-descendant'\nimport { useDisclosure } from '@yamada-ui/use-disclosure'\nimport {\n  createContext,\n  useUnmountEffect,\n  useUpdateEffect,\n} from '@yamada-ui/utils'\nimport {\n  Dispatch,\n  FC,\n  RefObject,\n  SetStateAction,\n  useCallback,\n  useRef,\n  useState,\n} from 'react'\n\nconst {\n  DescendantsContextProvider,\n  useDescendantsContext: useMenuDescendantsContext,\n  useDescendants,\n  useDescendant: useMenuDescendant,\n} = createDescendant<HTMLElement>()\n\nexport { useMenuDescendantsContext, useMenuDescendant }\n\ntype MenuContext = MenuOptions & {\n  isOpen: boolean\n  onOpen: () => void\n  onClose: () => void\n  onFocusFirstItem: () => void\n  onFocusLastItem: () => void\n  focusedIndex: number\n  setFocusedIndex: Dispatch<SetStateAction<number>>\n  menuRef: RefObject<HTMLDivElement>\n  styles: Record<string, CSSUIObject>\n}\n\nconst [MenuProvider, useMenu] = createContext<MenuContext>({\n  name: 'MenuContext',\n  errorMessage: `useMenu returned is 'undefined'. Seems you forgot to wrap the components in \"<Menu />\"`,\n})\n\nexport { useMenu }\n\ntype MenuOptions = {\n  /**\n   * If `true`, the list element will be closed when value is selected.\n   *\n   * @default true\n   */\n  closeOnSelect?: boolean\n}\n\nexport type MenuProps = ThemeProps<'Menu'> &\n  Omit<PopoverProps, 'closeOnButton'> &\n  MenuOptions\n\nexport const Menu: FC<MenuProps> = (props) => {\n  const [styles, mergedProps] = useMultiComponentStyle('Menu', props)\n  const {\n    initialFocusRef,\n    closeOnSelect = true,\n    placement = 'bottom-start',\n    duration = 0.2,\n    ...rest\n  } = omitThemeProps(mergedProps)\n\n  const descendants = useDescendants()\n\n  const [focusedIndex, setFocusedIndex] = useState<number>(-1)\n\n  const menuRef = useRef<HTMLDivElement>(null)\n  const timeoutIds = useRef<Set<any>>(new Set([]))\n\n  const onFocusMenu = useCallback(() => {\n    requestAnimationFrame(\n      () => menuRef.current?.focus({ preventScroll: false }),\n    )\n  }, [])\n\n  const onFocusFirstItem = useCallback(() => {\n    const id = setTimeout(() => {\n      if (initialFocusRef) return\n\n      const first = descendants.enabledfirstValue()\n\n      if (first) setFocusedIndex(first.index)\n    })\n\n    timeoutIds.current.add(id)\n  }, [descendants, initialFocusRef])\n\n  const onFocusLastItem = useCallback(() => {\n    const id = setTimeout(() => {\n      if (initialFocusRef) return\n\n      const last = descendants.enabledlastValue()\n\n      if (last) setFocusedIndex(last.index)\n    })\n\n    timeoutIds.current.add(id)\n  }, [descendants, initialFocusRef])\n\n  const onOpenInternal = useCallback(() => {\n    rest.onOpen?.()\n\n    onFocusMenu()\n  }, [onFocusMenu, rest])\n\n  const { isOpen, onOpen, onClose } = useDisclosure({\n    ...props,\n    onOpen: onOpenInternal,\n  })\n\n  useUpdateEffect(() => {\n    if (!isOpen) setFocusedIndex(-1)\n  }, [isOpen])\n\n  useUnmountEffect(() => {\n    timeoutIds.current.forEach((id) => clearTimeout(id))\n    timeoutIds.current.clear()\n  })\n\n  return (\n    <DescendantsContextProvider value={descendants}>\n      <MenuProvider\n        value={{\n          isOpen,\n          onOpen,\n          onClose,\n          onFocusFirstItem,\n          onFocusLastItem,\n          closeOnSelect,\n          focusedIndex,\n          setFocusedIndex,\n          menuRef,\n          styles,\n        }}\n      >\n        <Popover\n          {...{\n            ...rest,\n            isOpen,\n            onOpen,\n            onClose,\n            placement,\n            duration,\n            initialFocusRef,\n            closeOnButton: false,\n          }}\n        />\n      </MenuProvider>\n    </DescendantsContextProvider>\n  )\n}\n","import { ui, forwardRef, HTMLUIProps, CSSUIObject } from '@yamada-ui/core'\nimport { PopoverTrigger } from '@yamada-ui/popover'\nimport { ariaAttr, cx, dataAttr, funcAll, handlerAll } from '@yamada-ui/utils'\nimport { KeyboardEvent, useCallback } from 'react'\nimport { useMenu } from './menu'\n\nexport type MenuButtonProps = HTMLUIProps<'button'>\n\nexport const MenuButton = forwardRef<MenuButtonProps, 'button'>(\n  ({ className, children, as: As, ...rest }, ref) => {\n    const { isOpen, onOpen, onFocusFirstItem, onFocusLastItem } = useMenu()\n\n    const onKeyDown = useCallback(\n      (ev: KeyboardEvent) => {\n        const actions: Record<string, Function> = {\n          Enter: funcAll(onOpen, onFocusFirstItem),\n          ArrowDown: funcAll(onOpen, onFocusFirstItem),\n          ArrowUp: funcAll(onOpen, onFocusLastItem),\n        }\n\n        const action = actions[ev.key]\n\n        if (!action) return\n\n        ev.preventDefault()\n        ev.stopPropagation()\n        action()\n      },\n      [onFocusFirstItem, onFocusLastItem, onOpen],\n    )\n\n    const Component = As || Button\n\n    return (\n      <PopoverTrigger>\n        <Component\n          ref={ref}\n          className={cx('ui-menu-button', className)}\n          {...rest}\n          data-active={dataAttr(isOpen)}\n          aria-expanded={ariaAttr(isOpen)}\n          onKeyDown={handlerAll(rest.onKeyDown, onKeyDown)}\n        >\n          <ui.span __css={{ pointerEvents: 'none', flex: '1 1 auto', minW: 0 }}>\n            {children}\n          </ui.span>\n        </Component>\n      </PopoverTrigger>\n    )\n  },\n)\n\nconst Button = forwardRef<MenuButtonProps, 'button'>((rest, ref) => {\n  const { styles } = useMenu()\n\n  const css: CSSUIObject = {\n    display: 'inline-flex',\n    appearance: 'none',\n    alignItems: 'center',\n    outline: 0,\n    ...styles.button,\n  }\n\n  return <ui.button ref={ref} __css={css} {...rest} />\n})\n","import { forwardRef, HTMLUIProps, CSSUIObject } from '@yamada-ui/core'\nimport { PopoverContent } from '@yamada-ui/popover'\nimport { cx, handlerAll, mergeRefs } from '@yamada-ui/utils'\nimport { KeyboardEvent, KeyboardEventHandler, useCallback } from 'react'\nimport { useMenu, useMenuDescendantsContext } from './menu'\n\nexport type MenuListProps = HTMLUIProps<'section'>\n\nexport const MenuList = forwardRef<MenuListProps, 'section'>(\n  ({ className, ...rest }, ref) => {\n    const { menuRef, focusedIndex, setFocusedIndex, onClose, styles } =\n      useMenu()\n\n    const descendants = useMenuDescendantsContext()\n\n    const onNext = useCallback(() => {\n      const next = descendants.enabledNextValue(focusedIndex)\n\n      if (next) setFocusedIndex(next.index)\n    }, [descendants, focusedIndex, setFocusedIndex])\n\n    const onPrev = useCallback(() => {\n      const prev = descendants.enabledPrevValue(focusedIndex)\n\n      if (prev) setFocusedIndex(prev.index)\n    }, [descendants, focusedIndex, setFocusedIndex])\n\n    const onFirst = useCallback(() => {\n      const first = descendants.enabledfirstValue()\n\n      if (first) setFocusedIndex(first.index)\n    }, [descendants, setFocusedIndex])\n\n    const onLast = useCallback(() => {\n      const last = descendants.enabledlastValue()\n\n      if (last) setFocusedIndex(last.index)\n    }, [descendants, setFocusedIndex])\n\n    const onKeyDown = useCallback(\n      (ev: KeyboardEvent) => {\n        const actions: Record<string, KeyboardEventHandler> = {\n          Tab: (ev) => ev.preventDefault(),\n          Escape: onClose,\n          ArrowDown: focusedIndex === -1 ? onFirst : onNext,\n          ArrowUp: focusedIndex === -1 ? onLast : onPrev,\n          Home: onFirst,\n          End: onLast,\n        }\n\n        const action = actions[ev.key]\n\n        if (!action) return\n\n        ev.preventDefault()\n        action(ev)\n      },\n      [focusedIndex, onClose, onFirst, onLast, onNext, onPrev],\n    )\n\n    const css: CSSUIObject = { ...styles.list }\n\n    return (\n      <PopoverContent\n        ref={mergeRefs(menuRef, ref)}\n        className={cx('ui-menu-list', className)}\n        role='menu'\n        tabIndex={-1}\n        __css={css}\n        {...rest}\n        onKeyDown={handlerAll(rest.onKeyDown, onKeyDown)}\n      />\n    )\n  },\n)\n","import { ui, forwardRef, HTMLUIProps, CSSUIObject } from '@yamada-ui/core'\nimport { useClickable } from '@yamada-ui/use-clickable'\nimport {\n  ariaAttr,\n  cx,\n  isActiveElement,\n  isHTMLElement,\n  mergeRefs,\n  useUpdateEffect,\n} from '@yamada-ui/utils'\nimport {\n  FC,\n  FocusEvent,\n  MouseEvent,\n  ReactElement,\n  useCallback,\n  useRef,\n} from 'react'\nimport { useMenu, useMenuDescendant } from './menu'\n\nconst isTargetMenuItem = (target: EventTarget | null) => {\n  return (\n    isHTMLElement(target) &&\n    !!target?.getAttribute('role')?.startsWith('menu-item')\n  )\n}\n\ntype MenuItemOptions = {\n  /**\n   * If `true`, the menu item will be disabled.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the menu item will be focusable.\n   *\n   * @default false\n   */\n  isFocusable?: boolean\n  /**\n   * If `true`, the list element will be closed when selected.\n   *\n   * @default false\n   */\n  closeOnSelect?: boolean\n  /**\n   * The menu item icon to use.\n   */\n  icon?: ReactElement\n  /**\n   * Right-aligned label text content, useful for displaying hotkeys.\n   */\n  command?: string\n}\n\nexport type MenuItemProps = HTMLUIProps<'button'> & MenuItemOptions\n\nexport const MenuItem = forwardRef<MenuItemProps, 'button'>(\n  (\n    {\n      as,\n      className,\n      type,\n      isDisabled,\n      isFocusable,\n      closeOnSelect: customCloseOnSelect,\n      icon,\n      command,\n      children,\n      ...props\n    },\n    ref,\n  ) => {\n    const {\n      focusedIndex,\n      setFocusedIndex,\n      isOpen,\n      onClose,\n      closeOnSelect: generalCloseOnSelect,\n      menuRef,\n      styles,\n    } = useMenu()\n\n    const trulyDisabled = isDisabled && !isFocusable\n\n    const buttonRef = useRef<HTMLButtonElement>(null)\n    const { index, register } = useMenuDescendant({ disabled: trulyDisabled })\n\n    const isFocused = index === focusedIndex\n\n    const onClick = useCallback(\n      (ev: MouseEvent<HTMLButtonElement>) => {\n        props.onClick?.(ev)\n        if (!isTargetMenuItem(ev.currentTarget)) return\n\n        if (customCloseOnSelect ?? generalCloseOnSelect) onClose()\n      },\n      [props, customCloseOnSelect, generalCloseOnSelect, onClose],\n    )\n\n    const onFocus = useCallback(\n      (ev: FocusEvent<HTMLButtonElement>) => {\n        props.onFocus?.(ev)\n        setFocusedIndex(index)\n      },\n      [props, setFocusedIndex, index],\n    )\n\n    const rest = useClickable({\n      onClick,\n      onFocus,\n      ref: mergeRefs(register, buttonRef, ref),\n      isDisabled,\n      isFocusable,\n    })\n\n    useUpdateEffect(() => {\n      if (!isOpen) return\n\n      if (isFocused && !trulyDisabled && buttonRef.current) {\n        requestAnimationFrame(() => buttonRef.current?.focus())\n      } else if (menuRef.current && !isActiveElement(menuRef.current)) {\n        menuRef.current.focus()\n      }\n    }, [isFocused, trulyDisabled, menuRef, isOpen])\n\n    type = as || type ? type ?? undefined : 'button'\n\n    children =\n      icon || command ? (\n        <ui.span style={{ pointerEvents: 'none', flex: 1 }}>{children}</ui.span>\n      ) : (\n        children\n      )\n\n    const css: CSSUIObject = {\n      textDecoration: 'none',\n      color: 'inherit',\n      userSelect: 'none',\n      display: 'flex',\n      width: '100%',\n      alignItems: 'center',\n      textAlign: 'start',\n      flex: '0 0 auto',\n      outline: 0,\n      gap: '0.75rem',\n      ...styles.item,\n    }\n\n    return (\n      <ui.button\n        {...props}\n        {...rest}\n        as={as}\n        type={type}\n        role='menu-item'\n        tabIndex={isFocused ? 0 : -1}\n        className={cx('ui-menu-item', className)}\n        __css={css}\n      >\n        {icon ? <MenuIcon>{icon}</MenuIcon> : null}\n        {children}\n        {command ? <MenuCommand>{command}</MenuCommand> : null}\n      </ui.button>\n    )\n  },\n)\n\ntype MenuOptionItemOptions = {\n  /**\n   * The menu option item icon to use.\n   */\n  icon?: ReactElement | null\n  /**\n   * The value of the menu option item.\n   */\n  value?: string\n  /**\n   * If `true`, the checkbox or radio will be checked.\n   *\n   * @default false\n   */\n  isChecked?: boolean\n  /**\n   * The type of the menu option item.\n   */\n  type?: 'radio' | 'checkbox'\n}\n\nexport type MenuOptionItemProps = Omit<MenuItemProps, 'icon' | 'command'> &\n  MenuOptionItemOptions\n\nexport const MenuOptionItem = forwardRef<MenuOptionItemProps, 'button'>(\n  (\n    { className, icon, isChecked, closeOnSelect = false, children, ...rest },\n    ref,\n  ) => {\n    return (\n      <MenuItem\n        ref={ref}\n        className={cx('ui-menu-option-item', className)}\n        aria-checked={ariaAttr(isChecked)}\n        closeOnSelect={closeOnSelect}\n        {...rest}\n      >\n        {icon !== null ? (\n          <MenuIcon opacity={isChecked ? 1 : 0}>\n            {icon || <CheckIcon />}\n          </MenuIcon>\n        ) : null}\n        {children}\n      </MenuItem>\n    )\n  },\n)\n\ntype MenuIconProps = HTMLUIProps<'span'>\n\nconst MenuIcon = forwardRef<MenuIconProps, 'span'>(\n  ({ className, ...rest }, ref) => {\n    const { styles } = useMenu()\n\n    const css: CSSUIObject = {\n      flexShrink: 0,\n      display: 'inline-flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      fontSize: '0.85em',\n      ...styles.icon,\n    }\n\n    return (\n      <ui.span\n        ref={ref}\n        className={cx('ui-menu-icon', className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n\ntype MenuCommandProps = HTMLUIProps<'span'>\n\nconst MenuCommand = forwardRef<MenuCommandProps, 'span'>(\n  ({ className, ...rest }, ref) => {\n    const { styles } = useMenu()\n\n    const css: CSSUIObject = { ...styles.command }\n\n    return (\n      <ui.span\n        ref={ref}\n        className={cx('ui-menu-command', className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n\nconst CheckIcon: FC = () => (\n  <svg viewBox='0 0 14 14' width='1em' height='1em'>\n    <polygon\n      fill='currentColor'\n      points='5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039'\n    />\n  </svg>\n)\n","import { ui, forwardRef, HTMLUIProps, CSSUIObject } from '@yamada-ui/core'\nimport { cx } from '@yamada-ui/utils'\nimport { useMenu } from './menu'\n\nexport type MenuGroupProps = HTMLUIProps<'div'>\n\nexport const MenuGroup = forwardRef<MenuGroupProps, 'div'>(\n  ({ className, title, children, ...rest }, ref) => {\n    const { styles } = useMenu()\n\n    const css: CSSUIObject = { ...styles.group }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx('ui-menu-group', className)}\n        role='group'\n        __css={css}\n        {...rest}\n      >\n        {title ? (\n          <ui.span\n            className={cx('ui-menu-group-title')}\n            __css={styles.groupTitle}\n          >\n            {title}\n          </ui.span>\n        ) : null}\n\n        {children}\n      </ui.div>\n    )\n  },\n)\n","import { ComponentArgs, HTMLUIProps } from '@yamada-ui/core'\nimport { useControllableState } from '@yamada-ui/use-controllable-state'\nimport { cx, getValidChildren, omitObject, isArray } from '@yamada-ui/utils'\nimport { cloneElement, ForwardedRef, forwardRef, Ref, useCallback } from 'react'\nimport { MenuGroup } from './menu-group'\nimport { MenuOptionItem } from './menu-item'\n\ntype MenuOptionGroupOptions<Y extends string | string[] = string> = {\n  /**\n   * The value of the menu item group.\n   */\n  value?: Y\n  /**\n   * The initial value of the menu item group.\n   */\n  defaultValue?: Y\n  /**\n   * The type of the menu option group.\n   *\n   * @default 'checkbox'\n   */\n  type?: 'radio' | 'checkbox'\n  /**\n   * The callback fired when any children checkbox is checked or unchecked.\n   */\n  onChange?: (value: Y) => void\n}\n\nexport type MenuOptionGroupProps<Y extends string | string[] = string> = Omit<\n  HTMLUIProps<'div'>,\n  keyof MenuOptionGroupOptions\n> &\n  MenuOptionGroupOptions<Y>\n\nexport const MenuOptionGroup = forwardRef(\n  <Y extends string | string[] = string>(\n    {\n      className,\n      defaultValue,\n      type,\n      children,\n      ...rest\n    }: MenuOptionGroupProps<Y>,\n    ref: ForwardedRef<HTMLDivElement>,\n  ) => {\n    const isRadio = type === 'radio'\n\n    defaultValue = (isRadio ? '' : []) as Y\n\n    const [value, setValue] = useControllableState({\n      ...rest,\n      defaultValue,\n    })\n\n    const onChange = useCallback(\n      (selectedValue: string) => {\n        if (isRadio && typeof value === 'string') setValue(selectedValue as Y)\n\n        if (!isRadio && isArray(value)) {\n          const nextValue = value.includes(selectedValue)\n            ? value.filter((item) => item !== selectedValue)\n            : value.concat(selectedValue)\n\n          setValue(nextValue as Y)\n        }\n      },\n      [isRadio, value, setValue],\n    )\n\n    const validChildren = getValidChildren(children)\n\n    const cloneChildren = validChildren.map((child) => {\n      if (child.type !== MenuOptionItem) return child\n\n      const onClick = (ev: MouseEvent) => {\n        onChange(child.props.value)\n        child.props.onClick?.(ev)\n      }\n\n      const isChecked =\n        !isRadio && isArray(value)\n          ? value.includes(child.props.value)\n          : child.props.value === value\n\n      return cloneElement(child, { type, onClick, isChecked })\n    })\n\n    return (\n      <MenuGroup\n        ref={ref}\n        className={cx('ui-menu-option-group', className)}\n        {...omitObject(rest, ['value', 'onChange'])}\n      >\n        {cloneChildren}\n      </MenuGroup>\n    )\n  },\n) as {\n  <Y extends string | string[] = string>(\n    props: MenuOptionGroupProps<Y> & { ref?: Ref<HTMLDivElement> },\n  ): JSX.Element\n} & ComponentArgs\n\nMenuOptionGroup.displayName = 'MenuOptionGroup'\n","import { ui, forwardRef, HTMLUIProps, CSSUIObject } from '@yamada-ui/core'\nimport { cx } from '@yamada-ui/utils'\nimport { useMenu } from './menu'\n\nexport type MenuDividerProps = HTMLUIProps<'hr'>\n\nexport const MenuDivider = forwardRef(({ className, ...rest }, ref) => {\n  const { styles } = useMenu()\n\n  const css: CSSUIObject = { ...styles.divider }\n\n  return (\n    <ui.hr\n      ref={ref}\n      className={cx('ui-menu-divider', className)}\n      __css={css}\n      {...rest}\n    />\n  )\n})\n"],"names":["DescendantsContextProvider","useMenuDescendantsContext","useDescendants","useMenuDescendant","createDescendant","MenuProvider","useMenu","createContext","Menu","props","styles","mergedProps","useMultiComponentStyle","initialFocusRef","closeOnSelect","placement","duration","rest","omitThemeProps","descendants","focusedIndex","setFocusedIndex","useState","menuRef","useRef","timeoutIds","onFocusMenu","useCallback","_a","onFocusFirstItem","id","first","onFocusLastItem","last","onOpenInternal","isOpen","onOpen","onClose","useDisclosure","useUpdateEffect","useUnmountEffect","jsx","Popover","MenuButton","forwardRef","className","children","As","ref","onKeyDown","ev","action","funcAll","PopoverTrigger","Button","cx","dataAttr","ariaAttr","handlerAll","ui","css","MenuList","onNext","next","onPrev","prev","onFirst","onLast","PopoverContent","mergeRefs","isTargetMenuItem","target","isHTMLElement","MenuItem","as","type","isDisabled","isFocusable","customCloseOnSelect","icon","command","generalCloseOnSelect","trulyDisabled","buttonRef","index","register","isFocused","onClick","onFocus","useClickable","isActiveElement","jsxs","MenuIcon","MenuCommand","MenuOptionItem","isChecked","CheckIcon","MenuGroup","title","MenuOptionGroup","defaultValue","isRadio","value","setValue","useControllableState","onChange","selectedValue","isArray","nextValue","item","cloneChildren","getValidChildren","child","_b","cloneElement","omitObject","MenuDivider"],"mappings":"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"}