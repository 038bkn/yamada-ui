{"version":3,"file":"skeleton.stories-95548655.js","sources":["../../packages/components/skeleton/src/skeleton.tsx","../../packages/components/skeleton/src/skeleton-circle.tsx","../../packages/components/skeleton/src/skeleton-text.tsx"],"sourcesContent":["import {\n  ui,\n  forwardRef,\n  omitThemeProps,\n  CSSUIObject,\n  HTMLUIProps,\n  ThemeProps,\n  useComponentStyle,\n  CSSUIProps,\n} from \"@yamada-ui/core\"\nimport { useAnimation } from \"@yamada-ui/use-animation\"\nimport { usePrevious } from \"@yamada-ui/use-previous\"\nimport { useValue } from \"@yamada-ui/use-value\"\nimport { cx, getValidChildren, useIsMounted } from \"@yamada-ui/utils\"\n\ntype SkeletonOptions = {\n  /**\n   * The color at the animation start.\n   */\n  startColor?: CSSUIProps[\"color\"]\n  /**\n   * The color at the animation end.\n   */\n  endColor?: CSSUIProps[\"color\"]\n  /**\n   * If `true`, it'll render its children with a nice fade transition.\n   *\n   * @default false\n   */\n  isLoaded?: boolean\n  /**\n   * The animation speed in seconds.\n   *\n   * @default 0.8\n   */\n  speed?: string | number\n  /**\n   * The fadeIn duration in seconds. Requires `isLoaded` toggled to `true` in order to see the transition.\n   *\n   * @default 0.4\n   */\n  fadeDuration?: string | number\n  /**\n   * If `true`, the skeleton will take the width of it's children.\n   *\n   * @default false\n   */\n  isFitContent?: boolean\n}\n\nexport type SkeletonProps = HTMLUIProps<\"div\"> &\n  ThemeProps<\"Skeleton\"> &\n  SkeletonOptions\n\nexport const Skeleton = forwardRef<SkeletonProps, \"div\">((props, ref) => {\n  const [styles, mergedProps] = useComponentStyle(\"Skeleton\", props)\n  let {\n    className,\n    startColor,\n    endColor,\n    fadeDuration = 0.4,\n    speed = 0.8,\n    isLoaded,\n    isFitContent,\n    children,\n    ...rest\n  } = omitThemeProps(mergedProps)\n  const isMounted = useIsMounted()\n  const validChildren = getValidChildren(children)\n  const prevIsLoaded = usePrevious(isLoaded)\n  const computedStartColor = useValue(startColor)\n  const computedEndColor = useValue(endColor)\n  const hasChildren = !!validChildren.length\n\n  isFitContent ??= hasChildren\n\n  const fadeIn = useAnimation({\n    keyframes: {\n      \"0%\": {\n        opacity: 0,\n      },\n      \"100%\": {\n        opacity: 1,\n      },\n    },\n    duration:\n      typeof fadeDuration === \"string\" ? fadeDuration : `${fadeDuration}s`,\n  })\n\n  const animation = useAnimation({\n    keyframes: {\n      \"0%\": {\n        borderColor: computedStartColor,\n        background: computedStartColor,\n      },\n      \"100%\": {\n        borderColor: computedEndColor,\n        background: computedEndColor,\n      },\n    },\n    duration: typeof speed === \"string\" ? speed : `${speed}s`,\n    iterationCount: \"infinite\",\n    direction: \"alternate\",\n    timingFunction: \"linear\",\n  })\n\n  const css: CSSUIObject = {\n    w: isFitContent ? \"fit-content\" : \"full\",\n    maxW: \"full\",\n    h: isFitContent ? \"fit-content\" : \"4\",\n    boxShadow: \"none\",\n    backgroundClip: \"padding-box\",\n    cursor: \"default\",\n    color: \"transparent\",\n    pointerEvents: \"none\",\n    userSelect: \"none\",\n    \"&::before, &::after, *\": {\n      visibility: \"hidden\",\n    },\n    ...styles,\n  }\n\n  if (isLoaded) {\n    const animation = !isMounted.current || prevIsLoaded ? \"none\" : fadeIn\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-skeleton\", \"ui-skeleton--loaded\", className)}\n        {...rest}\n        animation={animation}\n      >\n        {validChildren}\n      </ui.div>\n    )\n  } else {\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-skeleton\", className)}\n        __css={css}\n        {...rest}\n        animation={animation}\n      >\n        {validChildren}\n      </ui.div>\n    )\n  }\n})\n","import { forwardRef } from \"@yamada-ui/core\"\nimport { cx, getValidChildren } from \"@yamada-ui/utils\"\nimport { Skeleton, SkeletonProps } from \"./\"\n\nexport type SkeletonCircleProps = SkeletonProps\n\nexport const SkeletonCircle = forwardRef<SkeletonCircleProps, \"div\">(\n  ({ className, boxSize = \"12\", children, isFitContent, ...rest }, ref) => {\n    const validChildren = getValidChildren(children)\n    const hasChildren = !!validChildren.length\n\n    isFitContent ??= hasChildren\n\n    return (\n      <Skeleton\n        ref={ref}\n        className={cx(\"ui-skeleton__circle\", className)}\n        rounded=\"full\"\n        isFitContent={isFitContent}\n        {...(!isFitContent ? { boxSize } : {})}\n        {...rest}\n      >\n        {validChildren}\n      </Skeleton>\n    )\n  },\n)\n","import { ui, forwardRef, CSSUIProps, CSSUIObject } from \"@yamada-ui/core\"\nimport { useValue } from \"@yamada-ui/use-value\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { Skeleton, SkeletonProps } from \"./\"\n\ntype SkeletonTextOptions = {\n  /**\n   * The CSS `gap` property.\n   */\n  gap?: CSSUIProps[\"gap\"]\n  /**\n   * The CSS `height` property.\n   */\n  textHeight?: CSSUIProps[\"height\"]\n}\n\nexport type SkeletonTextProps = SkeletonProps & SkeletonTextOptions\n\nexport const SkeletonText = forwardRef<SkeletonTextProps, \"div\">(\n  (\n    {\n      className,\n      noOfLines = 3,\n      startColor,\n      endColor,\n      fadeDuration,\n      speed,\n      isLoaded,\n      gap = \"2\",\n      textHeight = \"2\",\n      children,\n      ...rest\n    },\n    ref,\n  ) => {\n    const computedNoOfLines = useValue(noOfLines)\n\n    const css: CSSUIObject = {\n      w: \"full\",\n    }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-skeleton__text\", className)}\n        __css={css}\n        {...rest}\n      >\n        {Array(computedNoOfLines)\n          .fill(0)\n          .map((_, index) => {\n            if (isLoaded && index > 0) return null\n\n            const isLast = index + 1 === computedNoOfLines\n\n            const props: SkeletonProps = !isLoaded\n              ? {\n                  mb: !isLast ? gap : undefined,\n                  w:\n                    computedNoOfLines > 1 ? (!isLast ? \"100%\" : \"80%\") : \"100%\",\n                  h: textHeight,\n                }\n              : {}\n\n            return (\n              <Skeleton\n                key={index}\n                {...{\n                  startColor,\n                  endColor,\n                  fadeDuration,\n                  speed,\n                  isLoaded,\n                  ...props,\n                }}\n              >\n                {index === 0 ? children : undefined}\n              </Skeleton>\n            )\n          })}\n      </ui.div>\n    )\n  },\n)\n"],"names":["Skeleton","forwardRef","props","ref","styles","mergedProps","useComponentStyle","className","startColor","endColor","fadeDuration","speed","isLoaded","isFitContent","children","rest","omitThemeProps","isMounted","useIsMounted","validChildren","getValidChildren","prevIsLoaded","usePrevious","computedStartColor","useValue","computedEndColor","hasChildren","fadeIn","useAnimation","animation","css","jsx","ui","cx","SkeletonCircle","boxSize","SkeletonText","noOfLines","gap","textHeight","computedNoOfLines","_","index","isLast"],"mappings":"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"}