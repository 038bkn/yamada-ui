{"version":3,"file":"form-control-8e97ab42.js","sources":["../../packages/components/form-control/src/form-control.tsx"],"sourcesContent":["import type { CSSUIObject, HTMLUIProps, ThemeProps } from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport type { Dict } from \"@yamada-ui/utils\"\nimport {\n  createContext,\n  cx,\n  findChildren,\n  getValidChildren,\n  handlerAll,\n  dataAttr,\n  ariaAttr,\n} from \"@yamada-ui/utils\"\nimport type { ReactNode, FocusEventHandler } from \"react\"\nimport { useState, useId } from \"react\"\n\nexport type FormControlOptions = {\n  /**\n   * If `true`, the form control will be required.\n   *\n   * @default false\n   */\n  isRequired?: boolean\n  /**\n   * If `true`, the form control will be disabled.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the form control will be invalid.\n   *\n   * @default false\n   */\n  isInvalid?: boolean\n  /**\n   * If `true`, the form control will be readonly.\n   *\n   * @default false\n   */\n  isReadOnly?: boolean\n}\n\ntype FormControlAdditionalOptions = LabelOptions & {\n  /**\n   * If `true`, switch between helper message and error message using isInvalid.\n   *\n   * @default true\n   */\n  isReplace?: boolean\n  /**\n   * The form control label to use.\n   */\n  label?: ReactNode\n  /**\n   * The form control helper message to use.\n   */\n  helperMessage?: ReactNode\n  /**\n   * The form control error message to use.\n   */\n  errorMessage?: ReactNode\n}\n\nexport type FormControlProps = HTMLUIProps<\"div\"> &\n  ThemeProps<\"FormControl\"> &\n  FormControlOptions &\n  FormControlAdditionalOptions\n\ntype FormControlContext = {\n  id?: string\n  isFocused: boolean\n  isRequired: boolean\n  isDisabled: boolean\n  isInvalid: boolean\n  isReadOnly: boolean\n  isReplace: boolean\n  onFocus: () => void\n  onBlur: () => void\n}\n\nconst [FormControlContextProvider, useFormControlContext] = createContext<\n  FormControlContext | undefined\n>({\n  strict: false,\n  name: \"FormControlContext\",\n})\n\ntype FormControlStylesContext = Record<string, CSSUIObject>\n\nconst [FormControlStylesProvider, useFormControlStyles] = createContext<\n  FormControlStylesContext | undefined\n>({\n  strict: false,\n  name: \"FormControlStyleContext\",\n})\n\nexport const FormControl = forwardRef<FormControlProps, \"div\">(\n  ({ id, ...props }, ref) => {\n    const [styles, mergedProps] = useMultiComponentStyle(\"FormControl\", props)\n    const {\n      className,\n      isRequired = false,\n      isDisabled = false,\n      isInvalid = false,\n      isReadOnly = false,\n      isReplace = true,\n      label,\n      helperMessage,\n      errorMessage,\n      children,\n      requiredIndicator,\n      optionalIndicator,\n      ...rest\n    } = omitThemeProps(mergedProps)\n\n    id ??= useId()\n\n    const [isFocused, setFocused] = useState<boolean>(false)\n\n    const validChildren = getValidChildren(children)\n\n    const [customLabel] = findChildren(validChildren, Label)\n    const [customHelperMessage] = findChildren(validChildren, HelperMessage)\n    const [customErrorMessage] = findChildren(validChildren, ErrorMessage)\n\n    const isCustomLabel = !!customLabel\n    const isCustomHelperMessage = !!customHelperMessage\n    const isCustomErrorMessage = !!customErrorMessage\n\n    const css: CSSUIObject = {\n      ...styles.container,\n    }\n\n    return (\n      <FormControlContextProvider\n        value={{\n          id,\n          isFocused,\n          isRequired,\n          isDisabled,\n          isInvalid,\n          isReadOnly,\n          isReplace,\n          onFocus: () => setFocused(true),\n          onBlur: () => setFocused(false),\n        }}\n      >\n        <FormControlStylesProvider value={styles}>\n          <ui.div\n            ref={ref}\n            className={cx(\"ui-form__control\", className)}\n            role=\"group\"\n            __css={css}\n            {...rest}\n          >\n            {!isCustomLabel && label ? (\n              <Label\n                requiredIndicator={requiredIndicator}\n                optionalIndicator={optionalIndicator}\n              >\n                {label}\n              </Label>\n            ) : null}\n            {children}\n            {!isCustomHelperMessage && helperMessage ? (\n              <HelperMessage>{helperMessage}</HelperMessage>\n            ) : null}\n            {!isCustomErrorMessage && errorMessage ? (\n              <ErrorMessage>{errorMessage}</ErrorMessage>\n            ) : null}\n          </ui.div>\n        </FormControlStylesProvider>\n      </FormControlContextProvider>\n    )\n  },\n)\n\nexport const useFormControl = (\n  props: FormControlOptions & {\n    id?: string\n    disabled?: boolean\n    readOnly?: boolean\n    required?: boolean\n  },\n) => {\n  const control = useFormControlContext()\n\n  const id = props.id ?? control?.id\n  const isDisabled = props.disabled ?? props.isDisabled ?? control?.isDisabled\n  const isReadOnly = props.readOnly ?? props.isReadOnly ?? control?.isReadOnly\n  const isRequired = props.required ?? props.isRequired ?? control?.isRequired\n  const isInvalid = props.isInvalid ?? control?.isInvalid\n\n  return {\n    id,\n    isDisabled,\n    isReadOnly,\n    isRequired,\n    isInvalid,\n  }\n}\n\nexport type UseFormControlProps<Y extends HTMLElement> = FormControlOptions & {\n  id?: string\n  onFocus?: FocusEventHandler<Y>\n  onBlur?: FocusEventHandler<Y>\n  disabled?: boolean\n  readOnly?: boolean\n  required?: boolean\n}\n\nexport const useFormControlProps = <Y extends HTMLElement, M extends Dict>({\n  id,\n  disabled,\n  readOnly,\n  required,\n  isDisabled,\n  isReadOnly,\n  isRequired,\n  isInvalid,\n  onFocus,\n  onBlur,\n  ...rest\n}: UseFormControlProps<Y> & M) => {\n  const control = useFormControlContext()\n\n  disabled ??= isDisabled ?? control?.isDisabled\n  required ??= isRequired ?? control?.isRequired\n  readOnly ??= isReadOnly ?? control?.isReadOnly\n  isInvalid ??= control?.isInvalid\n\n  return {\n    id: id ?? control?.id,\n    disabled,\n    required,\n    readOnly,\n    \"aria-disabled\": ariaAttr(disabled),\n    \"aria-readonly\": ariaAttr(readOnly),\n    \"aria-required\": ariaAttr(required),\n    \"aria-invalid\": ariaAttr(isInvalid),\n    onFocus: handlerAll(control?.onFocus, onFocus),\n    onBlur: handlerAll(control?.onBlur, onBlur),\n    ...(disabled || readOnly\n      ? {\n          _hover: {},\n          _active: {},\n          _focus: {},\n          _invalid: {},\n          _focusVisible: {},\n        }\n      : {}),\n    ...rest,\n  }\n}\n\nexport const formControlProperties: any[] = [\n  \"disabled\",\n  \"required\",\n  \"readOnly\",\n  \"aria-disabled\",\n  \"aria-readonly\",\n  \"aria-required\",\n  \"aria-invalid\",\n  \"onFocus\",\n  \"onBlur\",\n  \"_hover\",\n  \"_active\",\n  \"_focus\",\n  \"_invalid\",\n  \"_focusVisible\",\n]\n\ntype LabelOptions = {\n  requiredIndicator?: ReactNode\n  optionalIndicator?: ReactNode\n  isRequired?: boolean\n}\n\nexport type LabelProps = HTMLUIProps<\"label\"> & LabelOptions\n\nexport const Label = forwardRef<LabelProps, \"label\">(\n  (\n    {\n      className,\n      htmlFor,\n      isRequired: isResolveRequired,\n      requiredIndicator = <RequiredIndicator />,\n      optionalIndicator = null,\n      children,\n      ...rest\n    },\n    ref,\n  ) => {\n    const { id, isRequired, isFocused, isDisabled, isInvalid, isReadOnly } =\n      useFormControlContext() ?? {}\n    const styles = useFormControlStyles() ?? {}\n\n    isResolveRequired ??= isRequired\n\n    const css: CSSUIObject = {\n      display: \"block\",\n      pointerEvents: isReadOnly ? \"none\" : undefined,\n      ...styles.label,\n    }\n\n    return (\n      <ui.label\n        ref={ref}\n        className={cx(\"ui-form__label\", className)}\n        data-focus={dataAttr(isFocused)}\n        data-disabled={dataAttr(isDisabled)}\n        data-readonly={dataAttr(isReadOnly)}\n        data-invalid={dataAttr(isInvalid)}\n        htmlFor={htmlFor ?? id}\n        __css={css}\n        style={{ cursor: isDisabled ? \"not-allowed\" : undefined }}\n        {...rest}\n      >\n        {children}\n        {isResolveRequired ? requiredIndicator : optionalIndicator}\n      </ui.label>\n    )\n  },\n)\n\ntype RequiredIndicatorProps = HTMLUIProps<\"span\">\n\nconst RequiredIndicator = forwardRef<RequiredIndicatorProps, \"span\">(\n  ({ className, ...rest }, ref) => {\n    const styles = useFormControlStyles() ?? {}\n\n    const css: CSSUIObject = { ...styles.requiredIndicator }\n\n    return (\n      <ui.span\n        ref={ref}\n        className={cx(\"ui-form__required-indicator\", className)}\n        role=\"presentation\"\n        aria-hidden={true}\n        __css={css}\n        {...rest}\n      >\n        *\n      </ui.span>\n    )\n  },\n)\n\nexport type HelperMessageProps = HTMLUIProps<\"div\">\n\nexport const HelperMessage = forwardRef<HelperMessageProps, \"div\">(\n  ({ className, ...rest }, ref) => {\n    const { isInvalid, isReplace } = useFormControlContext() ?? {}\n    const styles = useFormControlStyles() ?? {}\n\n    if (isReplace && isInvalid) return null\n\n    const css: CSSUIObject = { ...styles.helperMessage }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-form__helper-message\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n\nexport type ErrorMessageProps = HTMLUIProps<\"div\">\n\nexport const ErrorMessage = forwardRef<ErrorMessageProps, \"div\">(\n  ({ className, ...rest }, ref) => {\n    const { isInvalid } = useFormControlContext() ?? {}\n    const styles = useFormControlStyles() ?? {}\n\n    if (!isInvalid) return null\n\n    const css: CSSUIObject = { ...styles.errorMessage }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-form__error-message\", className)}\n        aria-live=\"polite\"\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n"],"names":["FormControlContextProvider","useFormControlContext","createContext","FormControlStylesProvider","useFormControlStyles","FormControl","forwardRef","id","props","ref","styles","mergedProps","useMultiComponentStyle","className","isRequired","isDisabled","isInvalid","isReadOnly","isReplace","label","helperMessage","errorMessage","children","requiredIndicator","optionalIndicator","rest","omitThemeProps","useId","isFocused","setFocused","useState","validChildren","getValidChildren","customLabel","findChildren","Label","customHelperMessage","HelperMessage","customErrorMessage","ErrorMessage","isCustomLabel","isCustomHelperMessage","isCustomErrorMessage","css","jsx","jsxs","ui","cx","useFormControl","control","useFormControlProps","disabled","readOnly","required","onFocus","onBlur","ariaAttr","handlerAll","formControlProperties","htmlFor","isResolveRequired","RequiredIndicator","dataAttr"],"mappings":"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"}