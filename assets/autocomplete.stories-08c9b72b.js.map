{"version":3,"file":"autocomplete.stories-08c9b72b.js","sources":["../../packages/components/autocomplete/src/autocomplete.tsx"],"sourcesContent":["import {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n  CSSUIObject,\n  HTMLUIProps,\n  ThemeProps,\n} from '@yamada-ui/core'\nimport { Popover, PopoverTrigger } from '@yamada-ui/popover'\nimport { cx } from '@yamada-ui/utils'\nimport { AutocompleteIcon, AutocompleteIconProps } from './autocomplete-icon'\nimport { AutocompleteList, AutocompleteListProps } from './autocomplete-list'\nimport {\n  AutocompleteProvider,\n  useAutocomplete,\n  UseAutocompleteProps,\n  AutocompleteDescendantsContextProvider,\n  useAutocompleteContext,\n  useAutocompleteInput,\n} from './use-autocomplete'\nimport { AutocompleteCreate, AutocompleteEmpty } from './'\n\ntype AutocompleteOptions = {\n  /**\n   * The border color when the input is focused.\n   */\n  focusBorderColor?: string\n  /**\n   * The border color when the input is invalid.\n   */\n  errorBorderColor?: string\n  /**\n   * Props for autocomplete container element.\n   */\n  containerProps?: Omit<HTMLUIProps<'div'>, 'children'>\n  /**\n   * Props for autocomplete list element.\n   */\n  listProps?: Omit<AutocompleteListProps, 'children'>\n  /**\n   * Props for autocomplete input element.\n   */\n  inputProps?: HTMLUIProps<'input'>\n  /**\n   * Props for autocomplete icon element.\n   */\n  iconProps?: AutocompleteIconProps\n}\n\nexport type AutocompleteProps = ThemeProps<'Select'> &\n  Omit<\n    UseAutocompleteProps<string>,\n    'maxSelectedValues' | 'omitSelectedValues'\n  > &\n  AutocompleteOptions\n\nexport const Autocomplete = forwardRef<AutocompleteProps, 'input'>(\n  (props, ref) => {\n    const [styles, mergedProps] = useMultiComponentStyle('Select', props)\n    let {\n      className,\n      defaultValue = '',\n      color,\n      h,\n      height,\n      minH,\n      minHeight,\n      containerProps,\n      listProps,\n      inputProps,\n      iconProps,\n      children,\n      ...computedProps\n    } = omitThemeProps(mergedProps)\n\n    const {\n      descendants,\n      formControlProps,\n      getPopoverProps,\n      getContainerProps,\n      getFieldProps,\n      createOption,\n      isEmpty,\n      inputValue,\n      computedChildren,\n      ...rest\n    } = useAutocomplete({ ...computedProps, defaultValue, children })\n\n    h = h ?? height\n    minH = minH ?? minHeight\n\n    const css: CSSUIObject = {\n      position: 'relative',\n      w: '100%',\n      h: 'fit-content',\n      color,\n      ...styles.container,\n    }\n\n    return (\n      <AutocompleteDescendantsContextProvider value={descendants}>\n        <AutocompleteProvider\n          value={{\n            ...rest,\n            formControlProps,\n            inputValue,\n            createOption,\n            isEmpty,\n            styles,\n          }}\n        >\n          <Popover {...getPopoverProps()}>\n            <ui.div\n              className={cx('ui-autocomplete', className)}\n              __css={css}\n              {...getContainerProps(containerProps)}\n            >\n              <AutocompleteField\n                h={h}\n                minH={minH}\n                inputProps={inputProps}\n                {...getFieldProps({}, ref)}\n              />\n\n              <AutocompleteIcon {...iconProps} {...formControlProps} />\n\n              {!isEmpty ? (\n                <AutocompleteList {...listProps}>\n                  {createOption ? (\n                    <AutocompleteCreate />\n                  ) : (\n                    <AutocompleteEmpty />\n                  )}\n\n                  {children ?? computedChildren}\n                </AutocompleteList>\n              ) : (\n                <AutocompleteList {...listProps}>\n                  {createOption && inputValue ? (\n                    <AutocompleteCreate />\n                  ) : (\n                    <AutocompleteEmpty />\n                  )}\n                </AutocompleteList>\n              )}\n            </ui.div>\n          </Popover>\n        </AutocompleteProvider>\n      </AutocompleteDescendantsContextProvider>\n    )\n  },\n)\n\ntype AutocompleteFieldProps = HTMLUIProps<'div'> &\n  Pick<AutocompleteProps, 'inputProps'>\n\nconst AutocompleteField = forwardRef<AutocompleteFieldProps, 'input'>(\n  ({ className, h, minH, placeholder, inputProps, ...rest }, ref) => {\n    const { displayValue, inputValue, styles } = useAutocompleteContext()\n\n    const { getInputProps } = useAutocompleteInput()\n\n    const css: CSSUIObject = {\n      paddingEnd: '2rem',\n      h,\n      minH,\n      display: 'flex',\n      alignItems: 'center',\n      ...styles.field,\n      cursor: 'text',\n    }\n\n    return (\n      <PopoverTrigger>\n        <ui.div\n          className={cx('ui-autocomplete-field', className)}\n          __css={css}\n          {...rest}\n        >\n          <ui.input\n            className='ui-autocomplete-input'\n            display='inline-block'\n            w='full'\n            placeholder={placeholder}\n            {...getInputProps(\n              { ...inputProps, value: inputValue || displayValue || '' },\n              ref,\n            )}\n          />\n        </ui.div>\n      </PopoverTrigger>\n    )\n  },\n)\n"],"names":["Autocomplete","forwardRef","props","ref","styles","mergedProps","useMultiComponentStyle","className","defaultValue","color","h","height","minH","minHeight","containerProps","listProps","inputProps","iconProps","children","computedProps","omitThemeProps","descendants","formControlProps","getPopoverProps","getContainerProps","getFieldProps","createOption","isEmpty","inputValue","computedChildren","rest","useAutocomplete","css","jsx","AutocompleteDescendantsContextProvider","AutocompleteProvider","Popover","jsxs","ui","cx","AutocompleteField","AutocompleteIcon","AutocompleteList","AutocompleteCreate","AutocompleteEmpty","placeholder","displayValue","useAutocompleteContext","getInputProps","useAutocompleteInput","PopoverTrigger"],"mappings":"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"}