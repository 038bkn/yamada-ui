{"version":3,"file":"text-34d34098.js","sources":["../../packages/components/typography/src/text.tsx"],"sourcesContent":["import {\n  ui,\n  forwardRef,\n  HTMLUIProps,\n  CSSUIProps,\n  omitThemeProps,\n  ThemeProps,\n  useComponentStyle,\n} from '@yamada-ui/core'\nimport { cx, filterUndefined } from '@yamada-ui/utils'\n\ntype TextOptions = {\n  /**\n   * The CSS `text-align` property.\n   */\n  align?: CSSUIProps['textAlign']\n  /**\n   * The CSS `text-decoration` property.\n   */\n  decoration?: CSSUIProps['textDecoration']\n  /**\n   * The CSS `text-transform` property.\n   */\n  casing?: CSSUIProps['textTransform']\n}\n\nexport type TextProps = HTMLUIProps<'p'> & ThemeProps<'Text'> & TextOptions\n\nexport const Text = forwardRef<TextProps, 'p'>((props, ref) => {\n  const [css, mergedProps] = useComponentStyle('Text', props)\n  const {\n    className,\n    align: textAlign,\n    decoration: textDecoration,\n    casing: textTransform,\n    ...rest\n  } = omitThemeProps(mergedProps)\n\n  const textProps = filterUndefined({\n    textAlign,\n    textDecoration,\n    textTransform,\n  })\n\n  return (\n    <ui.p\n      ref={ref}\n      className={cx('ui-text', className)}\n      __css={css}\n      {...textProps}\n      {...rest}\n    />\n  )\n})\n"],"names":["Text","forwardRef","props","ref","css","mergedProps","useComponentStyle","className","textAlign","textDecoration","textTransform","rest","omitThemeProps","textProps","filterUndefined","jsx","ui","cx"],"mappings":"2PA4BO,MAAMA,EAAOC,EAA2B,CAACC,EAAOC,IAAQ,CAC7D,KAAM,CAACC,EAAKC,CAAW,EAAIC,EAAkB,OAAQJ,CAAK,EACpD,CACJ,UAAAK,EACA,MAAOC,EACP,WAAYC,EACZ,OAAQC,EACR,GAAGC,CAAA,EACDC,EAAeP,CAAW,EAExBQ,EAAYC,EAAgB,CAChC,UAAAN,EACA,eAAAC,EACA,cAAAC,CAAA,CACD,EAGC,OAAAK,EAACC,EAAG,EAAH,CACC,IAAAb,EACA,UAAWc,EAAG,UAAWV,CAAS,EAClC,MAAOH,EACN,GAAGS,EACH,GAAGF,CAAA,CAAA,CAGV,CAAC"}