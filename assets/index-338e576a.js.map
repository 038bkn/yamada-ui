{"version":3,"file":"index-338e576a.js","sources":["../../packages/hooks/use-outside-click/src/index.ts"],"sourcesContent":["import { getOwnerDocument, useCallbackRef } from '@yamada-ui/utils'\nimport { RefObject, useEffect, useRef } from 'react'\n\nexport type UseOutsideClickProps = {\n  enabled?: boolean\n  ref: React.RefObject<HTMLElement>\n  handler?: (ev: Event) => void\n}\n\nexport const useOutsideClick = ({\n  ref,\n  handler,\n  enabled = true,\n}: UseOutsideClickProps) => {\n  const handlerRef = useCallbackRef(handler)\n\n  const state = useRef({\n    isPointerDown: false,\n    ignoreEmulatedMouseEvents: false,\n  })\n\n  useEffect(() => {\n    if (!enabled) return\n\n    const onPointerDown = (ev: MouseEvent | TouchEvent) => {\n      if (isValidEvent(ev, ref)) state.current.isPointerDown = true\n    }\n\n    const onMouseUp = (ev: MouseEvent) => {\n      if (state.current.ignoreEmulatedMouseEvents) {\n        state.current.ignoreEmulatedMouseEvents = false\n\n        return\n      }\n\n      if (state.current.isPointerDown && handler && isValidEvent(ev, ref)) {\n        state.current.isPointerDown = false\n\n        handlerRef(ev)\n      }\n    }\n\n    const onTouchEnd = (ev: TouchEvent) => {\n      state.current.ignoreEmulatedMouseEvents = true\n\n      if (handler && state.current.isPointerDown && isValidEvent(ev, ref)) {\n        state.current.isPointerDown = false\n\n        handlerRef(ev)\n      }\n    }\n\n    const doc = getOwnerDocument(ref.current)\n\n    doc.addEventListener('mousedown', onPointerDown, true)\n    doc.addEventListener('mouseup', onMouseUp, true)\n    doc.addEventListener('touchstart', onPointerDown, true)\n    doc.addEventListener('touchend', onTouchEnd, true)\n\n    return () => {\n      doc.removeEventListener('mousedown', onPointerDown, true)\n      doc.removeEventListener('mouseup', onMouseUp, true)\n      doc.removeEventListener('touchstart', onPointerDown, true)\n      doc.removeEventListener('touchend', onTouchEnd, true)\n    }\n  }, [handler, ref, handlerRef, state, enabled])\n}\n\nconst isValidEvent = (\n  ev: MouseEvent | TouchEvent,\n  ref: RefObject<HTMLElement>,\n) => {\n  const target = ev.target as HTMLElement\n\n  if ('button' in ev && ev.button > 0) return false\n\n  if (target) if (!getOwnerDocument(target).contains(target)) return false\n\n  return !ref.current?.contains(target)\n}\n"],"names":["useOutsideClick","ref","handler","enabled","handlerRef","useCallbackRef","state","useRef","useEffect","onPointerDown","ev","isValidEvent","onMouseUp","onTouchEnd","doc","getOwnerDocument","target","_a"],"mappings":"mIASO,MAAMA,EAAkB,CAAC,CAC9B,IAAAC,EACA,QAAAC,EACA,QAAAC,EAAU,EACZ,IAA4B,CACpB,MAAAC,EAAaC,EAAeH,CAAO,EAEnCI,EAAQC,EAAAA,OAAO,CACnB,cAAe,GACf,0BAA2B,EAAA,CAC5B,EAEDC,EAAAA,UAAU,IAAM,CACd,GAAI,CAACL,EAAS,OAER,MAAAM,EAAiBC,GAAgC,CACjDC,EAAaD,EAAIT,CAAG,IAAGK,EAAM,QAAQ,cAAgB,GAAA,EAGrDM,EAAaF,GAAmB,CAChC,GAAAJ,EAAM,QAAQ,0BAA2B,CAC3CA,EAAM,QAAQ,0BAA4B,GAE1C,MACF,CAEIA,EAAM,QAAQ,eAAiBJ,GAAWS,EAAaD,EAAIT,CAAG,IAChEK,EAAM,QAAQ,cAAgB,GAE9BF,EAAWM,CAAE,EACf,EAGIG,EAAcH,GAAmB,CACrCJ,EAAM,QAAQ,0BAA4B,GAEtCJ,GAAWI,EAAM,QAAQ,eAAiBK,EAAaD,EAAIT,CAAG,IAChEK,EAAM,QAAQ,cAAgB,GAE9BF,EAAWM,CAAE,EACf,EAGII,EAAMC,EAAiBd,EAAI,OAAO,EAEpC,OAAAa,EAAA,iBAAiB,YAAaL,EAAe,EAAI,EACjDK,EAAA,iBAAiB,UAAWF,EAAW,EAAI,EAC3CE,EAAA,iBAAiB,aAAcL,EAAe,EAAI,EAClDK,EAAA,iBAAiB,WAAYD,EAAY,EAAI,EAE1C,IAAM,CACPC,EAAA,oBAAoB,YAAaL,EAAe,EAAI,EACpDK,EAAA,oBAAoB,UAAWF,EAAW,EAAI,EAC9CE,EAAA,oBAAoB,aAAcL,EAAe,EAAI,EACrDK,EAAA,oBAAoB,WAAYD,EAAY,EAAI,CAAA,CACtD,EACC,CAACX,EAASD,EAAKG,EAAYE,EAAOH,CAAO,CAAC,CAC/C,EAEMQ,EAAe,CACnBD,EACAT,IACG,OACH,MAAMe,EAASN,EAAG,OAId,MAFA,WAAYA,GAAMA,EAAG,OAAS,GAE9BM,GAAY,CAACD,EAAiBC,CAAM,EAAE,SAASA,CAAM,EAAU,GAE5D,GAACC,EAAAhB,EAAI,UAAJ,MAAAgB,EAAa,SAASD,GAChC"}