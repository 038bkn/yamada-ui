{"version":3,"file":"tabs.stories-10cbfb4f.js","sources":["../../packages/components/tabs/src/tabs.tsx","../../packages/components/tabs/src/tab-list.tsx","../../packages/components/tabs/src/tab.tsx","../../packages/components/tabs/src/tab-panels.tsx","../../packages/components/tabs/src/tab-panel.tsx"],"sourcesContent":["import {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n  CSSUIObject,\n  HTMLUIProps,\n  ThemeProps,\n} from \"@yamada-ui/core\"\nimport { useControllableState } from \"@yamada-ui/use-controllable-state\"\nimport { createDescendant } from \"@yamada-ui/use-descendant\"\nimport { LazyMode } from \"@yamada-ui/use-disclosure\"\nimport {\n  createContext,\n  cx,\n  findChildren,\n  pickChildren,\n  getValidChildren,\n} from \"@yamada-ui/utils\"\nimport { Dispatch, SetStateAction, useEffect, useState } from \"react\"\nimport {\n  TabList,\n  TabListProps,\n  TabPanels,\n  TabPanelsProps,\n  Tab,\n  TabPanel,\n} from \"./\"\n\nconst {\n  DescendantsContextProvider,\n  useDescendantsContext: useTabsDescendantsContext,\n  useDescendants,\n  useDescendant: useTabsDescendant,\n} = createDescendant<HTMLButtonElement>()\n\nexport { useTabsDescendantsContext, useTabsDescendant }\n\ntype TabsContext = Omit<TabsOptions, \"index\" | \"defaultIndex\" | \"onChange\"> & {\n  focusedIndex: number\n  setFocusedIndex: Dispatch<SetStateAction<number>>\n  selectedIndex: number\n  setSelectedIndex: Dispatch<SetStateAction<number>>\n  styles: Record<string, CSSUIObject>\n}\n\nconst [TabsProvider, useTabsContext] = createContext<TabsContext>({\n  name: \"TabsContext\",\n  errorMessage: `useTabsContext returned is 'undefined'. Seems you forgot to wrap the components in \"<Tabs />\"`,\n})\n\nexport { useTabsContext }\n\ntype TabsOptions = {\n  /**\n   * The index of the selected tab.\n   */\n  index?: number\n  /**\n   * The index of the selected tab.\n   */\n  defaultIndex?: number\n  /**\n   * If `true`, tabs will stretch to width of the tablist.\n   *\n   * @default false\n   */\n  isFitted?: boolean\n  /**\n   * The alignment of the tabs.\n   */\n  align?: \"start\" | \"end\" | \"center\"\n  /**\n   * If `true`, the tabs will be manually activated andã€€display its panel by pressing Space or Enter.\n   *\n   * If `false`, the tabs will be automatically activated and their panel is displayed when they receive focus.\n   *\n   * @default false\n   */\n  isManual?: boolean\n  /**\n   * If `true`, rendering of the tab panel's will be deferred until it is selected.\n   *\n   * @default true\n   */\n  isLazy?: boolean\n  /**\n   * The lazy behavior of tab panels' content when not active. Only works when `isLazy={true}`.\n   *\n   * - `unmount`: The content of inactive tab panels are always unmounted.\n   * - `keepMounted`: The content of inactive tab panels is initially unmounted, but stays mounted when selected.\n   *\n   * @default 'unmount'\n   */\n  lazyBehavior?: LazyMode\n  /**\n   * The orientation of the tab list.\n   *\n   * @default 'horizontal'\n   */\n  orientation?: \"vertical\" | \"horizontal\"\n  /**\n   * The callback invoked when the index changes.\n   */\n  onChange?: (index: number) => void\n  /**\n   * Props for tab list component.\n   */\n  tabListProps?: TabListProps\n  /**\n   * Props for tab panels components.\n   */\n  tabPanelsProps?: TabPanelsProps\n}\n\nexport type TabsProps = Omit<HTMLUIProps<\"div\">, \"onChange\"> &\n  ThemeProps<\"Tabs\"> &\n  TabsOptions\n\nexport const Tabs = forwardRef<TabsProps, \"div\">(\n  ({ align = \"start\", ...props }, ref) => {\n    const [styles, mergedProps] = useMultiComponentStyle(\"Tabs\", {\n      align,\n      ...props,\n    })\n    const {\n      className,\n      index,\n      defaultIndex = 0,\n      onChange,\n      isFitted,\n      isManual,\n      isLazy = true,\n      lazyBehavior = \"keepMounted\",\n      orientation = \"horizontal\",\n      tabListProps,\n      tabPanelsProps,\n      children,\n      ...rest\n    } = omitThemeProps(mergedProps)\n\n    const [focusedIndex, setFocusedIndex] = useState<number>(defaultIndex)\n\n    const [selectedIndex, setSelectedIndex] = useControllableState({\n      value: index,\n      defaultValue: defaultIndex,\n      onChange,\n    })\n\n    const descendants = useDescendants()\n\n    const validChildren = getValidChildren(children)\n\n    const [customTabList] = findChildren(validChildren, TabList)\n    const [customTabPanels] = findChildren(validChildren, TabPanels)\n    const cloneTabs = pickChildren(validChildren, Tab)\n    const cloneTabPanels = pickChildren(validChildren, TabPanel)\n\n    useEffect(() => {\n      if (index != null) setFocusedIndex(index)\n    }, [index])\n\n    const css: CSSUIObject = { w: \"100%\", ...styles.container }\n\n    return (\n      <DescendantsContextProvider value={descendants}>\n        <TabsProvider\n          value={{\n            focusedIndex,\n            setFocusedIndex,\n            selectedIndex,\n            setSelectedIndex,\n            isFitted,\n            align,\n            isManual,\n            isLazy,\n            lazyBehavior,\n            orientation,\n            tabListProps,\n            tabPanelsProps,\n            styles,\n          }}\n        >\n          <ui.div\n            ref={ref}\n            className={cx(\"ui-tabs\", className)}\n            __css={css}\n            {...rest}\n          >\n            {customTabList ?? <TabList>{cloneTabs}</TabList>}\n            {customTabPanels ?? <TabPanels>{cloneTabPanels}</TabPanels>}\n          </ui.div>\n        </TabsProvider>\n      </DescendantsContextProvider>\n    )\n  },\n)\n","import { ui, forwardRef, CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { cx, handlerAll } from \"@yamada-ui/utils\"\nimport { KeyboardEvent, KeyboardEventHandler, useCallback } from \"react\"\nimport { useTabsContext, useTabsDescendantsContext } from \"./tabs\"\n\nexport type TabListProps = HTMLUIProps<\"div\">\n\nexport const TabList = forwardRef<TabListProps, \"div\">(\n  ({ className, ...rest }, ref) => {\n    const { focusedIndex, orientation, tabListProps, styles } = useTabsContext()\n\n    const descendants = useTabsDescendantsContext()\n\n    const isVertical = orientation === \"vertical\"\n\n    const onNext = useCallback(() => {\n      const next = descendants.enabledNextValue(focusedIndex)\n\n      if (next) next.node?.focus()\n    }, [descendants, focusedIndex])\n\n    const onPrev = useCallback(() => {\n      const prev = descendants.enabledPrevValue(focusedIndex)\n\n      if (prev) prev.node?.focus()\n    }, [descendants, focusedIndex])\n\n    const onFirst = useCallback(() => {\n      const first = descendants.enabledfirstValue()\n\n      if (first) first.node?.focus()\n    }, [descendants])\n\n    const onLast = useCallback(() => {\n      const last = descendants.enabledlastValue()\n\n      if (last) last.node?.focus()\n    }, [descendants])\n\n    const onKeyDown = useCallback(\n      (ev: KeyboardEvent) => {\n        const actions: Record<string, KeyboardEventHandler> = {\n          ArrowLeft: () => (!isVertical ? onPrev() : {}),\n          ArrowRight: () => (!isVertical ? onNext() : {}),\n          ArrowDown: () => (isVertical ? onNext() : {}),\n          ArrowUp: () => (isVertical ? onPrev() : {}),\n          Home: onFirst,\n          End: onLast,\n        }\n\n        const action = actions[ev.key]\n\n        if (!action) return\n\n        ev.preventDefault()\n        action(ev)\n      },\n      [onFirst, onLast, isVertical, onPrev, onNext],\n    )\n\n    const css: CSSUIObject = { display: \"flex\", ...styles.tabList }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-tabs-list\", className)}\n        role=\"tablist\"\n        __css={css}\n        {...tabListProps}\n        {...rest}\n        onKeyDown={handlerAll(rest.onKeyDown, onKeyDown)}\n      />\n    )\n  },\n)\n","import { ui, forwardRef, CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { useClickable, UseClickableProps } from \"@yamada-ui/use-clickable\"\nimport { ariaAttr, cx, handlerAll, mergeRefs } from \"@yamada-ui/utils\"\nimport { useTabsContext, useTabsDescendant } from \"./tabs\"\n\nexport type TabProps = HTMLUIProps<\"button\"> &\n  Omit<UseClickableProps, \"ref\" | \"color\">\n\nexport const Tab = forwardRef<TabProps, \"button\">(\n  (\n    {\n      className,\n      isDisabled,\n      isFocusable,\n      clickOnEnter,\n      clickOnSpace,\n      ...props\n    },\n    ref,\n  ) => {\n    const {\n      selectedIndex,\n      isManual,\n      setSelectedIndex,\n      setFocusedIndex,\n      styles,\n    } = useTabsContext()\n\n    const { index, register } = useTabsDescendant({\n      disabled: isDisabled && !isFocusable,\n    })\n\n    const isSelected = index === selectedIndex\n\n    const onClick = () => setSelectedIndex(index)\n\n    const onFocus = () => {\n      setFocusedIndex(index)\n\n      if (!isManual && !(isDisabled && isFocusable)) setSelectedIndex(index)\n    }\n\n    const rest = useClickable({\n      ref: mergeRefs(register, ref),\n      isDisabled,\n      isFocusable,\n      clickOnEnter,\n      clickOnSpace,\n      onClick: handlerAll(props.onClick, onClick),\n    })\n\n    const css: CSSUIObject = {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      outline: \"0\",\n      ...styles.tab,\n    }\n\n    return (\n      <ui.button\n        className={cx(\"ui-tabs-tab\", className)}\n        __css={css}\n        role=\"tab\"\n        {...props}\n        {...rest}\n        type=\"button\"\n        tabIndex={isSelected ? 0 : -1}\n        aria-selected={ariaAttr(isSelected)}\n        onFocus={isDisabled ? undefined : handlerAll(props.onFocus, onFocus)}\n      />\n    )\n  },\n)\n","import { ui, forwardRef, CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { createContext, cx, getValidChildren } from \"@yamada-ui/utils\"\nimport { createElement } from \"react\"\nimport { useTabsContext } from \"./tabs\"\n\nconst [TabPanelProvider, useTabPanelContext] = createContext<{\n  isSelected: boolean\n  selectedIndex: number\n}>({})\n\nexport { useTabPanelContext }\n\nexport type TabPanelsProps = HTMLUIProps<\"div\">\n\nexport const TabPanels = forwardRef<TabPanelsProps, \"div\">(\n  ({ className, children, ...rest }, ref) => {\n    const { selectedIndex, tabPanelsProps, styles } = useTabsContext()\n\n    const validChildren = getValidChildren(children)\n\n    const cloneChildren = validChildren.map((child, index) => {\n      const isSelected = index === selectedIndex\n\n      return createElement(\n        TabPanelProvider,\n        { key: index, value: { isSelected, selectedIndex } },\n        child,\n      )\n    })\n\n    const css: CSSUIObject = {\n      w: \"100%\",\n      ...styles.tabPanels,\n    }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-tabs-panels\", className)}\n        __css={css}\n        {...tabPanelsProps}\n        {...rest}\n      >\n        {cloneChildren}\n      </ui.div>\n    )\n  },\n)\n","import { ui, forwardRef, CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { useLazyDisclosure } from \"@yamada-ui/use-disclosure\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useRef } from \"react\"\nimport { useTabPanelContext } from \"./tab-panels\"\nimport { useTabsContext } from \"./tabs\"\n\nexport type TabPanelProps = HTMLUIProps<\"div\">\n\nexport const TabPanel = forwardRef<TabPanelProps, \"div\">(\n  ({ className, children, ...rest }, ref) => {\n    const { isLazy: enabled, lazyBehavior: mode, styles } = useTabsContext()\n    const { isSelected } = useTabPanelContext()\n\n    const hasBeenSelected = useRef<boolean>(false)\n\n    if (isSelected) hasBeenSelected.current = true\n\n    const shouldRenderChildren = useLazyDisclosure({\n      wasSelected: hasBeenSelected.current,\n      isSelected,\n      enabled,\n      mode,\n    })\n\n    const css: CSSUIObject = { ...styles.tabPanel }\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-tabs-panel\", className)}\n        role=\"tabpanel\"\n        __css={css}\n        {...rest}\n        hidden={!isSelected}\n      >\n        {shouldRenderChildren ? children : null}\n      </ui.div>\n    )\n  },\n)\n"],"names":["DescendantsContextProvider","useTabsDescendantsContext","useDescendants","useTabsDescendant","createDescendant","TabsProvider","useTabsContext","createContext","Tabs","forwardRef","align","props","ref","styles","mergedProps","useMultiComponentStyle","className","index","defaultIndex","onChange","isFitted","isManual","isLazy","lazyBehavior","orientation","tabListProps","tabPanelsProps","children","rest","omitThemeProps","focusedIndex","setFocusedIndex","useState","selectedIndex","setSelectedIndex","useControllableState","descendants","validChildren","getValidChildren","customTabList","findChildren","TabList","customTabPanels","TabPanels","cloneTabs","pickChildren","Tab","cloneTabPanels","TabPanel","useEffect","css","jsx","jsxs","ui","cx","isVertical","onNext","useCallback","next","_a","onPrev","prev","onFirst","first","onLast","last","onKeyDown","ev","action","handlerAll","isDisabled","isFocusable","clickOnEnter","clickOnSpace","register","isSelected","onClick","onFocus","useClickable","mergeRefs","ariaAttr","TabPanelProvider","useTabPanelContext","cloneChildren","child","createElement","enabled","mode","hasBeenSelected","useRef","shouldRenderChildren","useLazyDisclosure"],"mappings":"gnBA6BA,KAAM,CACJ,2BAAAA,GACA,sBAAuBC,GACvB,eAAAC,GACA,cAAeC,EACjB,EAAIC,GAAoC,EAYlC,CAACC,GAAcC,CAAc,EAAIC,GAA2B,CAChE,KAAM,cACN,aAAc,+FAChB,CAAC,EAsEYC,EAAOC,EAClB,CAAC,CAAE,MAAAC,EAAQ,QAAS,GAAGC,CAAA,EAASC,IAAQ,CACtC,KAAM,CAACC,EAAQC,CAAW,EAAIC,GAAuB,OAAQ,CAC3D,MAAAL,EACA,GAAGC,CAAA,CACJ,EACK,CACJ,UAAAK,EACA,MAAAC,EACA,aAAAC,EAAe,EACf,SAAAC,EACA,SAAAC,EACA,SAAAC,EACA,OAAAC,EAAS,GACT,aAAAC,EAAe,cACf,YAAAC,EAAc,aACd,aAAAC,EACA,eAAAC,EACA,SAAAC,EACA,GAAGC,CAAA,EACDC,GAAef,CAAW,EAExB,CAACgB,EAAcC,CAAe,EAAIC,WAAiBd,CAAY,EAE/D,CAACe,GAAeC,EAAgB,EAAIC,GAAqB,CAC7D,MAAOlB,EACP,aAAcC,EACd,SAAAC,CAAA,CACD,EAEKiB,GAAclC,KAEdmC,EAAgBC,GAAiBX,CAAQ,EAEzC,CAACY,EAAa,EAAIC,EAAaH,EAAeI,CAAO,EACrD,CAACC,EAAe,EAAIF,EAAaH,EAAeM,CAAS,EACzDC,GAAYC,EAAaR,EAAeS,CAAG,EAC3CC,GAAiBF,EAAaR,EAAeW,CAAQ,EAE3DC,EAAAA,UAAU,IAAM,CACVhC,GAAS,MAAMc,EAAgBd,CAAK,CAAA,EACvC,CAACA,CAAK,CAAC,EAEV,MAAMiC,GAAmB,CAAE,EAAG,OAAQ,GAAGrC,EAAO,WAG9C,OAAAsC,EAACnD,GAA2B,CAAA,MAAOoC,GACjC,SAAAe,EAAC9C,GAAA,CACC,MAAO,CACL,aAAAyB,EACA,gBAAAC,EACA,cAAAE,GACA,iBAAAC,GACA,SAAAd,EACA,MAAAV,EACA,SAAAW,EACA,OAAAC,EACA,aAAAC,EACA,YAAAC,EACA,aAAAC,EACA,eAAAC,EACA,OAAAb,CACF,EAEA,SAAAuC,EAACC,EAAG,IAAH,CACC,IAAAzC,EACA,UAAW0C,EAAG,UAAWtC,CAAS,EAClC,MAAOkC,GACN,GAAGtB,EAEH,SAAA,CAAiBW,IAAAY,EAACV,GAAS,SAAUG,EAAA,CAAA,EACrCF,IAAoBS,EAAAR,EAAA,CAAW,SAAeI,EAAA,CAAA,CAAA,CAAA,CACjD,CAAA,CAEJ,CAAA,CAAA,CAEJ,CACF,EC7LaN,EAAUhC,EACrB,CAAC,CAAE,UAAAO,EAAW,GAAGY,CAAA,EAAQhB,IAAQ,CAC/B,KAAM,CAAE,aAAAkB,EAAc,YAAAN,EAAa,aAAAC,EAAc,OAAAZ,CAAA,EAAWP,IAEtD8B,EAAcnC,KAEdsD,EAAa/B,IAAgB,WAE7BgC,EAASC,EAAAA,YAAY,IAAM,OACzB,MAAAC,EAAOtB,EAAY,iBAAiBN,CAAY,EAElD4B,KAAMC,EAAAD,EAAK,OAAL,MAAAC,EAAW,QAAM,EAC1B,CAACvB,EAAaN,CAAY,CAAC,EAExB8B,EAASH,EAAAA,YAAY,IAAM,OACzB,MAAAI,EAAOzB,EAAY,iBAAiBN,CAAY,EAElD+B,KAAMF,EAAAE,EAAK,OAAL,MAAAF,EAAW,QAAM,EAC1B,CAACvB,EAAaN,CAAY,CAAC,EAExBgC,EAAUL,EAAAA,YAAY,IAAM,OAC1B,MAAAM,EAAQ3B,EAAY,oBAEtB2B,KAAOJ,EAAAI,EAAM,OAAN,MAAAJ,EAAY,QAAM,EAC5B,CAACvB,CAAW,CAAC,EAEV4B,EAASP,EAAAA,YAAY,IAAM,OACzB,MAAAQ,EAAO7B,EAAY,mBAErB6B,KAAMN,EAAAM,EAAK,OAAL,MAAAN,EAAW,QAAM,EAC1B,CAACvB,CAAW,CAAC,EAEV8B,EAAYT,EAAA,YACfU,GAAsB,CAUf,MAAAC,EATgD,CACpD,UAAW,IAAQb,EAAwB,CAAC,EAAZK,IAChC,WAAY,IAAQL,EAAwB,CAAC,EAAZC,IACjC,UAAW,IAAOD,EAAaC,EAAA,EAAW,CAAC,EAC3C,QAAS,IAAOD,EAAaK,EAAA,EAAW,CAAC,EACzC,KAAME,EACN,IAAKE,CAAA,EAGgBG,EAAG,GAAG,EAExBC,IAELD,EAAG,eAAe,EAClBC,EAAOD,CAAE,EACX,EACA,CAACL,EAASE,EAAQT,EAAYK,EAAQJ,CAAM,CAAA,EAGxCN,EAAmB,CAAE,QAAS,OAAQ,GAAGrC,EAAO,SAGpD,OAAAsC,EAACE,EAAG,IAAH,CACC,IAAAzC,EACA,UAAW0C,EAAG,eAAgBtC,CAAS,EACvC,KAAK,UACL,MAAOkC,EACN,GAAGzB,EACH,GAAGG,EACJ,UAAWyC,EAAWzC,EAAK,UAAWsC,CAAS,CAAA,CAAA,CAGrD,CACF,EClEapB,EAAMrC,EACjB,CACE,CACE,UAAAO,EACA,WAAAsD,EACA,YAAAC,EACA,aAAAC,EACA,aAAAC,EACA,GAAG9D,GAELC,IACG,CACG,KAAA,CACJ,cAAAqB,EACA,SAAAZ,EACA,iBAAAa,EACA,gBAAAH,EACA,OAAAlB,GACEP,EAAe,EAEb,CAAE,MAAAW,EAAO,SAAAyD,CAAS,EAAIvE,GAAkB,CAC5C,SAAUmE,GAAc,CAACC,CAAA,CAC1B,EAEKI,EAAa1D,IAAUgB,EAEvB2C,EAAU,IAAM1C,EAAiBjB,CAAK,EAEtC4D,EAAU,IAAM,CACpB9C,EAAgBd,CAAK,EAEjB,CAACI,GAAY,EAAEiD,GAAcC,IAAcrC,EAAiBjB,CAAK,CAAA,EAGjEW,EAAOkD,GAAa,CACxB,IAAKC,GAAUL,EAAU9D,CAAG,EAC5B,WAAA0D,EACA,YAAAC,EACA,aAAAC,EACA,aAAAC,EACA,QAASJ,EAAW1D,EAAM,QAASiE,CAAO,CAAA,CAC3C,EAEK1B,EAAmB,CACvB,QAAS,OACT,WAAY,SACZ,eAAgB,SAChB,QAAS,IACT,GAAGrC,EAAO,GAAA,EAIV,OAAAsC,EAACE,EAAG,OAAH,CACC,UAAWC,EAAG,cAAetC,CAAS,EACtC,MAAOkC,EACP,KAAK,MACJ,GAAGvC,EACH,GAAGiB,EACJ,KAAK,SACL,SAAU+C,EAAa,EAAI,GAC3B,gBAAeK,GAASL,CAAU,EAClC,QAASL,EAAa,OAAYD,EAAW1D,EAAM,QAASkE,CAAO,CAAA,CAAA,CAGzE,CACF,ECpEM,CAACI,GAAkBC,EAAkB,EAAI3E,GAG5C,CAAE,CAAA,EAMQoC,EAAYlC,EACvB,CAAC,CAAE,UAAAO,EAAW,SAAAW,EAAU,GAAGC,CAAA,EAAQhB,IAAQ,CACzC,KAAM,CAAE,cAAAqB,EAAe,eAAAP,EAAgB,OAAAb,GAAWP,EAAe,EAI3D6E,EAFgB7C,GAAiBX,CAAQ,EAEX,IAAI,CAACyD,EAAOnE,IAAU,CACxD,MAAM0D,EAAa1D,IAAUgB,EAEtB,OAAAoD,EAAA,cACLJ,GACA,CAAE,IAAKhE,EAAO,MAAO,CAAE,WAAA0D,EAAY,cAAA1C,EAAgB,EACnDmD,CAAA,CACF,CACD,EAEKlC,EAAmB,CACvB,EAAG,OACH,GAAGrC,EAAO,SAAA,EAIV,OAAAsC,EAACE,EAAG,IAAH,CACC,IAAAzC,EACA,UAAW0C,EAAG,iBAAkBtC,CAAS,EACzC,MAAOkC,EACN,GAAGxB,EACH,GAAGE,EAEH,SAAAuD,CAAA,CAAA,CAGP,CACF,ECtCanC,EAAWvC,EACtB,CAAC,CAAE,UAAAO,EAAW,SAAAW,EAAU,GAAGC,CAAA,EAAQhB,IAAQ,CACzC,KAAM,CAAE,OAAQ0E,EAAS,aAAcC,EAAM,OAAA1E,CAAA,EAAWP,IAClD,CAAE,WAAAqE,GAAeO,KAEjBM,EAAkBC,SAAgB,EAAK,EAEzCd,IAAYa,EAAgB,QAAU,IAE1C,MAAME,EAAuBC,GAAkB,CAC7C,YAAaH,EAAgB,QAC7B,WAAAb,EACA,QAAAW,EACA,KAAAC,CAAA,CACD,EAEKrC,EAAmB,CAAE,GAAGrC,EAAO,QAAS,EAG5C,OAAAsC,EAACE,EAAG,IAAH,CACC,IAAAzC,EACA,UAAW0C,EAAG,gBAAiBtC,CAAS,EACxC,KAAK,WACL,MAAOkC,EACN,GAAGtB,EACJ,OAAQ,CAAC+C,EAER,WAAuBhD,EAAW,IAAA,CAAA,CAGz}