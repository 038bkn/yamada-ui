{"version":3,"file":"highlight.stories-d84f6bff.js","sources":["../../packages/components/highlight/src/highlight.tsx"],"sourcesContent":["import type { HTMLUIProps, ThemeProps, CSSUIObject } from \"@yamada-ui/core\"\nimport {\n  ui,\n  forwardRef,\n  useComponentStyle,\n  omitThemeProps,\n} from \"@yamada-ui/core\"\nimport type { TextProps } from \"@yamada-ui/typography\"\nimport { Text } from \"@yamada-ui/typography\"\nimport { cx, isArray } from \"@yamada-ui/utils\"\nimport type { FC, ReactNode } from \"react\"\nimport { Fragment, useMemo } from \"react\"\n\ntype Options = { text: string; query: string | string[] }\n\ntype Chunk = { text: string; match: boolean }\n\nconst escapeRegexp = (term: string): string =>\n  term.replace(/[|\\\\{}()[\\]^$+*?.-]/g, (char: string) => `\\\\${char}`)\n\nconst buildRegex = (query: string[]): RegExp | undefined => {\n  query = query.filter(Boolean).map((text) => escapeRegexp(text.trim()))\n\n  if (query.length) return new RegExp(`(${query.join(\"|\")})`, \"ig\")\n}\n\nconst highlightWords = ({ text, query }: Options): Chunk[] => {\n  const regex = buildRegex(isArray(query) ? query : [query])\n\n  if (!regex) return [{ text, match: false }]\n\n  return text\n    .split(regex)\n    .filter(Boolean)\n    .map((text) => ({ text, match: regex.test(text) }))\n}\n\nexport const useHighlight = ({ text, query }: Options): Chunk[] =>\n  useMemo(() => highlightWords({ text, query }), [text, query])\n\nexport type HighlightProps = TextProps & {\n  /**\n   * If `true`, `Fragment` is used for rendering.\n   *\n   * @default false\n   */\n  isFragment?: boolean\n  /**\n   * Can be a single string or an array of strings. These are the terms that are highlighted in the text.\n   */\n  query: string | string[]\n  /**\n   * Accepts a string or a function. If it's a function, it should return a `ReactNode` and accept an array of `Chunk` objects as its argument.\n   */\n  children: string | ((props: Chunk[]) => ReactNode)\n  /**\n   * Properties passed to the Mark component which is used to highlight the matched terms.\n   */\n  markProps?: MarkProps\n}\n\nexport const Highlight: FC<HighlightProps> = ({\n  isFragment = false,\n  query,\n  children: text,\n  markProps,\n  lineHeight = \"tall\",\n  ...rest\n}) => {\n  if (typeof text !== \"string\")\n    throw new Error(\"The children prop of Highlight must be a string\")\n\n  const chunks = useHighlight({ query, text })\n\n  const Component: FC = isFragment ? Fragment : Text\n\n  return (\n    <Component {...(!isFragment ? { lineHeight } : {})} {...rest}>\n      {chunks.map(({ text, match }, i) =>\n        match ? (\n          <Mark key={i} {...markProps}>\n            {text}\n          </Mark>\n        ) : (\n          <Fragment key={i}>{text}</Fragment>\n        ),\n      )}\n    </Component>\n  )\n}\n\nexport type MarkProps = HTMLUIProps<\"mark\"> & ThemeProps<\"Mark\">\n\nexport const Mark = forwardRef<MarkProps, \"mark\">((props, ref) => {\n  const [styles, mergedProps] = useComponentStyle(\"Mark\", props)\n  const { className, ...rest } = omitThemeProps(mergedProps)\n\n  const css: CSSUIObject = {\n    bg: \"transparent\",\n    whiteSpace: \"nowrap\",\n    ...styles,\n  }\n\n  return (\n    <ui.mark\n      ref={ref}\n      className={cx(\"ui-mark\", className)}\n      __css={css}\n      {...rest}\n    />\n  )\n})\n"],"names":["escapeRegexp","term","char","buildRegex","query","text","highlightWords","regex","isArray","useHighlight","useMemo","Highlight","isFragment","markProps","lineHeight","rest","chunks","Component","Fragment","Text","jsx","match","i","Mark","forwardRef","props","ref","styles","mergedProps","useComponentStyle","className","omitThemeProps","css","ui","cx"],"mappings":"ufAiBA,MAAMA,GAAgBC,GACpBA,EAAK,QAAQ,uBAAyBC,GAAiB,KAAKA,CAAI,EAAE,EAE9DC,GAAcC,GAAwC,CAG1D,GAFQA,EAAAA,EAAM,OAAO,OAAO,EAAE,IAAKC,GAASL,GAAaK,EAAK,KAAK,CAAC,CAAC,EAEjED,EAAM,OAAe,OAAA,IAAI,OAAO,IAAIA,EAAM,KAAK,GAAG,CAAC,IAAK,IAAI,CAClE,EAEME,GAAiB,CAAC,CAAE,KAAAD,EAAM,MAAAD,KAA8B,CACtD,MAAAG,EAAQJ,GAAWK,EAAQJ,CAAK,EAAIA,EAAQ,CAACA,CAAK,CAAC,EAEzD,OAAKG,EAEEF,EACJ,MAAME,CAAK,EACX,OAAO,OAAO,EACd,IAAKF,IAAU,CAAE,KAAAA,EAAM,MAAOE,EAAM,KAAKF,CAAI,CAAI,EAAA,EALjC,CAAC,CAAE,KAAAA,EAAM,MAAO,EAAO,CAAA,CAM5C,EAEaI,EAAe,CAAC,CAAE,KAAAJ,EAAM,MAAAD,KACnCM,EAAQ,QAAA,IAAMJ,GAAe,CAAE,KAAAD,EAAM,MAAAD,CAAM,CAAC,EAAG,CAACC,EAAMD,CAAK,CAAC,EAuBjDO,EAAgC,CAAC,CAC5C,WAAAC,EAAa,GACb,MAAAR,EACA,SAAUC,EACV,UAAAQ,EACA,WAAAC,EAAa,OACb,GAAGC,CACL,IAAM,CACJ,GAAI,OAAOV,GAAS,SACZ,MAAA,IAAI,MAAM,iDAAiD,EAEnE,MAAMW,EAASP,EAAa,CAAE,MAAAL,EAAO,KAAAC,CAAM,CAAA,EAErCY,EAAgBL,EAAaM,EAAW,SAAAC,EAE9C,OACGC,EAAAH,EAAA,CAAW,GAAKL,EAA8B,CAAC,EAAlB,CAAE,WAAAE,CAAW,EAAU,GAAGC,EACrD,SAAOC,EAAA,IAAI,CAAC,CAAE,KAAAX,EAAM,MAAAgB,CAAS,EAAAC,IAC5BD,EACGD,EAAAG,EAAA,CAAc,GAAGV,EACf,SAAAR,GADQiB,CAEX,IAECJ,EAAkB,SAAA,CAAA,SAAAb,GAAJiB,CAAS,CAG9B,CAAA,CAAA,CAEJ,EAIaC,EAAOC,EAA8B,CAACC,EAAOC,IAAQ,CAChE,KAAM,CAACC,EAAQC,CAAW,EAAIC,EAAkB,OAAQJ,CAAK,EACvD,CAAE,UAAAK,EAAW,GAAGf,CAAK,EAAIgB,EAAeH,CAAW,EAEnDI,EAAmB,CACvB,GAAI,cACJ,WAAY,SACZ,GAAGL,CAAA,EAIH,OAAAP,EAACa,EAAG,KAAH,CACC,IAAAP,EACA,UAAWQ,EAAG,UAAWJ,CAAS,EAClC,MAAOE,EACN,GAAGjB,CAAA,CAAA,CAGV,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}