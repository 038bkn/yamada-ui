{"version":3,"file":"loading-provider-9b746d4c.js","sources":["../../packages/providers/src/loading-provider.tsx"],"sourcesContent":["import {\n  ui,\n  ThemeConfig,\n  LoadingComponentProps,\n  CSSUIObject,\n} from '@yamada-ui/core'\nimport { Loading } from '@yamada-ui/loading'\nimport { AnimatePresence, motion, MotionVariants } from '@yamada-ui/motion'\nimport { Portal } from '@yamada-ui/portal'\nimport { useTimeout } from '@yamada-ui/use-timeout'\nimport { isValidElement, assignRef, useUpdateEffect } from '@yamada-ui/utils'\nimport {\n  createContext,\n  FC,\n  memo,\n  PropsWithChildren,\n  ReactNode,\n  useContext,\n  useMemo,\n  useState,\n  Fragment,\n  useRef,\n  MutableRefObject,\n  createRef,\n  RefObject,\n} from 'react'\nimport { RemoveScroll } from 'react-remove-scroll'\n\ntype LoadingContextProps = {\n  /**\n   * Returns a judgement on whether it is currently loading or not.\n   */\n  isLoading: () => boolean\n  /**\n   * Function to start loading.\n   *\n   * If you specify a `message` etc. as an argument, the loading will change accordingly.\n   */\n  start: (props?: Partial<LoadingProps>) => void\n  /**\n   * Function to finish loading.\n   */\n  finish: () => void\n  /**\n   * Function to update loading.\n   *\n   * If you specify a `message` etc. as an argument, the loading will change accordingly.\n   */\n  update: (props: Partial<LoadingProps>) => void\n}\n\ntype LoadingContext = {\n  /**\n   * The screen loading animation.\n   */\n  screen: LoadingContextProps\n  /**\n   * The page loading animation.\n   */\n  page: LoadingContextProps\n  /**\n   * The background loading animation.\n   */\n  background: LoadingContextProps\n  /**\n   * The custom loading animation.\n   *\n   * This cannot be used unless a component is defined at `config/loading/custom.`\n   */\n  custom: LoadingContextProps\n}\n\ntype LoadingProps = {\n  message: ReactNode | undefined\n  duration: number | null\n}\n\ntype LoadingState = {\n  loadingCount: number\n  message: ReactNode | undefined\n  duration: number | null\n}\n\nexport type LoadingProviderProps = PropsWithChildren<ThemeConfig['loading']>\n\nexport const LoadingContext = createContext({} as LoadingContext)\n\ntype LoadingRef = MutableRefObject<{\n  isLoading: RefObject<LoadingContextProps['isLoading']>\n  start: RefObject<LoadingContextProps['start']>\n  finish: RefObject<LoadingContextProps['finish']>\n  update: RefObject<LoadingContextProps['update']>\n}>\n\nconst generateFunc = (ref: LoadingRef): LoadingContextProps => ({\n  isLoading: () => ref.current.isLoading.current?.() ?? false,\n  start: (props) => ref.current.start.current?.(props),\n  finish: () => ref.current.finish.current?.(),\n  update: (props) => ref.current.update.current?.(props),\n})\n\nconst incrementCount = (prev: number) => prev + 1\nconst decrementCount = (prev: number) => (prev === 0 ? prev : prev - 1)\n\nexport const LoadingProvider: FC<LoadingProviderProps> = ({\n  screen,\n  page,\n  background,\n  custom,\n  children,\n}) => {\n  const screenLoadingRef = useRef({\n    isLoading: createRef<LoadingContextProps['isLoading']>(),\n    start: createRef<LoadingContextProps['start']>(),\n    finish: createRef<LoadingContextProps['finish']>(),\n    update: createRef<LoadingContextProps['update']>(),\n  })\n  const pageLoadingRef = useRef({\n    isLoading: createRef<LoadingContextProps['isLoading']>(),\n    start: createRef<LoadingContextProps['start']>(),\n    finish: createRef<LoadingContextProps['finish']>(),\n    update: createRef<LoadingContextProps['update']>(),\n  })\n  const backgroundLoadingRef = useRef({\n    isLoading: createRef<LoadingContextProps['isLoading']>(),\n    start: createRef<LoadingContextProps['start']>(),\n    finish: createRef<LoadingContextProps['finish']>(),\n    update: createRef<LoadingContextProps['update']>(),\n  })\n  const customLoadingRef = useRef({\n    isLoading: createRef<LoadingContextProps['isLoading']>(),\n    start: createRef<LoadingContextProps['start']>(),\n    finish: createRef<LoadingContextProps['finish']>(),\n    update: createRef<LoadingContextProps['update']>(),\n  })\n\n  const screenLoadingFunc = generateFunc(screenLoadingRef)\n  const pageLoadingFunc = generateFunc(pageLoadingRef)\n  const backgroundLoadingFunc = generateFunc(backgroundLoadingRef)\n  const customLoadingFunc = generateFunc(customLoadingRef)\n\n  const value = {\n    screen: screenLoadingFunc,\n    page: pageLoadingFunc,\n    background: backgroundLoadingFunc,\n    custom: customLoadingFunc,\n  }\n\n  return (\n    <LoadingContext.Provider value={value}>\n      {children}\n      <LoadingControl\n        {...{\n          screen,\n          page,\n          background,\n          custom,\n          screenLoadingRef,\n          pageLoadingRef,\n          backgroundLoadingRef,\n          customLoadingRef,\n        }}\n      />\n    </LoadingContext.Provider>\n  )\n}\n\ntype LoadingControlProps = Required<ThemeConfig>['loading'] & {\n  screenLoadingRef: LoadingRef\n  pageLoadingRef: LoadingRef\n  backgroundLoadingRef: LoadingRef\n  customLoadingRef: LoadingRef\n}\n\nconst LoadingControl: FC<LoadingControlProps> = ({\n  screen,\n  page,\n  background,\n  custom,\n  ...refs\n}) => {\n  const isScreenLoadingRef = useRef<boolean>(false)\n  const [screenLoading, setScreenLoading] = useState<LoadingState>({\n    loadingCount: screen?.initialState ? 1 : 0,\n    message: undefined,\n    duration: screen?.duration ?? null,\n  })\n  const isPageLoadingRef = useRef<boolean>(false)\n  const [pageLoading, setPageLoading] = useState<LoadingState>({\n    loadingCount: page?.initialState ? 1 : 0,\n    message: undefined,\n    duration: page?.duration ?? null,\n  })\n  const isBackgroundLoadingRef = useRef<boolean>(false)\n  const [backgroundLoading, setBackgroundLoading] = useState<LoadingState>({\n    loadingCount: background?.initialState ? 1 : 0,\n    message: undefined,\n    duration: background?.duration ?? null,\n  })\n  const isCustomLoadingRef = useRef<boolean>(false)\n  const [customLoading, setCustomLoading] = useState<LoadingState>({\n    loadingCount: custom?.initialState ? 1 : 0,\n    message: undefined,\n    duration: custom?.duration ?? null,\n  })\n\n  const screenLoadingFunc: LoadingContextProps = useMemo(\n    () => ({\n      isLoading: () => isScreenLoadingRef.current,\n      start: ({ message, duration = screenLoading.duration ?? null } = {}) => {\n        isScreenLoadingRef.current = true\n        setScreenLoading(({ loadingCount }) => ({\n          loadingCount: incrementCount(loadingCount),\n          message,\n          duration,\n        }))\n      },\n      update: (next) => setScreenLoading((prev) => ({ ...prev, ...next })),\n      finish: () => {\n        isScreenLoadingRef.current = false\n        setScreenLoading(({ loadingCount }) => ({\n          loadingCount: decrementCount(loadingCount),\n          message: undefined,\n          duration: screen?.duration ?? null,\n        }))\n      },\n    }),\n    [screenLoading, screen],\n  )\n\n  const pageLoadingFunc: LoadingContextProps = useMemo(\n    () => ({\n      isLoading: () => isPageLoadingRef.current,\n      start: ({ message, duration = pageLoading.duration ?? null } = {}) => {\n        isPageLoadingRef.current = true\n        setPageLoading(({ loadingCount }) => ({\n          loadingCount: incrementCount(loadingCount),\n          message,\n          duration,\n        }))\n      },\n      update: (next) => setPageLoading((prev) => ({ ...prev, ...next })),\n      finish: () => {\n        isPageLoadingRef.current = false\n        setPageLoading(({ loadingCount }) => ({\n          loadingCount: decrementCount(loadingCount),\n          message: undefined,\n          duration: page?.duration ?? null,\n        }))\n      },\n    }),\n    [pageLoading, page],\n  )\n\n  const backgroundLoadingFunc: LoadingContextProps = useMemo(\n    () => ({\n      isLoading: () => isBackgroundLoadingRef.current,\n      start: ({\n        message,\n        duration = backgroundLoading.duration ?? null,\n      } = {}) => {\n        isBackgroundLoadingRef.current = true\n        setBackgroundLoading(({ loadingCount }) => ({\n          loadingCount: incrementCount(loadingCount),\n          message,\n          duration,\n        }))\n      },\n      update: (next) => setBackgroundLoading((prev) => ({ ...prev, ...next })),\n      finish: () => {\n        isBackgroundLoadingRef.current = false\n        setBackgroundLoading(({ loadingCount }) => ({\n          loadingCount: decrementCount(loadingCount),\n          message: undefined,\n          duration: background?.duration ?? null,\n        }))\n      },\n    }),\n    [backgroundLoading, background],\n  )\n\n  const customLoadingFunc: LoadingContextProps = useMemo(\n    () => ({\n      isLoading: () => isCustomLoadingRef.current,\n      start: ({ message, duration = customLoading.duration ?? null } = {}) => {\n        isCustomLoadingRef.current = true\n        setCustomLoading(({ loadingCount }) => ({\n          loadingCount: incrementCount(loadingCount),\n          message,\n          duration,\n        }))\n      },\n      update: (next) => setCustomLoading((prev) => ({ ...prev, ...next })),\n      finish: () => {\n        isCustomLoadingRef.current = false\n        setCustomLoading(({ loadingCount }) => ({\n          loadingCount: decrementCount(loadingCount),\n          message: undefined,\n          duration: custom?.duration ?? null,\n        }))\n      },\n    }),\n    [customLoading, custom],\n  )\n\n  assignRef(\n    refs.screenLoadingRef.current.isLoading,\n    screenLoadingFunc.isLoading,\n  )\n  assignRef(refs.screenLoadingRef.current.start, screenLoadingFunc.start)\n  assignRef(refs.screenLoadingRef.current.finish, screenLoadingFunc.finish)\n  assignRef(refs.screenLoadingRef.current.update, screenLoadingFunc.update)\n  assignRef(refs.pageLoadingRef.current.isLoading, pageLoadingFunc.isLoading)\n  assignRef(refs.pageLoadingRef.current.start, pageLoadingFunc.start)\n  assignRef(refs.pageLoadingRef.current.finish, pageLoadingFunc.finish)\n  assignRef(refs.pageLoadingRef.current.update, pageLoadingFunc.update)\n  assignRef(\n    refs.backgroundLoadingRef.current.isLoading,\n    backgroundLoadingFunc.isLoading,\n  )\n  assignRef(\n    refs.backgroundLoadingRef.current.start,\n    backgroundLoadingFunc.start,\n  )\n  assignRef(\n    refs.backgroundLoadingRef.current.finish,\n    backgroundLoadingFunc.finish,\n  )\n  assignRef(\n    refs.backgroundLoadingRef.current.update,\n    backgroundLoadingFunc.update,\n  )\n  assignRef(\n    refs.customLoadingRef.current.isLoading,\n    customLoadingFunc.isLoading,\n  )\n  assignRef(refs.customLoadingRef.current.start, customLoadingFunc.start)\n  assignRef(refs.customLoadingRef.current.finish, customLoadingFunc.finish)\n  assignRef(refs.customLoadingRef.current.update, customLoadingFunc.update)\n\n  useUpdateEffect(() => {\n    if (screen)\n      setScreenLoading({\n        loadingCount: screen?.initialState ? 1 : 0,\n        message: undefined,\n        duration: screen?.duration ?? null,\n      })\n\n    if (page)\n      setPageLoading({\n        loadingCount: page?.initialState ? 1 : 0,\n        message: undefined,\n        duration: page?.duration ?? null,\n      })\n\n    if (background)\n      setBackgroundLoading({\n        loadingCount: background?.initialState ? 1 : 0,\n        message: undefined,\n        duration: background?.duration ?? null,\n      })\n\n    if (custom)\n      setCustomLoading({\n        loadingCount: custom?.initialState ? 1 : 0,\n        message: undefined,\n        duration: custom?.duration ?? null,\n      })\n  }, [screen, page, background, custom])\n\n  return (\n    <>\n      <AnimatePresence initial={false}>\n        {screenLoading.loadingCount ? (\n          <Portal\n            appendToParentPortal={screen?.appendToParentPortal}\n            containerRef={screen?.containerRef}\n          >\n            <RemoveScroll\n              allowPinchZoom={screen?.allowPinchZoom ?? false}\n              enabled={screen?.blockScrollOnMount ?? true}\n              forwardProps\n            >\n              <Fragment>\n                {screen?.component ? (\n                  <CustomComponent\n                    component={screen.component}\n                    {...{\n                      initialState: screen?.initialState,\n                      icon: screen?.icon,\n                      text: screen?.text,\n                      message: screenLoading.message,\n                      duration: screenLoading.duration,\n                      onFinish: screenLoadingFunc.finish,\n                    }}\n                  />\n                ) : (\n                  <LoadingScreenComponent\n                    {...{\n                      initialState: screen?.initialState,\n                      icon: screen?.icon,\n                      text: screen?.text,\n                      message: screenLoading.message,\n                      duration: screenLoading.duration,\n                      onFinish: screenLoadingFunc.finish,\n                    }}\n                  />\n                )}\n              </Fragment>\n            </RemoveScroll>\n          </Portal>\n        ) : null}\n      </AnimatePresence>\n\n      <AnimatePresence initial={false}>\n        {pageLoading.loadingCount ? (\n          <Portal\n            appendToParentPortal={page?.appendToParentPortal}\n            containerRef={page?.containerRef}\n          >\n            <RemoveScroll\n              allowPinchZoom={page?.allowPinchZoom ?? false}\n              enabled={page?.blockScrollOnMount ?? true}\n              forwardProps\n            >\n              <Fragment>\n                {page?.component ? (\n                  <CustomComponent\n                    component={page.component}\n                    {...{\n                      initialState: page?.initialState,\n                      icon: page?.icon,\n                      text: page?.text,\n                      message: pageLoading.message,\n                      duration: pageLoading.duration,\n                      onFinish: pageLoadingFunc.finish,\n                    }}\n                  />\n                ) : (\n                  <LoadingPageComponent\n                    {...{\n                      initialState: page?.initialState,\n                      icon: page?.icon,\n                      text: page?.text,\n                      message: pageLoading.message,\n                      duration: pageLoading.duration,\n                      onFinish: pageLoadingFunc.finish,\n                    }}\n                  />\n                )}\n              </Fragment>\n            </RemoveScroll>\n          </Portal>\n        ) : null}\n      </AnimatePresence>\n\n      <AnimatePresence initial={false}>\n        {backgroundLoading.loadingCount ? (\n          <Portal\n            appendToParentPortal={background?.appendToParentPortal}\n            containerRef={background?.containerRef}\n          >\n            <RemoveScroll\n              allowPinchZoom={page?.allowPinchZoom ?? false}\n              enabled={page?.blockScrollOnMount ?? false}\n              forwardProps\n            >\n              <Fragment>\n                {background?.component ? (\n                  <CustomComponent\n                    component={background.component}\n                    {...{\n                      initialState: background?.initialState,\n                      icon: background?.icon,\n                      text: background?.text,\n                      message: backgroundLoading.message,\n                      duration: backgroundLoading.duration,\n                      onFinish: backgroundLoadingFunc.finish,\n                    }}\n                  />\n                ) : (\n                  <LoadingBackgroundComponent\n                    {...{\n                      initialState: background?.initialState,\n                      icon: background?.icon,\n                      text: background?.text,\n                      message: backgroundLoading.message,\n                      duration: backgroundLoading.duration,\n                      onFinish: backgroundLoadingFunc.finish,\n                    }}\n                  />\n                )}\n              </Fragment>\n            </RemoveScroll>\n          </Portal>\n        ) : null}\n      </AnimatePresence>\n\n      <AnimatePresence initial={false}>\n        {customLoading.loadingCount ? (\n          <Portal\n            appendToParentPortal={custom?.appendToParentPortal}\n            containerRef={custom?.containerRef}\n          >\n            {custom?.component ? (\n              <CustomComponent\n                component={custom.component}\n                {...{\n                  initialState: custom?.initialState,\n                  icon: custom?.icon,\n                  text: custom?.text,\n                  message: customLoading.message,\n                  duration: customLoading.duration,\n                  onFinish: customLoadingFunc.finish,\n                }}\n              />\n            ) : null}\n          </Portal>\n        ) : null}\n      </AnimatePresence>\n    </>\n  )\n}\n\ntype CustomComponentProps = {\n  component: (props: LoadingComponentProps) => ReactNode\n} & LoadingComponentProps\n\nconst CustomComponent: FC<CustomComponentProps> = ({ component, ...props }) => {\n  if (typeof component === 'function') {\n    return component(props) as JSX.Element\n  } else {\n    return <></>\n  }\n}\n\nconst getVariants = (type: 'fade' | 'scaleFade' = 'fade'): MotionVariants => ({\n  initial: {\n    opacity: 0,\n    scale: type === 'scaleFade' ? 0.95 : undefined,\n  },\n  animate: {\n    opacity: 1,\n    scale: type === 'scaleFade' ? 1 : undefined,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    opacity: 0,\n    scale: type === 'scaleFade' ? 0.95 : undefined,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n})\n\nconst getOverlayStyle = (\n  type: 'fill' | 'transparent' = 'fill',\n): CSSUIObject => ({\n  position: 'fixed',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  zIndex: 9999,\n  bg: type === 'fill' ? ['white', 'black'] : 'blackAlpha.600',\n  w: '100vw',\n  h: '100vh',\n  p: 'md',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n})\n\nconst getMotionProps = (\n  initialState: boolean | undefined,\n  type: 'fade' | 'scaleFade' = 'fade',\n) => ({\n  initial: initialState ? false : 'initial',\n  animate: 'animate',\n  exit: 'exit',\n  variants: getVariants(type),\n})\n\nconst LoadingScreenComponent = memo(\n  ({\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish,\n  }: LoadingComponentProps) => {\n    const css: CSSUIObject = {\n      maxW: 'md',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      gap: 'sm',\n    }\n\n    useTimeout(onFinish, duration)\n\n    return (\n      <ui.div\n        as={motion.div}\n        className='ui-loading-screen'\n        {...getMotionProps(initialState)}\n        __css={getOverlayStyle()}\n      >\n        <ui.div __css={css}>\n          <Loading size='6xl' {...icon} />\n          {message ? (\n            isValidElement(message) ? (\n              message\n            ) : (\n              <ui.p noOfLines={3} {...text}>\n                {message}\n              </ui.p>\n            )\n          ) : null}\n        </ui.div>\n      </ui.div>\n    )\n  },\n)\n\nLoadingScreenComponent.displayName = 'LoadingScreenComponent'\n\nconst LoadingPageComponent = memo(\n  ({\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish,\n  }: LoadingComponentProps) => {\n    const css: CSSUIObject = {\n      bg: ['white', 'black'],\n      maxW: 'md',\n      p: 'md',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      gap: 'sm',\n      rounded: 'md',\n      boxShadow: ['lg', 'dark-lg'],\n    }\n\n    useTimeout(onFinish, duration)\n\n    return (\n      <ui.div\n        as={motion.div}\n        className='ui-loading-page'\n        {...getMotionProps(initialState)}\n        __css={getOverlayStyle('transparent')}\n      >\n        <ui.div\n          as={motion.div}\n          className='ui-loading-page-container'\n          {...getMotionProps(initialState, 'scaleFade')}\n          __css={css}\n        >\n          <Loading size='6xl' {...icon} />\n          {message ? (\n            isValidElement(message) ? (\n              message\n            ) : (\n              <ui.p noOfLines={3} {...text}>\n                {message}\n              </ui.p>\n            )\n          ) : null}\n        </ui.div>\n      </ui.div>\n    )\n  },\n)\n\nLoadingPageComponent.displayName = 'LoadingPageComponent'\n\nconst LoadingBackgroundComponent = memo(\n  ({\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish,\n  }: LoadingComponentProps) => {\n    const css: CSSUIObject = {\n      position: 'fixed',\n      right: 'md',\n      bottom: 'md',\n      zIndex: 'beerus',\n      bg: ['white', 'black'],\n      maxW: 'sm',\n      p: 'sm',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      gap: 'sm',\n      rounded: 'md',\n      boxShadow: ['3xl', 'dark-lg'],\n    }\n\n    useTimeout(onFinish, duration)\n\n    return (\n      <ui.div\n        as={motion.div}\n        className='ui-loading-page-container'\n        {...getMotionProps(initialState, 'scaleFade')}\n        __css={css}\n      >\n        <Loading size='xl' {...icon} />\n        {message ? (\n          isValidElement(message) ? (\n            message\n          ) : (\n            <ui.p fontSize='sm' noOfLines={1} {...text}>\n              {message}\n            </ui.p>\n          )\n        ) : null}\n      </ui.div>\n    )\n  },\n)\n\nLoadingBackgroundComponent.displayName = 'LoadingBackgroundComponent'\n\nexport const useLoading = (): LoadingContext => {\n  const { screen, page, background, custom } = useContext(LoadingContext)\n\n  return { screen, page, background, custom }\n}\n"],"names":["LoadingContext","createContext","generateFunc","ref","_b","_a","props","incrementCount","prev","decrementCount","LoadingProvider","screen","page","background","custom","children","screenLoadingRef","useRef","createRef","pageLoadingRef","backgroundLoadingRef","customLoadingRef","screenLoadingFunc","pageLoadingFunc","backgroundLoadingFunc","customLoadingFunc","value","jsxs","jsx","LoadingControl","refs","isScreenLoadingRef","screenLoading","setScreenLoading","useState","isPageLoadingRef","pageLoading","setPageLoading","isBackgroundLoadingRef","backgroundLoading","setBackgroundLoading","isCustomLoadingRef","customLoading","setCustomLoading","useMemo","message","duration","loadingCount","next","assignRef","useUpdateEffect","Fragment","AnimatePresence","Portal","RemoveScroll","CustomComponent","LoadingScreenComponent","LoadingPageComponent","LoadingBackgroundComponent","component","getVariants","type","getOverlayStyle","getMotionProps","initialState","memo","icon","text","onFinish","css","useTimeout","ui","motion","Loading","isValidElement","useLoading","useContext"],"mappings":"uaAqFa,MAAAA,EAAiBC,EAAAA,cAAc,CAAA,CAAoB,EAS1DC,EAAgBC,IAA0C,CAC9D,UAAW,IAAM,SAAA,QAAAC,GAAAC,EAAAF,EAAI,QAAQ,WAAU,UAAtB,YAAAC,EAAA,KAAAC,KAAqC,IACtD,MAAQC,YAAU,OAAAF,GAAAC,EAAAF,EAAI,QAAQ,OAAM,UAAlB,YAAAC,EAAA,KAAAC,EAA4BC,IAC9C,OAAQ,IAAA,SAAM,OAAAF,GAAAC,EAAAF,EAAI,QAAQ,QAAO,UAAnB,YAAAC,EAAA,KAAAC,IACd,OAASC,YAAU,OAAAF,GAAAC,EAAAF,EAAI,QAAQ,QAAO,UAAnB,YAAAC,EAAA,KAAAC,EAA6BC,GAClD,GAEMC,EAAkBC,GAAiBA,EAAO,EAC1CC,EAAkBD,GAAkBA,IAAS,EAAIA,EAAOA,EAAO,EAExDE,GAA4C,CAAC,CACxD,OAAAC,EACA,KAAAC,EACA,WAAAC,EACA,OAAAC,EACA,SAAAC,CACF,IAAM,CACJ,MAAMC,EAAmBC,EAAAA,OAAO,CAC9B,UAAWC,EAAAA,UAA4C,EACvD,MAAOA,EAAAA,UAAwC,EAC/C,OAAQA,EAAAA,UAAyC,EACjD,OAAQA,EAAAA,UAAyC,CAAA,CAClD,EACKC,EAAiBF,EAAAA,OAAO,CAC5B,UAAWC,EAAAA,UAA4C,EACvD,MAAOA,EAAAA,UAAwC,EAC/C,OAAQA,EAAAA,UAAyC,EACjD,OAAQA,EAAAA,UAAyC,CAAA,CAClD,EACKE,EAAuBH,EAAAA,OAAO,CAClC,UAAWC,EAAAA,UAA4C,EACvD,MAAOA,EAAAA,UAAwC,EAC/C,OAAQA,EAAAA,UAAyC,EACjD,OAAQA,EAAAA,UAAyC,CAAA,CAClD,EACKG,EAAmBJ,EAAAA,OAAO,CAC9B,UAAWC,EAAAA,UAA4C,EACvD,MAAOA,EAAAA,UAAwC,EAC/C,OAAQA,EAAAA,UAAyC,EACjD,OAAQA,EAAAA,UAAyC,CAAA,CAClD,EAEKI,EAAoBpB,EAAac,CAAgB,EACjDO,EAAkBrB,EAAaiB,CAAc,EAC7CK,EAAwBtB,EAAakB,CAAoB,EACzDK,EAAoBvB,EAAamB,CAAgB,EAEjDK,EAAQ,CACZ,OAAQJ,EACR,KAAMC,EACN,WAAYC,EACZ,OAAQC,CAAA,EAGV,OACGE,EAAA3B,EAAe,SAAf,CAAwB,MAAA0B,EACtB,SAAA,CAAAX,EACDa,EAACC,EAAA,CAEG,OAAAlB,EACA,KAAAC,EACA,WAAAC,EACA,OAAAC,EACA,iBAAAE,EACA,eAAAG,EACA,qBAAAC,EACA,iBAAAC,CACF,CACF,CACF,CAAA,CAAA,CAEJ,EASMQ,EAA0C,CAAC,CAC/C,OAAAlB,EACA,KAAAC,EACA,WAAAC,EACA,OAAAC,EACA,GAAGgB,CACL,IAAM,CACE,MAAAC,EAAqBd,SAAgB,EAAK,EAC1C,CAACe,EAAeC,CAAgB,EAAIC,WAAuB,CAC/D,aAAcvB,GAAA,MAAAA,EAAQ,aAAe,EAAI,EACzC,QAAS,OACT,UAAUA,GAAA,YAAAA,EAAQ,WAAY,IAAA,CAC/B,EACKwB,EAAmBlB,SAAgB,EAAK,EACxC,CAACmB,EAAaC,CAAc,EAAIH,WAAuB,CAC3D,aAActB,GAAA,MAAAA,EAAM,aAAe,EAAI,EACvC,QAAS,OACT,UAAUA,GAAA,YAAAA,EAAM,WAAY,IAAA,CAC7B,EACK0B,EAAyBrB,SAAgB,EAAK,EAC9C,CAACsB,EAAmBC,CAAoB,EAAIN,WAAuB,CACvE,aAAcrB,GAAA,MAAAA,EAAY,aAAe,EAAI,EAC7C,QAAS,OACT,UAAUA,GAAA,YAAAA,EAAY,WAAY,IAAA,CACnC,EACK4B,EAAqBxB,SAAgB,EAAK,EAC1C,CAACyB,EAAeC,CAAgB,EAAIT,WAAuB,CAC/D,aAAcpB,GAAA,MAAAA,EAAQ,aAAe,EAAI,EACzC,QAAS,OACT,UAAUA,GAAA,YAAAA,EAAQ,WAAY,IAAA,CAC/B,EAEKQ,EAAyCsB,EAAA,QAC7C,KAAO,CACL,UAAW,IAAMb,EAAmB,QACpC,MAAO,CAAC,CAAE,QAAAc,EAAS,SAAAC,EAAWd,EAAc,UAAY,IAAS,EAAA,KAAO,CACtED,EAAmB,QAAU,GACZE,EAAA,CAAC,CAAE,aAAAc,MAAoB,CACtC,aAAcxC,EAAewC,CAAY,EACzC,QAAAF,EACA,SAAAC,CACA,EAAA,CACJ,EACA,OAASE,GAASf,EAAkBzB,IAAU,CAAE,GAAGA,EAAM,GAAGwC,CAAA,EAAO,EACnE,OAAQ,IAAM,CACZjB,EAAmB,QAAU,GACZE,EAAA,CAAC,CAAE,aAAAc,MAAoB,CACtC,aAActC,EAAesC,CAAY,EACzC,QAAS,OACT,UAAUpC,GAAA,YAAAA,EAAQ,WAAY,IAC9B,EAAA,CACJ,CAAA,GAEF,CAACqB,EAAerB,CAAM,CAAA,EAGlBY,EAAuCqB,EAAA,QAC3C,KAAO,CACL,UAAW,IAAMT,EAAiB,QAClC,MAAO,CAAC,CAAE,QAAAU,EAAS,SAAAC,EAAWV,EAAY,UAAY,IAAS,EAAA,KAAO,CACpED,EAAiB,QAAU,GACZE,EAAA,CAAC,CAAE,aAAAU,MAAoB,CACpC,aAAcxC,EAAewC,CAAY,EACzC,QAAAF,EACA,SAAAC,CACA,EAAA,CACJ,EACA,OAASE,GAASX,EAAgB7B,IAAU,CAAE,GAAGA,EAAM,GAAGwC,CAAA,EAAO,EACjE,OAAQ,IAAM,CACZb,EAAiB,QAAU,GACZE,EAAA,CAAC,CAAE,aAAAU,MAAoB,CACpC,aAActC,EAAesC,CAAY,EACzC,QAAS,OACT,UAAUnC,GAAA,YAAAA,EAAM,WAAY,IAC5B,EAAA,CACJ,CAAA,GAEF,CAACwB,EAAaxB,CAAI,CAAA,EAGdY,EAA6CoB,EAAA,QACjD,KAAO,CACL,UAAW,IAAMN,EAAuB,QACxC,MAAO,CAAC,CACN,QAAAO,EACA,SAAAC,EAAWP,EAAkB,UAAY,IAC3C,EAAI,KAAO,CACTD,EAAuB,QAAU,GACZE,EAAA,CAAC,CAAE,aAAAO,MAAoB,CAC1C,aAAcxC,EAAewC,CAAY,EACzC,QAAAF,EACA,SAAAC,CACA,EAAA,CACJ,EACA,OAASE,GAASR,EAAsBhC,IAAU,CAAE,GAAGA,EAAM,GAAGwC,CAAA,EAAO,EACvE,OAAQ,IAAM,CACZV,EAAuB,QAAU,GACZE,EAAA,CAAC,CAAE,aAAAO,MAAoB,CAC1C,aAActC,EAAesC,CAAY,EACzC,QAAS,OACT,UAAUlC,GAAA,YAAAA,EAAY,WAAY,IAClC,EAAA,CACJ,CAAA,GAEF,CAAC0B,EAAmB1B,CAAU,CAAA,EAG1BY,EAAyCmB,EAAA,QAC7C,KAAO,CACL,UAAW,IAAMH,EAAmB,QACpC,MAAO,CAAC,CAAE,QAAAI,EAAS,SAAAC,EAAWJ,EAAc,UAAY,IAAS,EAAA,KAAO,CACtED,EAAmB,QAAU,GACZE,EAAA,CAAC,CAAE,aAAAI,MAAoB,CACtC,aAAcxC,EAAewC,CAAY,EACzC,QAAAF,EACA,SAAAC,CACA,EAAA,CACJ,EACA,OAASE,GAASL,EAAkBnC,IAAU,CAAE,GAAGA,EAAM,GAAGwC,CAAA,EAAO,EACnE,OAAQ,IAAM,CACZP,EAAmB,QAAU,GACZE,EAAA,CAAC,CAAE,aAAAI,MAAoB,CACtC,aAActC,EAAesC,CAAY,EACzC,QAAS,OACT,UAAUjC,GAAA,YAAAA,EAAQ,WAAY,IAC9B,EAAA,CACJ,CAAA,GAEF,CAAC4B,EAAe5B,CAAM,CAAA,EAGxB,OAAAmC,EACEnB,EAAK,iBAAiB,QAAQ,UAC9BR,EAAkB,SAAA,EAEpB2B,EAAUnB,EAAK,iBAAiB,QAAQ,MAAOR,EAAkB,KAAK,EACtE2B,EAAUnB,EAAK,iBAAiB,QAAQ,OAAQR,EAAkB,MAAM,EACxE2B,EAAUnB,EAAK,iBAAiB,QAAQ,OAAQR,EAAkB,MAAM,EACxE2B,EAAUnB,EAAK,eAAe,QAAQ,UAAWP,EAAgB,SAAS,EAC1E0B,EAAUnB,EAAK,eAAe,QAAQ,MAAOP,EAAgB,KAAK,EAClE0B,EAAUnB,EAAK,eAAe,QAAQ,OAAQP,EAAgB,MAAM,EACpE0B,EAAUnB,EAAK,eAAe,QAAQ,OAAQP,EAAgB,MAAM,EACpE0B,EACEnB,EAAK,qBAAqB,QAAQ,UAClCN,EAAsB,SAAA,EAExByB,EACEnB,EAAK,qBAAqB,QAAQ,MAClCN,EAAsB,KAAA,EAExByB,EACEnB,EAAK,qBAAqB,QAAQ,OAClCN,EAAsB,MAAA,EAExByB,EACEnB,EAAK,qBAAqB,QAAQ,OAClCN,EAAsB,MAAA,EAExByB,EACEnB,EAAK,iBAAiB,QAAQ,UAC9BL,EAAkB,SAAA,EAEpBwB,EAAUnB,EAAK,iBAAiB,QAAQ,MAAOL,EAAkB,KAAK,EACtEwB,EAAUnB,EAAK,iBAAiB,QAAQ,OAAQL,EAAkB,MAAM,EACxEwB,EAAUnB,EAAK,iBAAiB,QAAQ,OAAQL,EAAkB,MAAM,EAExEyB,EAAgB,IAAM,CAChBvC,GACesB,EAAA,CACf,aAActB,GAAA,MAAAA,EAAQ,aAAe,EAAI,EACzC,QAAS,OACT,UAAUA,GAAA,YAAAA,EAAQ,WAAY,IAAA,CAC/B,EAECC,GACayB,EAAA,CACb,aAAczB,GAAA,MAAAA,EAAM,aAAe,EAAI,EACvC,QAAS,OACT,UAAUA,GAAA,YAAAA,EAAM,WAAY,IAAA,CAC7B,EAECC,GACmB2B,EAAA,CACnB,aAAc3B,GAAA,MAAAA,EAAY,aAAe,EAAI,EAC7C,QAAS,OACT,UAAUA,GAAA,YAAAA,EAAY,WAAY,IAAA,CACnC,EAECC,GACe6B,EAAA,CACf,aAAc7B,GAAA,MAAAA,EAAQ,aAAe,EAAI,EACzC,QAAS,OACT,UAAUA,GAAA,YAAAA,EAAQ,WAAY,IAAA,CAC/B,GACF,CAACH,EAAQC,EAAMC,EAAYC,CAAM,CAAC,EAIjCa,EAAAwB,EAAA,CAAA,SAAA,CAAAvB,EAACwB,EAAgB,CAAA,QAAS,GACvB,SAAApB,EAAc,aACbJ,EAACyB,EAAA,CACC,qBAAsB1C,GAAA,YAAAA,EAAQ,qBAC9B,aAAcA,GAAA,YAAAA,EAAQ,aAEtB,SAAAiB,EAAC0B,EAAA,CACC,gBAAgB3C,GAAA,YAAAA,EAAQ,iBAAkB,GAC1C,SAASA,GAAA,YAAAA,EAAQ,qBAAsB,GACvC,aAAY,GAEZ,SAACwC,EAAAA,EAAAA,SAAA,CACE,SAAAxC,GAAA,MAAAA,EAAQ,UACPiB,EAAC2B,EAAA,CACC,UAAW5C,EAAO,UAEhB,aAAcA,GAAA,YAAAA,EAAQ,aACtB,KAAMA,GAAA,YAAAA,EAAQ,KACd,KAAMA,GAAA,YAAAA,EAAQ,KACd,QAASqB,EAAc,QACvB,SAAUA,EAAc,SACxB,SAAUV,EAAkB,MAC9B,CAAA,EAGFM,EAAC4B,EAAA,CAEG,aAAc7C,GAAA,YAAAA,EAAQ,aACtB,KAAMA,GAAA,YAAAA,EAAQ,KACd,KAAMA,GAAA,YAAAA,EAAQ,KACd,QAASqB,EAAc,QACvB,SAAUA,EAAc,SACxB,SAAUV,EAAkB,MAC9B,CAAA,EAGN,CAAA,CACF,CAAA,GAEA,IACN,CAAA,EAECM,EAAAwB,EAAA,CAAgB,QAAS,GACvB,WAAY,aACXxB,EAACyB,EAAA,CACC,qBAAsBzC,GAAA,YAAAA,EAAM,qBAC5B,aAAcA,GAAA,YAAAA,EAAM,aAEpB,SAAAgB,EAAC0B,EAAA,CACC,gBAAgB1C,GAAA,YAAAA,EAAM,iBAAkB,GACxC,SAASA,GAAA,YAAAA,EAAM,qBAAsB,GACrC,aAAY,GAEZ,SAACuC,EAAAA,EAAAA,SAAA,CACE,SAAAvC,GAAA,MAAAA,EAAM,UACLgB,EAAC2B,EAAA,CACC,UAAW3C,EAAK,UAEd,aAAcA,GAAA,YAAAA,EAAM,aACpB,KAAMA,GAAA,YAAAA,EAAM,KACZ,KAAMA,GAAA,YAAAA,EAAM,KACZ,QAASwB,EAAY,QACrB,SAAUA,EAAY,SACtB,SAAUb,EAAgB,MAC5B,CAAA,EAGFK,EAAC6B,EAAA,CAEG,aAAc7C,GAAA,YAAAA,EAAM,aACpB,KAAMA,GAAA,YAAAA,EAAM,KACZ,KAAMA,GAAA,YAAAA,EAAM,KACZ,QAASwB,EAAY,QACrB,SAAUA,EAAY,SACtB,SAAUb,EAAgB,MAC5B,CAAA,EAGN,CAAA,CACF,CAAA,GAEA,IACN,CAAA,EAECK,EAAAwB,EAAA,CAAgB,QAAS,GACvB,WAAkB,aACjBxB,EAACyB,EAAA,CACC,qBAAsBxC,GAAA,YAAAA,EAAY,qBAClC,aAAcA,GAAA,YAAAA,EAAY,aAE1B,SAAAe,EAAC0B,EAAA,CACC,gBAAgB1C,GAAA,YAAAA,EAAM,iBAAkB,GACxC,SAASA,GAAA,YAAAA,EAAM,qBAAsB,GACrC,aAAY,GAEZ,SAACuC,EAAAA,EAAAA,SAAA,CACE,SAAAtC,GAAA,MAAAA,EAAY,UACXe,EAAC2B,EAAA,CACC,UAAW1C,EAAW,UAEpB,aAAcA,GAAA,YAAAA,EAAY,aAC1B,KAAMA,GAAA,YAAAA,EAAY,KAClB,KAAMA,GAAA,YAAAA,EAAY,KAClB,QAAS0B,EAAkB,QAC3B,SAAUA,EAAkB,SAC5B,SAAUf,EAAsB,MAClC,CAAA,EAGFI,EAAC8B,EAAA,CAEG,aAAc7C,GAAA,YAAAA,EAAY,aAC1B,KAAMA,GAAA,YAAAA,EAAY,KAClB,KAAMA,GAAA,YAAAA,EAAY,KAClB,QAAS0B,EAAkB,QAC3B,SAAUA,EAAkB,SAC5B,SAAUf,EAAsB,MAClC,CAAA,EAGN,CAAA,CACF,CAAA,GAEA,IACN,CAAA,EAECI,EAAAwB,EAAA,CAAgB,QAAS,GACvB,WAAc,aACbxB,EAACyB,EAAA,CACC,qBAAsBvC,GAAA,YAAAA,EAAQ,qBAC9B,aAAcA,GAAA,YAAAA,EAAQ,aAErB,oBAAQ,UACPc,EAAC2B,EAAA,CACC,UAAWzC,EAAO,UAEhB,aAAcA,GAAA,YAAAA,EAAQ,aACtB,KAAMA,GAAA,YAAAA,EAAQ,KACd,KAAMA,GAAA,YAAAA,EAAQ,KACd,QAAS4B,EAAc,QACvB,SAAUA,EAAc,SACxB,SAAUjB,EAAkB,MAC9B,CAAA,EAEA,IAAA,GAEJ,IACN,CAAA,CACF,CAAA,CAAA,CAEJ,EAMM8B,EAA4C,CAAC,CAAE,UAAAI,EAAW,GAAGrD,KAC7D,OAAOqD,GAAc,WAChBA,EAAUrD,CAAK,EAEbsB,EAAAuB,EAAA,CAAA,CAAA,EAIPS,EAAc,CAACC,EAA6B,UAA4B,CAC5E,QAAS,CACP,QAAS,EACT,MAAOA,IAAS,YAAc,IAAO,MACvC,EACA,QAAS,CACP,QAAS,EACT,MAAOA,IAAS,YAAc,EAAI,OAClC,WAAY,CACV,SAAU,GACV,KAAM,CAAC,GAAK,EAAG,GAAK,CAAC,CACvB,CACF,EACA,KAAM,CACJ,QAAS,EACT,MAAOA,IAAS,YAAc,IAAO,OACrC,WAAY,CACV,SAAU,GACV,KAAM,CAAC,GAAK,EAAG,EAAG,CAAC,CACrB,CACF,CACF,GAEMC,EAAkB,CACtBD,EAA+B,UACd,CACjB,SAAU,QACV,IAAK,EACL,MAAO,EACP,OAAQ,EACR,KAAM,EACN,OAAQ,KACR,GAAIA,IAAS,OAAS,CAAC,QAAS,OAAO,EAAI,iBAC3C,EAAG,QACH,EAAG,QACH,EAAG,KACH,QAAS,OACT,eAAgB,SAChB,WAAY,QACd,GAEME,EAAiB,CACrBC,EACAH,EAA6B,UACzB,CACJ,QAASG,EAAe,GAAQ,UAChC,QAAS,UACT,KAAM,OACN,SAAUJ,EAAYC,CAAI,CAC5B,GAEML,EAAyBS,EAAA,KAC7B,CAAC,CACC,aAAAD,EACA,KAAAE,EACA,KAAAC,EACA,QAAAtB,EACA,SAAAC,EACA,SAAAsB,CAAA,IAC2B,CAC3B,MAAMC,EAAmB,CACvB,KAAM,KACN,QAAS,OACT,cAAe,SACf,eAAgB,SAChB,WAAY,SACZ,IAAK,IAAA,EAGP,OAAAC,EAAWF,EAAUtB,CAAQ,EAG3BlB,EAAC2C,EAAG,IAAH,CACC,GAAIC,EAAO,IACX,UAAU,oBACT,GAAGT,EAAeC,CAAY,EAC/B,MAAOF,EAAgB,EAEvB,SAACnC,EAAA4C,EAAG,IAAH,CAAO,MAAOF,EACb,SAAA,CAAAzC,EAAC6C,EAAQ,CAAA,KAAK,MAAO,GAAGP,CAAM,CAAA,EAC7BrB,EACC6B,EAAe7B,CAAO,EACpBA,EAECjB,EAAA2C,EAAG,EAAH,CAAK,UAAW,EAAI,GAAGJ,EACrB,UACH,CAAA,EAEA,IAAA,EACN,CAAA,CAAA,CAGN,CACF,EAEAX,EAAuB,YAAc,yBAErC,MAAMC,EAAuBQ,EAAA,KAC3B,CAAC,CACC,aAAAD,EACA,KAAAE,EACA,KAAAC,EACA,QAAAtB,EACA,SAAAC,EACA,SAAAsB,CAAA,IAC2B,CAC3B,MAAMC,EAAmB,CACvB,GAAI,CAAC,QAAS,OAAO,EACrB,KAAM,KACN,EAAG,KACH,QAAS,OACT,cAAe,SACf,eAAgB,SAChB,WAAY,SACZ,IAAK,KACL,QAAS,KACT,UAAW,CAAC,KAAM,SAAS,CAAA,EAG7B,OAAAC,EAAWF,EAAUtB,CAAQ,EAG3BlB,EAAC2C,EAAG,IAAH,CACC,GAAIC,EAAO,IACX,UAAU,kBACT,GAAGT,EAAeC,CAAY,EAC/B,MAAOF,EAAgB,aAAa,EAEpC,SAAAnC,EAAC4C,EAAG,IAAH,CACC,GAAIC,EAAO,IACX,UAAU,4BACT,GAAGT,EAAeC,EAAc,WAAW,EAC5C,MAAOK,EAEP,SAAA,CAAAzC,EAAC6C,EAAQ,CAAA,KAAK,MAAO,GAAGP,CAAM,CAAA,EAC7BrB,EACC6B,EAAe7B,CAAO,EACpBA,EAECjB,EAAA2C,EAAG,EAAH,CAAK,UAAW,EAAI,GAAGJ,EACrB,UACH,CAAA,EAEA,IAAA,CAAA,CACN,CAAA,CAAA,CAGN,CACF,EAEAV,EAAqB,YAAc,uBAEnC,MAAMC,EAA6BO,EAAA,KACjC,CAAC,CACC,aAAAD,EACA,KAAAE,EACA,KAAAC,EACA,QAAAtB,EACA,SAAAC,EACA,SAAAsB,CAAA,IAC2B,CAC3B,MAAMC,EAAmB,CACvB,SAAU,QACV,MAAO,KACP,OAAQ,KACR,OAAQ,SACR,GAAI,CAAC,QAAS,OAAO,EACrB,KAAM,KACN,EAAG,KACH,QAAS,OACT,eAAgB,SAChB,WAAY,SACZ,IAAK,KACL,QAAS,KACT,UAAW,CAAC,MAAO,SAAS,CAAA,EAG9B,OAAAC,EAAWF,EAAUtB,CAAQ,EAG3BnB,EAAC4C,EAAG,IAAH,CACC,GAAIC,EAAO,IACX,UAAU,4BACT,GAAGT,EAAeC,EAAc,WAAW,EAC5C,MAAOK,EAEP,SAAA,CAAAzC,EAAC6C,EAAQ,CAAA,KAAK,KAAM,GAAGP,CAAM,CAAA,EAC5BrB,EACC6B,EAAe7B,CAAO,EACpBA,IAEC0B,EAAG,EAAH,CAAK,SAAS,KAAK,UAAW,EAAI,GAAGJ,EACnC,UACH,CAAA,EAEA,IAAA,CAAA,CAAA,CAGV,CACF,EAEAT,EAA2B,YAAc,6BAElC,MAAMiB,GAAa,IAAsB,CAC9C,KAAM,CAAE,OAAAhE,EAAQ,KAAAC,EAAM,WAAAC,EAAY,OAAAC,GAAW8D,EAAAA,WAAW5E,CAAc,EAEtE,MAAO,CAAE,OAAAW,EAAQ,KAAAC,EAAM,WAAAC,EAAY,OAAAC,CAAO,CAC5C"}