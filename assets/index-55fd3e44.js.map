{"version":3,"file":"index-55fd3e44.js","sources":["../../packages/hooks/use-token/src/index.ts"],"sourcesContent":["import { useColorMode, useTheme, Theme } from '@yamada-ui/core'\nimport {\n  getMemoizedObject as get,\n  isArray,\n  isUndefined,\n} from '@yamada-ui/utils'\n\nexport const useToken = <\n  Y extends string | number = string,\n  M extends keyof Omit<Theme, 'components' | 'colorSchemes'> = keyof Omit<\n    Theme,\n    'components' | 'colorSchemes'\n  >,\n>(\n  name: M,\n  path: Theme[M] | number | undefined,\n) => {\n  const { theme } = useTheme()\n  const { colorMode } = useColorMode()\n\n  if (name === 'layerStyles') name = 'styles.layerStyles' as M\n\n  if (name === 'textStyles') name = 'styles.textStyles' as M\n\n  if (name === 'transitionProperty') name = 'transitions.property' as M\n\n  if (name === 'transitionDuration') name = 'transitions.duration' as M\n\n  if (name === 'transitionEasing') name = 'transitions.easing' as M\n\n  let value = get<Y | [Y, Y] | undefined>(theme, `${name}.${path}`)\n\n  if (!isUndefined(value)) {\n    if (isArray(value)) {\n      const [lightValue, darkValue] = value\n\n      return colorMode === 'light' ? lightValue : darkValue\n    } else {\n      return value\n    }\n  } else {\n    value = get<Y | [Y, Y] | undefined>(theme, `semantics.${name}.${path}`)\n\n    if (isArray(value)) {\n      value = [\n        get<Y>(theme, `${name}.${value[0]}`) ?? value[0],\n        get<Y>(theme, `${name}.${value[1]}`) ?? value[1],\n      ]\n    } else {\n      value = get<Y | undefined>(theme, `${name}.${value}`) ?? value\n    }\n\n    if (isArray(value)) {\n      const [lightValue, darkValue] = value\n\n      value = colorMode === 'light' ? lightValue : darkValue\n\n      if (isArray(value)) {\n        const [lightValue, darkValue] = value as unknown as [Y, Y]\n\n        return colorMode === 'light' ? lightValue : darkValue\n      } else {\n        return value\n      }\n    } else {\n      return value\n    }\n  }\n}\n"],"names":["useToken","name","path","theme","useTheme","colorMode","useColorMode","value","get","isUndefined","isArray","lightValue","darkValue"],"mappings":"gHAOa,MAAAA,EAAW,CAOtBC,EACAC,IACG,CACG,KAAA,CAAE,MAAAC,GAAUC,IACZ,CAAE,UAAAC,GAAcC,IAElBL,IAAS,gBAAsBA,EAAA,sBAE/BA,IAAS,eAAqBA,EAAA,qBAE9BA,IAAS,uBAA6BA,EAAA,wBAEtCA,IAAS,uBAA6BA,EAAA,wBAEtCA,IAAS,qBAA2BA,EAAA,sBAExC,IAAIM,EAAQC,EAA4BL,EAAO,GAAGF,CAAI,IAAIC,CAAI,EAAE,EAE5D,GAACO,EAAYF,CAAK,EAoBhB,GAXJA,EAAQC,EAA4BL,EAAO,aAAaF,CAAI,IAAIC,CAAI,EAAE,EAElEQ,EAAQH,CAAK,EACPA,EAAA,CACNC,EAAOL,EAAO,GAAGF,CAAI,IAAIM,EAAM,CAAC,CAAC,EAAE,GAAKA,EAAM,CAAC,EAC/CC,EAAOL,EAAO,GAAGF,CAAI,IAAIM,EAAM,CAAC,CAAC,EAAE,GAAKA,EAAM,CAAC,CAAA,EAGjDA,EAAQC,EAAmBL,EAAO,GAAGF,CAAI,IAAIM,CAAK,EAAE,GAAKA,EAGvDG,EAAQH,CAAK,EAAG,CACZ,KAAA,CAACI,EAAYC,CAAS,EAAIL,EAI5B,GAFIA,EAAAF,IAAc,QAAUM,EAAaC,EAEzCF,EAAQH,CAAK,EAAG,CACZ,KAAA,CAACI,EAAYC,CAAS,EAAIL,EAEzB,OAAAF,IAAc,QAAUM,EAAaC,CAAA,KAErC,QAAAL,CACT,KAEO,QAAAA,UAhCLG,EAAQH,CAAK,EAAG,CACZ,KAAA,CAACI,EAAYC,CAAS,EAAIL,EAEzB,OAAAF,IAAc,QAAUM,EAAaC,CAAA,KAErC,QAAAL,CA8Bb"}