{"version":3,"file":"loading-provider-3e72270c.js","sources":["../../packages/providers/src/loading-provider.tsx"],"sourcesContent":["import {\n  ui,\n  ThemeConfig,\n  LoadingComponentProps,\n  CSSUIObject,\n  LoadingConfigOptions,\n  HTMLUIProps,\n} from '@yamada-ui/core'\nimport { Loading } from '@yamada-ui/loading'\nimport {\n  AnimatePresence,\n  Motion,\n  motion,\n  MotionVariants,\n} from '@yamada-ui/motion'\nimport { Portal } from '@yamada-ui/portal'\nimport { useTimeout } from '@yamada-ui/use-timeout'\nimport {\n  isValidElement,\n  assignRef,\n  useUpdateEffect,\n  isNumber,\n} from '@yamada-ui/utils'\nimport {\n  createContext,\n  FC,\n  memo,\n  PropsWithChildren,\n  ReactNode,\n  useContext,\n  useMemo,\n  useState,\n  Fragment,\n  useRef,\n  MutableRefObject,\n  createRef,\n  RefObject,\n} from 'react'\nimport { RemoveScroll } from 'react-remove-scroll'\n\ntype LoadingContextProps = {\n  /**\n   * Returns a judgement on whether it is currently loading or not.\n   */\n  isLoading: () => boolean\n  /**\n   * Function to start loading.\n   *\n   * If you specify a `message` etc. as an argument, the loading will change accordingly.\n   */\n  start: (props?: Partial<LoadingProps>) => void\n  /**\n   * Function to finish loading.\n   */\n  finish: () => void\n  /**\n   * Function to update loading.\n   *\n   * If you specify a `message` etc. as an argument, the loading will change accordingly.\n   */\n  update: (props: Partial<LoadingProps>) => void\n  /**\n   * Function to forcefully update the loading state.\n   *\n   * Please be careful, as it will forcefully overwrite the state of the loading component.\n   */\n  force: (state: Partial<LoadingState>) => void\n}\n\ntype LoadingContext = {\n  /**\n   * The screen loading animation.\n   */\n  screen: LoadingContextProps\n  /**\n   * The page loading animation.\n   */\n  page: LoadingContextProps\n  /**\n   * The background loading animation.\n   */\n  background: LoadingContextProps\n  /**\n   * The custom loading animation.\n   *\n   * This cannot be used unless a component is defined at `config/loading/custom.`\n   */\n  custom: LoadingContextProps\n}\n\ntype LoadingProps = {\n  message: ReactNode | undefined\n  duration: number | null\n}\n\ntype LoadingState = {\n  loadingCount: number\n  message: ReactNode | undefined\n  duration: number | null\n}\n\nexport type LoadingProviderProps = PropsWithChildren<ThemeConfig['loading']>\n\nexport const LoadingContext = createContext({} as LoadingContext)\n\ntype Refs = {\n  isLoading: RefObject<LoadingContextProps['isLoading']>\n  start: RefObject<LoadingContextProps['start']>\n  finish: RefObject<LoadingContextProps['finish']>\n  update: RefObject<LoadingContextProps['update']>\n  force: RefObject<LoadingContextProps['force']>\n}\n\ntype ControlRefs = MutableRefObject<Refs>\n\nconst createLoadingRefs = (): Refs => ({\n  isLoading: createRef<LoadingContextProps['isLoading']>(),\n  start: createRef<LoadingContextProps['start']>(),\n  finish: createRef<LoadingContextProps['finish']>(),\n  update: createRef<LoadingContextProps['update']>(),\n  force: createRef<LoadingContextProps['force']>(),\n})\n\nconst createLoadingFunc = (refs: ControlRefs): LoadingContextProps => ({\n  isLoading: () => refs.current.isLoading.current?.() ?? false,\n  start: (props) => refs.current.start.current?.(props),\n  finish: () => refs.current.finish.current?.(),\n  update: (props) => refs.current.update.current?.(props),\n  force: (state) => refs.current.force.current?.(state),\n})\n\nconst incrementCount = (prev: number) => prev + 1\nconst decrementCount = (prev: number) => (prev === 0 ? prev : prev - 1)\n\nexport const LoadingProvider: FC<LoadingProviderProps> = ({\n  screen,\n  page,\n  background,\n  custom,\n  children,\n}) => {\n  const screenRefs = useRef(createLoadingRefs())\n  const pageRefs = useRef(createLoadingRefs())\n  const backgroundRefs = useRef(createLoadingRefs())\n  const customRefs = useRef(createLoadingRefs())\n\n  const screenLoadingFunc = createLoadingFunc(screenRefs)\n  const pageLoadingFunc = createLoadingFunc(pageRefs)\n  const backgroundLoadingFunc = createLoadingFunc(backgroundRefs)\n  const customLoadingFunc = createLoadingFunc(customRefs)\n\n  const value = {\n    screen: screenLoadingFunc,\n    page: pageLoadingFunc,\n    background: backgroundLoadingFunc,\n    custom: customLoadingFunc,\n  }\n\n  return (\n    <LoadingContext.Provider value={value}>\n      {children}\n\n      <Controller\n        controlRefs={screenRefs}\n        {...screen}\n        component={\n          screen?.component ?? ((props) => <ScreenComponent {...props} />)\n        }\n      />\n\n      <Controller\n        controlRefs={pageRefs}\n        {...page}\n        component={page?.component ?? ((props) => <PageComponent {...props} />)}\n      />\n\n      <Controller\n        controlRefs={backgroundRefs}\n        {...background}\n        blockScrollOnMount={background?.blockScrollOnMount ?? false}\n        component={\n          background?.component ??\n          ((props) => <BackgroundComponent {...props} />)\n        }\n      />\n\n      <Controller\n        controlRefs={customRefs}\n        blockScrollOnMount={background?.blockScrollOnMount ?? false}\n        {...custom}\n        component={custom?.component}\n      />\n    </LoadingContext.Provider>\n  )\n}\n\ntype ControllerProps = {\n  controlRefs: ControlRefs\n  render?: (props: LoadingComponentProps) => JSX.Element\n} & LoadingConfigOptions\n\nconst Controller: FC<ControllerProps> = ({\n  controlRefs,\n  appendToParentPortal,\n  containerRef,\n  allowPinchZoom = false,\n  blockScrollOnMount = true,\n  initialState,\n  duration: durationProps = null,\n  icon,\n  text,\n  component,\n}) => {\n  const isLoadingRef = useRef<boolean>(false)\n  const [{ loadingCount, message, duration }, setState] =\n    useState<LoadingState>({\n      loadingCount: initialState ? 1 : 0,\n      message: undefined,\n      duration: durationProps,\n    })\n\n  const { isLoading, start, finish, update, force }: LoadingContextProps =\n    useMemo(\n      () => ({\n        isLoading: () => isLoadingRef.current,\n\n        start: ({ message, duration = durationProps } = {}) => {\n          isLoadingRef.current = true\n\n          setState(({ loadingCount }) => ({\n            loadingCount: incrementCount(loadingCount),\n            message,\n            duration,\n          }))\n        },\n\n        update: (next) => setState((prev) => ({ ...prev, ...next })),\n\n        finish: () => {\n          isLoadingRef.current = false\n\n          setState(({ loadingCount }) => ({\n            loadingCount: decrementCount(loadingCount),\n            message: undefined,\n            duration: durationProps,\n          }))\n        },\n\n        force: ({ loadingCount = 0, message, duration = durationProps }) => {\n          isLoadingRef.current = !!loadingCount\n\n          setState({\n            loadingCount,\n            message,\n            duration,\n          })\n        },\n      }),\n      [durationProps],\n    )\n\n  assignRef(controlRefs.current.isLoading, isLoading)\n  assignRef(controlRefs.current.start, start)\n  assignRef(controlRefs.current.finish, finish)\n  assignRef(controlRefs.current.update, update)\n  assignRef(controlRefs.current.force, force)\n\n  const props: LoadingComponentProps = {\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish: finish,\n  }\n\n  useUpdateEffect(() => {\n    if (initialState || isNumber(durationProps))\n      setState({\n        loadingCount: initialState ? 1 : 0,\n        message: undefined,\n        duration: durationProps,\n      })\n  }, [initialState, durationProps])\n\n  return (\n    <AnimatePresence initial={false}>\n      {loadingCount ? (\n        <Portal\n          appendToParentPortal={appendToParentPortal}\n          containerRef={containerRef}\n        >\n          <RemoveScroll\n            allowPinchZoom={allowPinchZoom}\n            enabled={blockScrollOnMount}\n            forwardProps\n          >\n            <Fragment>\n              <Render component={component} {...props} />\n            </Fragment>\n          </RemoveScroll>\n        </Portal>\n      ) : null}\n    </AnimatePresence>\n  )\n}\n\ntype RenderProps = {\n  component?: (props: LoadingComponentProps) => ReactNode\n} & LoadingComponentProps\n\nconst Render: FC<RenderProps> = ({ component, ...props }) => {\n  if (typeof component === 'function') {\n    return component(props) as JSX.Element\n  } else {\n    return <></>\n  }\n}\n\ntype MessageProps = { message: ReactNode } & HTMLUIProps<'p'>\n\nconst Message: FC<MessageProps> = ({ message, ...rest }) => {\n  return message ? (\n    isValidElement(message) ? (\n      message\n    ) : (\n      <ui.p {...rest}>{message}</ui.p>\n    )\n  ) : null\n}\n\nconst getVariants = (type: 'fade' | 'scaleFade' = 'fade'): MotionVariants => ({\n  initial: {\n    opacity: 0,\n    scale: type === 'scaleFade' ? 0.95 : undefined,\n  },\n  animate: {\n    opacity: 1,\n    scale: type === 'scaleFade' ? 1 : undefined,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 0.2, 1],\n    },\n  },\n  exit: {\n    opacity: 0,\n    scale: type === 'scaleFade' ? 0.95 : undefined,\n    transition: {\n      duration: 0.4,\n      ease: [0.4, 0, 1, 1],\n    },\n  },\n})\n\nconst getOverlayStyle = (\n  type: 'fill' | 'transparent' = 'fill',\n): CSSUIObject => ({\n  position: 'fixed',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  zIndex: 'beerus',\n  bg: type === 'fill' ? ['white', 'black'] : 'blackAlpha.600',\n  w: '100vw',\n  h: '100vh',\n  p: 'md',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n})\n\nconst getMotionProps = (\n  initialState: boolean | undefined,\n  type: 'fade' | 'scaleFade' = 'fade',\n) => ({\n  initial: initialState ? false : 'initial',\n  animate: 'animate',\n  exit: 'exit',\n  variants: getVariants(type),\n})\n\nconst ScreenComponent = memo(\n  ({\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish,\n  }: LoadingComponentProps) => {\n    const css: CSSUIObject = {\n      maxW: 'md',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      gap: 'sm',\n    }\n\n    useTimeout(onFinish, duration)\n\n    return (\n      <Motion\n        className='ui-loading-screen'\n        {...getMotionProps(initialState)}\n        __css={getOverlayStyle()}\n      >\n        <ui.div __css={css}>\n          <Loading size='6xl' {...icon} />\n          <Message message={message} noOfLines={3} {...text} />\n        </ui.div>\n      </Motion>\n    )\n  },\n)\n\nScreenComponent.displayName = 'ScreenComponent'\n\nconst PageComponent = memo(\n  ({\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish,\n  }: LoadingComponentProps) => {\n    const css: CSSUIObject = {\n      bg: ['white', 'black'],\n      maxW: 'md',\n      p: 'md',\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      alignItems: 'center',\n      gap: 'sm',\n      rounded: 'md',\n      boxShadow: ['lg', 'dark-lg'],\n    }\n\n    useTimeout(onFinish, duration)\n\n    return (\n      <Motion\n        className='ui-loading-page'\n        {...getMotionProps(initialState)}\n        __css={getOverlayStyle('transparent')}\n      >\n        <ui.div\n          as={motion.div}\n          className='ui-loading-page-container'\n          {...getMotionProps(initialState, 'scaleFade')}\n          __css={css}\n        >\n          <Loading size='6xl' {...icon} />\n          <Message message={message} noOfLines={3} {...text} />\n        </ui.div>\n      </Motion>\n    )\n  },\n)\n\nPageComponent.displayName = 'PageComponent'\n\nconst BackgroundComponent = memo(\n  ({\n    initialState,\n    icon,\n    text,\n    message,\n    duration,\n    onFinish,\n  }: LoadingComponentProps) => {\n    const css: CSSUIObject = {\n      position: 'fixed',\n      right: 'md',\n      bottom: 'md',\n      zIndex: 'beerus',\n      bg: ['white', 'black'],\n      maxW: 'sm',\n      p: 'sm',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      gap: 'sm',\n      rounded: 'md',\n      boxShadow: ['3xl', 'dark-lg'],\n    }\n\n    useTimeout(onFinish, duration)\n\n    return (\n      <Motion\n        className='ui-loading-page-container'\n        {...getMotionProps(initialState, 'scaleFade')}\n        __css={css}\n      >\n        <Loading size='xl' {...icon} />\n        <Message message={message} fontSize='sm' noOfLines={1} {...text} />\n      </Motion>\n    )\n  },\n)\n\nBackgroundComponent.displayName = 'BackgroundComponent'\n\nexport const useLoading = (): LoadingContext => {\n  const { screen, page, background, custom } = useContext(LoadingContext)\n\n  return { screen, page, background, custom }\n}\n"],"names":["LoadingContext","createContext","createLoadingRefs","createRef","createLoadingFunc","refs","_b","_a","props","state","incrementCount","prev","decrementCount","LoadingProvider","screen","page","background","custom","children","screenRefs","useRef","pageRefs","backgroundRefs","customRefs","screenLoadingFunc","pageLoadingFunc","backgroundLoadingFunc","customLoadingFunc","value","jsxs","jsx","Controller","ScreenComponent","PageComponent","BackgroundComponent","controlRefs","appendToParentPortal","containerRef","allowPinchZoom","blockScrollOnMount","initialState","durationProps","icon","text","component","isLoadingRef","loadingCount","message","duration","setState","useState","isLoading","start","finish","update","force","useMemo","next","assignRef","useUpdateEffect","isNumber","AnimatePresence","Portal","RemoveScroll","Fragment","Render","Message","rest","isValidElement","ui","getVariants","type","getOverlayStyle","getMotionProps","memo","onFinish","css","useTimeout","Motion","Loading","motion","useLoading","useContext"],"mappings":"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"}