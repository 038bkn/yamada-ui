{"version":3,"file":"icon-button-f0e45f77.js","sources":["../../packages/components/button/src/icon-button.tsx"],"sourcesContent":["import { forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { ReactElement } from \"react\"\nimport { Button, ButtonProps } from \"./button\"\n\ntype IconButtonOptions = {\n  /**\n   * The icon to be used in the button.\n   */\n  icon?: ReactElement\n  /**\n   * If `true`, the button will be perfectly round. Else, it'll be slightly round.\n   *\n   * @default false\n   */\n  isRounded?: boolean\n}\n\nexport type IconButtonProps = Omit<\n  ButtonProps,\n  \"leftIcon\" | \"rightIcon\" | \"loadingIcon\" | \"loadingText\" | \"loadingPlacement\"\n> &\n  IconButtonOptions\n\nexport const IconButton = forwardRef<IconButtonProps, \"button\">(\n  ({ icon, isRounded, children, className, ...rest }, ref) => {\n    return (\n      <Button\n        className={cx(\"ui-icon-button\", className)}\n        ref={ref}\n        p={0}\n        {...(isRounded ? { rounded: \"full\" } : {})}\n        {...rest}\n      >\n        {icon || children}\n      </Button>\n    )\n  },\n)\n"],"names":["IconButton","forwardRef","icon","isRounded","children","className","rest","ref","jsx","Button","cx"],"mappings":"+KAwBO,MAAMA,EAAaC,EACxB,CAAC,CAAE,KAAAC,EAAM,UAAAC,EAAW,SAAAC,EAAU,UAAAC,EAAW,GAAGC,CAAK,EAAGC,IAEhDC,EAACC,EAAA,CACC,UAAWC,EAAG,iBAAkBL,CAAS,EACzC,IAAAE,EACA,EAAG,EACF,GAAIJ,EAAY,CAAE,QAAS,QAAW,CAAC,EACvC,GAAGG,EAEH,SAAQJ,GAAAE,CAAA,CAAA,CAIjB"}