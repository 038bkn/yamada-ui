{"version":3,"file":"avatar-10cfede2.js","sources":["../../packages/components/avatar/src/avatar-icon.tsx","../../packages/components/avatar/src/avatar-name.tsx","../../packages/components/avatar/src/avatar.tsx"],"sourcesContent":["import { Icon, IconProps } from '@yamada-ui/icon'\nimport { FC } from 'react'\n\nexport const AvatarIcon: FC<IconProps> = (props) => (\n  <Icon\n    viewBox='0 0 128 128'\n    color={['white', 'black']}\n    width='100%'\n    height='100%'\n    className='ui-avatar-icon'\n    {...props}\n  >\n    <path\n      fill='currentColor'\n      d='M103,102.1388 C93.094,111.92 79.3504,118 64.1638,118 C48.8056,118 34.9294,111.768 25,101.7892 L25,95.2 C25,86.8096 31.981,80 40.6,80 L87.4,80 C96.019,80 103,86.8096 103,95.2 L103,102.1388 Z'\n    />\n    <path\n      fill='currentColor'\n      d='M63.9961647,24 C51.2938136,24 41,34.2938136 41,46.9961647 C41,59.7061864 51.2938136,70 63.9961647,70 C76.6985159,70 87,59.7061864 87,46.9961647 C87,34.2938136 76.6985159,24 63.9961647,24'\n    />\n  </Icon>\n)\n","import { ui, HTMLUIProps, CSSUIObject } from '@yamada-ui/core'\nimport { FC } from 'react'\nimport { AvatarProps, useAvatarContext } from './avatar'\n\nconst defaultFormat = (name: string) => {\n  const names = name.split(' ')\n  const firstName = names[0] ?? ''\n  const lastName = names.length > 1 ? names[names.length - 1] : ''\n\n  return firstName && lastName\n    ? `${firstName.charAt(0)}${lastName.charAt(0)}`\n    : firstName.charAt(0)\n}\n\nexport type AvatarNameProps = HTMLUIProps<'div'> &\n  Pick<AvatarProps, 'name' | 'format'>\n\nexport const AvatarName: FC<AvatarNameProps> = ({\n  name,\n  format = defaultFormat,\n  ...rest\n}) => {\n  const styles = useAvatarContext()\n\n  const css: CSSUIObject = { ...styles.name }\n\n  return (\n    <ui.div className='ui-avatar-name' role='img' __css={css} {...rest}>\n      {name ? format(name) : null}\n    </ui.div>\n  )\n}\n","import {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n  CSSUIObject,\n  HTMLUIProps,\n  ThemeProps,\n} from '@yamada-ui/core'\nimport { ImageProps, useImage } from '@yamada-ui/image'\nimport { createContext, cx, dataAttr, handlerAll } from '@yamada-ui/utils'\nimport {\n  cloneElement,\n  FC,\n  HTMLAttributeReferrerPolicy,\n  ReactElement,\n  useState,\n} from 'react'\nimport { AvatarIcon } from './avatar-icon'\nimport { AvatarName } from './avatar-name'\n\ntype AvatarContext = Record<string, CSSUIObject>\n\nexport const [AvatarProvider, useAvatarContext] = createContext<AvatarContext>({\n  strict: false,\n  name: 'AvatarContext',\n})\n\ntype AvatarOptions = {\n  /**\n   * The name of the person in the avatar.\n   *\n   * - If `src` has loaded, the name will be used as the `alt` attribute of the `img`\n   * - If `src` is not loaded, the name will be used to create the initials\n   */\n  name?: string\n  /**\n   * The image url of the avatar.\n   */\n  src?: ImageProps['src']\n  /**\n   * List of sources to use for different screen resolutions.\n   */\n  srcSet?: ImageProps['srcSet']\n  /**\n   * Defines loading strategy.\n   */\n  loading?: ImageProps['loading']\n  /**\n   * If `true`, opt out of the avatar's `fallback` logic and renders the `img` at all times.\n   *\n   * @default false\n   */\n  ignoreFallback?: ImageProps['ignoreFallback']\n  /**\n   * The avatar icon to use.\n   */\n  icon?: ReactElement\n  /**\n   * Function called when image failed to load.\n   */\n  onError?: () => void\n  /**\n   * Function to get the initials to display.\n   */\n  format?: (name: string) => string\n  /**\n   * Defining which referrer is sent when fetching the resource.\n   */\n  referrerPolicy?: HTMLAttributeReferrerPolicy\n}\n\nexport type AvatarProps = HTMLUIProps<'span'> &\n  ThemeProps<'Avatar'> &\n  AvatarOptions\n\nexport const Avatar = forwardRef<AvatarProps, 'span'>((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle('Avatar', props)\n  const {\n    className,\n    src,\n    srcSet,\n    name,\n    loading,\n    icon,\n    ignoreFallback,\n    borderRadius = 'full',\n    rounded = 'full',\n    onError,\n    onLoad,\n    format,\n    children,\n    ...rest\n  } = omitThemeProps(mergedProps)\n\n  const [isLoading, setIsLoading] = useState<boolean>(true)\n\n  const css: CSSUIObject = {\n    position: 'relative',\n    display: 'inline-flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexShrink: 0,\n    textAlign: 'center',\n    textTransform: 'uppercase',\n    fontWeight: 'medium',\n    ...styles.container,\n  }\n\n  return (\n    <AvatarProvider value={styles}>\n      <ui.span\n        ref={ref}\n        className={cx('ui-avatar', className)}\n        data-loading={dataAttr(isLoading)}\n        borderRadius={borderRadius}\n        rounded={rounded}\n        __css={css}\n        {...rest}\n      >\n        <AvatarImage\n          src={src}\n          srcSet={srcSet}\n          loading={loading}\n          borderRadius={borderRadius}\n          rounded={rounded}\n          onLoad={handlerAll(onLoad, () => setIsLoading(false))}\n          onError={onError}\n          format={format}\n          name={name}\n          icon={icon}\n          ignoreFallback={ignoreFallback}\n        />\n        {children}\n      </ui.span>\n    </AvatarProvider>\n  )\n})\n\ntype AvatarImageProps = ImageProps &\n  Pick<AvatarProps, 'name' | 'format' | 'icon' | 'ignoreFallback'>\n\nconst AvatarImage: FC<AvatarImageProps> = ({\n  src,\n  srcSet,\n  onError,\n  onLoad,\n  format,\n  borderRadius,\n  rounded,\n  name,\n  loading,\n  icon = <AvatarIcon />,\n  ignoreFallback,\n  crossOrigin,\n  referrerPolicy,\n}) => {\n  const status = useImage({ src, onError, crossOrigin, ignoreFallback })\n\n  const isLoaded = status === 'loaded'\n\n  const isFallback = !src || !isLoaded\n\n  if (isFallback)\n    return name ? (\n      <AvatarName name={name} format={format} />\n    ) : (\n      cloneElement(icon, { role: 'img' })\n    )\n\n  const css: CSSUIObject = {\n    width: '100%',\n    height: '100%',\n    objectFit: 'cover',\n  }\n\n  return (\n    <ui.img\n      className='ui-avatar-image'\n      src={src}\n      srcSet={srcSet}\n      alt={name}\n      loading={loading}\n      onLoad={onLoad}\n      referrerPolicy={referrerPolicy}\n      borderRadius={borderRadius}\n      rounded={rounded}\n      __css={css}\n    />\n  )\n}\n"],"names":["AvatarIcon","props","jsxs","Icon","jsx","defaultFormat","name","names","firstName","lastName","AvatarName","format","rest","css","useAvatarContext","ui","AvatarProvider","createContext","Avatar","forwardRef","ref","styles","mergedProps","useMultiComponentStyle","className","src","srcSet","loading","icon","ignoreFallback","borderRadius","rounded","onError","onLoad","children","omitThemeProps","isLoading","setIsLoading","useState","cx","dataAttr","AvatarImage","handlerAll","crossOrigin","referrerPolicy","isLoaded","useImage","cloneElement"],"mappings":"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"}