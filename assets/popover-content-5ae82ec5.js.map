{"version":3,"file":"popover-content-5ae82ec5.js","sources":["../../packages/components/popover/src/popover.tsx","../../packages/components/popover/src/popover-trigger.tsx","../../packages/components/popover/src/popover-close-button.tsx","../../packages/components/popover/src/popover-content.tsx"],"sourcesContent":["import {\n  useMultiComponentStyle,\n  omitThemeProps,\n  CSSUIObject,\n  ThemeProps,\n} from '@yamada-ui/core'\nimport { MotionTransitionProperties } from '@yamada-ui/motion'\nimport { useAnimationObserver } from '@yamada-ui/use-animation'\nimport {\n  useDisclosure,\n  useLazyDisclosure,\n  LazyMode,\n} from '@yamada-ui/use-disclosure'\nimport {\n  useFocusOnHide,\n  useFocusOnShow,\n  useFocusOnPointerDown,\n} from '@yamada-ui/use-focus'\nimport { usePopper, UsePopperProps } from '@yamada-ui/use-popper'\nimport {\n  createContext,\n  DOMAttributes,\n  getEventRelatedTarget,\n  handlerAll,\n  isContains,\n  mergeRefs,\n  PropGetter,\n  runIfFunc,\n} from '@yamada-ui/utils'\nimport {\n  FC,\n  PropsWithChildren,\n  RefObject,\n  useCallback,\n  useEffect,\n  useRef,\n} from 'react'\n\ntype PopoverOptions = {\n  /**\n   * If `true`, the popover will be opened.\n   */\n  isOpen?: boolean\n  /**\n   * If `true`, the popover will be initially opened.\n   */\n  defaultIsOpen?: boolean\n  /**\n   * Callback fired when the popover opens.\n   */\n  onOpen?: () => void\n  /**\n   * Callback fired when the popover closes.\n   */\n  onClose?: () => void\n  /**\n   * The `ref` of the element that should receive focus when the popover opens.\n   */\n  initialFocusRef?: RefObject<{ focus(): void }>\n  /**\n   * If `true`, focus will be returned to the element that triggers the popover when it closes.\n   *\n   * @default true\n   */\n  restoreFocus?: boolean\n  /**\n   * If `true`, focus will be transferred to the first interactive element when the popover opens.\n   *\n   * @default true\n   */\n  autoFocus?: boolean\n  /**\n   * If `true`, the popover will close when you blur out it by clicking outside or tabbing out.\n   *\n   * @default true\n   */\n  closeOnBlur?: boolean\n  /**\n   * If `true`, the popover will close when you hit the `Esc` key.\n   *\n   * @default true\n   */\n  closeOnEsc?: boolean\n  /**\n   * If `true`, display the popover close button.\n   *\n   * @default true\n   */\n  closeOnButton?: boolean\n  /**\n   * The interaction that triggers the popover.\n   *\n   * - `hover`: means the popover will open when you hover with mouse or focus with keyboard on the popover trigger.\n   * - `click`: means the popover will open on click or press `Enter` to `Space` on keyboard.\n   *\n   * @default 'click'\n   */\n  trigger?: 'click' | 'hover' | 'never'\n  /**\n   * The number of delay time to open.\n   *\n   * @default 200\n   */\n  openDelay?: number\n  /**\n   * The number of delay time to close.\n   *\n   * @default 200\n   */\n  closeDelay?: number\n  /**\n   * If `true`, the PopoverContent rendering will be deferred until the popover is open.\n   *\n   * @default false\n   */\n  isLazy?: boolean\n  /**\n   * The lazy behavior of popover's content when not visible. Only works when `isLazy={true}`\n   *\n   * - `unmount`: The popover's content is always unmounted when not open.\n   * - `keepMounted`: The popover's content initially unmounted, but stays mounted when popover is open.\n   *\n   * @default 'unmount'\n   */\n  lazyBehavior?: LazyMode\n  /**\n   * The animation of the popover.\n   *\n   * @default 'scale'\n   */\n  animation?: 'scale' | 'top' | 'right' | 'left' | 'bottom' | 'none'\n  /**\n   * The animation duration.\n   */\n  duration?: MotionTransitionProperties['duration']\n}\n\nexport type PopoverProps = ThemeProps<'Popover'> &\n  Omit<UsePopperProps, 'enabled'> &\n  PropsWithChildren<PopoverOptions>\n\ntype PopoverContext = Pick<\n  PopoverOptions,\n  'isOpen' | 'onClose' | 'closeOnButton' | 'animation' | 'duration'\n> & {\n  onAnimationComplete: () => void\n  forceUpdate: () => void | undefined\n  getTriggerProps: PropGetter\n  getAnchorProps: PropGetter\n  getPopperProps: PropGetter\n  getPopoverProps: PropGetter\n  styles: Record<string, CSSUIObject>\n}\n\nconst [PopoverProvider, usePopover] = createContext<PopoverContext>({\n  strict: false,\n  name: 'PopoverContext',\n})\n\nexport { usePopover }\n\nexport const Popover: FC<PopoverProps> = (props) => {\n  const [styles, mergedProps] = useMultiComponentStyle('Popover', props)\n  const {\n    children,\n    initialFocusRef,\n    restoreFocus = true,\n    autoFocus = true,\n    closeOnBlur = true,\n    closeOnEsc = true,\n    closeOnButton = true,\n    trigger = 'click',\n    openDelay = 200,\n    closeDelay = 200,\n    isLazy,\n    lazyBehavior = 'unmount',\n    animation = 'scale',\n    duration,\n    ...rest\n  } = omitThemeProps(mergedProps)\n\n  const { isOpen, onOpen, onClose, onToggle } = useDisclosure(mergedProps)\n\n  const anchorRef = useRef<HTMLElement>(null)\n  const triggerRef = useRef<HTMLElement>(null)\n  const popoverRef = useRef<HTMLElement>(null)\n\n  const { present, onAnimationComplete } = useAnimationObserver({\n    isOpen,\n    ref: popoverRef,\n  })\n\n  const openTimeout = useRef<number | undefined>(undefined)\n  const closeTimeout = useRef<number | undefined>(undefined)\n\n  const isHoveringRef = useRef(false)\n\n  const hasBeenOpened = useRef(false)\n\n  if (isOpen) hasBeenOpened.current = true\n\n  const { referenceRef, getPopperProps, forceUpdate, transformOrigin } =\n    usePopper({\n      ...rest,\n      enabled: isOpen,\n    })\n\n  useEffect(() => {\n    return () => {\n      if (openTimeout.current) clearTimeout(openTimeout.current)\n\n      if (closeTimeout.current) clearTimeout(closeTimeout.current)\n    }\n  }, [])\n\n  useFocusOnPointerDown({\n    enabled: isOpen,\n    ref: triggerRef,\n  })\n\n  useFocusOnHide(popoverRef, {\n    focusRef: triggerRef,\n    visible: isOpen,\n    shouldFocus: restoreFocus && trigger === 'click',\n  })\n\n  useFocusOnShow(popoverRef, {\n    focusRef: initialFocusRef,\n    visible: isOpen,\n    shouldFocus: autoFocus && trigger === 'click',\n  })\n\n  const shouldRenderChildren = useLazyDisclosure({\n    wasSelected: hasBeenOpened.current,\n    enabled: isLazy,\n    mode: lazyBehavior,\n    isSelected: present,\n  })\n\n  const getPopoverProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const popoverProps: DOMAttributes = {\n        ...props,\n        style: {\n          ...props.style,\n          transformOrigin,\n        },\n        ref: mergeRefs(popoverRef, ref),\n        children: shouldRenderChildren ? props.children : null,\n        tabIndex: -1,\n        onKeyDown: handlerAll(props.onKeyDown, (ev) => {\n          if (closeOnEsc && ev.key === 'Escape') onClose()\n        }),\n        onBlur: handlerAll(props.onBlur, (ev) => {\n          const relatedTarget = getEventRelatedTarget(ev)\n          const targetIsPopover = isContains(popoverRef.current, relatedTarget)\n          const targetIsTrigger = isContains(triggerRef.current, relatedTarget)\n\n          const isValidBlur = !targetIsPopover && !targetIsTrigger\n\n          if (isOpen && closeOnBlur && isValidBlur) onClose()\n        }),\n      }\n\n      if (trigger === 'hover') {\n        popoverProps.onMouseEnter = handlerAll(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n        })\n\n        popoverProps.onMouseLeave = handlerAll(props.onMouseLeave, (ev) => {\n          if (ev.nativeEvent.relatedTarget === null) return\n\n          isHoveringRef.current = false\n          setTimeout(onClose, closeDelay)\n        })\n      }\n\n      return popoverProps\n    },\n    [\n      closeDelay,\n      closeOnBlur,\n      closeOnEsc,\n      isOpen,\n      onClose,\n      shouldRenderChildren,\n      transformOrigin,\n      trigger,\n    ],\n  )\n\n  const maybeReferenceRef = useCallback(\n    (node: Element) => {\n      if (anchorRef.current == null) referenceRef(node)\n    },\n    [referenceRef],\n  )\n\n  const getTriggerProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const triggerProps: DOMAttributes = {\n        ...props,\n        ref: mergeRefs(triggerRef, ref, maybeReferenceRef),\n      }\n\n      if (trigger === 'click') {\n        triggerProps.onClick = handlerAll(props.onClick, onToggle)\n        triggerProps.onBlur = handlerAll(props.onBlur, (ev) => {\n          const relatedTarget = getEventRelatedTarget(ev)\n          const isValidBlur = !isContains(popoverRef.current, relatedTarget)\n\n          if (isOpen && closeOnBlur && isValidBlur) onClose()\n        })\n      }\n\n      if (trigger === 'hover') {\n        triggerProps.onFocus = handlerAll(props.onFocus, () => {\n          if (openTimeout.current === undefined) onOpen()\n        })\n\n        triggerProps.onBlur = handlerAll(props.onBlur, (ev) => {\n          const relatedTarget = getEventRelatedTarget(ev)\n          const isValidBlur = !isContains(popoverRef.current, relatedTarget)\n\n          if (isOpen && closeOnBlur && isValidBlur) onClose()\n        })\n\n        triggerProps.onKeyDown = handlerAll(props.onKeyDown, (ev) => {\n          if (ev.key === 'Escape') onClose()\n        })\n\n        triggerProps.onMouseEnter = handlerAll(props.onMouseEnter, () => {\n          isHoveringRef.current = true\n          openTimeout.current = window.setTimeout(onOpen, openDelay)\n        })\n\n        triggerProps.onMouseLeave = handlerAll(props.onMouseLeave, () => {\n          isHoveringRef.current = false\n\n          if (openTimeout.current) {\n            clearTimeout(openTimeout.current)\n            openTimeout.current = undefined\n          }\n\n          closeTimeout.current = window.setTimeout(() => {\n            if (isHoveringRef.current === false) onClose()\n          }, closeDelay)\n        })\n      }\n\n      return triggerProps\n    },\n    [\n      closeDelay,\n      closeOnBlur,\n      isOpen,\n      maybeReferenceRef,\n      onClose,\n      onOpen,\n      onToggle,\n      openDelay,\n      trigger,\n    ],\n  )\n\n  const getAnchorProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      return {\n        ...props,\n        ref: mergeRefs(ref, anchorRef, referenceRef),\n      }\n    },\n    [anchorRef, referenceRef],\n  )\n\n  return (\n    <PopoverProvider\n      value={{\n        isOpen,\n        onClose,\n        closeOnButton,\n        onAnimationComplete,\n        forceUpdate,\n        getTriggerProps,\n        getAnchorProps,\n        getPopperProps,\n        getPopoverProps,\n        animation,\n        duration,\n        styles,\n      }}\n    >\n      {runIfFunc(children, {\n        isOpen,\n        onClose,\n        forceUpdate,\n      })}\n    </PopoverProvider>\n  )\n}\n","import {\n  Children,\n  cloneElement,\n  FC,\n  PropsWithChildren,\n  ReactElement,\n  RefObject,\n} from 'react'\nimport { usePopover } from './popover'\n\nexport const PopoverTrigger: FC<PropsWithChildren<{}>> = ({ children }) => {\n  const child = Children.only(children) as ReactElement & {\n    ref: RefObject<any>\n  }\n  const { getTriggerProps } = usePopover()\n\n  return cloneElement(child, getTriggerProps(child.props, child.ref))\n}\n","import { CloseButton, CloseButtonProps } from '@yamada-ui/close-button'\nimport { forwardRef, CSSUIObject } from '@yamada-ui/core'\nimport { cx, handlerAll } from '@yamada-ui/utils'\nimport { usePopover } from './popover'\n\nexport type PopoverCloseButtonProps = CloseButtonProps\n\nexport const PopoverCloseButton = forwardRef<PopoverCloseButtonProps, 'button'>(\n  ({ onClick, ...rest }, ref) => {\n    const { styles, onClose } = usePopover()\n\n    const css: CSSUIObject = {\n      position: 'absolute',\n      ...styles.closeButton,\n    }\n\n    return (\n      <CloseButton\n        ref={ref}\n        className={cx('ui-popover-close-button')}\n        __css={css}\n        onClick={handlerAll(onClick, (ev) => {\n          ev.stopPropagation()\n          onClose?.()\n        })}\n        size='sm'\n        {...rest}\n      />\n    )\n  },\n)\n","import {\n  ui,\n  forwardRef,\n  HTMLUIProps,\n  CSSUIObject,\n  CSSUIProps,\n} from '@yamada-ui/core'\nimport { motion, HTMLMotionProps } from '@yamada-ui/motion'\nimport { scaleFadeProps, slideFadeProps } from '@yamada-ui/transitions'\nimport {\n  cx,\n  DOMAttributes,\n  findChildren,\n  funcAll,\n  getValidChildren,\n  omitObject,\n} from '@yamada-ui/utils'\nimport { ReactNode, RefAttributes } from 'react'\nimport { usePopover } from './popover'\nimport { PopoverProps, PopoverCloseButton } from '.'\n\nexport type PopoverContentProps = Omit<\n  HTMLUIProps<'section'>,\n  keyof Omit<HTMLMotionProps<'section'>, 'children'>\n> &\n  Omit<\n    HTMLMotionProps<'section'>,\n    | 'color'\n    | 'style'\n    | 'onDrag'\n    | 'onDragEnd'\n    | 'onDragStart'\n    | 'onAnimationStart'\n    | 'variants'\n    | 'transition'\n  >\n\nconst getPopoverContentProps = (\n  animation: PopoverProps['animation'] = 'scale',\n  duration?: PopoverProps['duration'],\n) => {\n  const custom = {\n    reverse: true,\n    duration,\n    enter: { visibility: 'visible' },\n    transitionEnd: { exit: { visibility: 'hidden' } },\n  }\n\n  switch (animation) {\n    case 'scale':\n      return {\n        ...scaleFadeProps,\n        custom: { ...custom, scale: 0.95 },\n      }\n    case 'top':\n      return {\n        ...slideFadeProps,\n        custom: { ...custom, offsetX: 0, offsetY: -16 },\n      }\n    case 'right':\n      return {\n        ...slideFadeProps,\n        custom: { ...custom, offsetX: 16, offsetY: 0 },\n      }\n    case 'left':\n      return {\n        ...slideFadeProps,\n        custom: { ...custom, offsetX: -16, offsetY: 0 },\n      }\n    case 'bottom':\n      return {\n        ...slideFadeProps,\n        custom: { ...custom, offsetX: 0, offsetY: 16 },\n      }\n  }\n}\n\nexport const PopoverContent = forwardRef<PopoverContentProps, 'section'>(\n  (\n    {\n      as = 'section',\n      className,\n      children,\n      w,\n      width,\n      minW,\n      minWidth,\n      zIndex,\n      __css,\n      ...rest\n    },\n    ref,\n  ) => {\n    const {\n      isOpen,\n      closeOnButton,\n      getPopperProps,\n      getPopoverProps,\n      onAnimationComplete,\n      animation,\n      duration,\n      styles,\n    } = usePopover()\n\n    const validChildren = getValidChildren(children)\n    const [customPopoverCloseButton, ...cloneChildren] = findChildren(\n      validChildren,\n      PopoverCloseButton,\n    )\n\n    const resolvedChildren = (): ReactNode => {\n      return (\n        <>\n          {customPopoverCloseButton ??\n            (closeOnButton ? <PopoverCloseButton /> : null)}\n\n          {cloneChildren}\n        </>\n      )\n    }\n\n    const css: CSSUIObject = {\n      position: 'relative',\n      w: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      outline: 0,\n      ...omitObject(__css ?? styles.container, ['zIndex']),\n    }\n\n    w =\n      w ??\n      width ??\n      ((styles.container?.w ?? styles.container?.width) as CSSUIProps['w'])\n    minW =\n      minW ??\n      minWidth ??\n      ((styles.container?.minW ??\n        styles.container?.minWidth) as CSSUIProps['minW'])\n    zIndex = (zIndex ?? styles.container?.zIndex) as CSSUIProps['zIndex']\n\n    return (\n      <ui.div\n        {...getPopperProps({\n          style: { visibility: isOpen ? 'visible' : 'hidden' },\n        })}\n        className='ui-popover'\n        w={w}\n        minW={minW}\n        zIndex={zIndex}\n      >\n        <ui.section\n          as={motion[as as keyof typeof motion]}\n          className={cx('ui-popover-content', className)}\n          {...(animation !== 'none'\n            ? getPopoverContentProps(animation, duration)\n            : {})}\n          {...(getPopoverProps(\n            {\n              ...rest,\n              children: resolvedChildren(),\n            },\n            ref,\n          ) as Omit<DOMAttributes & RefAttributes<any>, 'onDrag'>)}\n          initial='exit'\n          animate={isOpen ? 'enter' : 'exit'}\n          exit='exit'\n          onAnimationComplete={funcAll(\n            onAnimationComplete,\n            rest.onAnimationComplete,\n          )}\n          __css={css}\n        />\n      </ui.div>\n    )\n  },\n)\n"],"names":["PopoverProvider","usePopover","createContext","Popover","props","styles","mergedProps","useMultiComponentStyle","children","initialFocusRef","restoreFocus","autoFocus","closeOnBlur","closeOnEsc","closeOnButton","trigger","openDelay","closeDelay","isLazy","lazyBehavior","animation","duration","rest","omitThemeProps","isOpen","onOpen","onClose","onToggle","useDisclosure","anchorRef","useRef","triggerRef","popoverRef","present","onAnimationComplete","useAnimationObserver","openTimeout","closeTimeout","isHoveringRef","hasBeenOpened","referenceRef","getPopperProps","forceUpdate","transformOrigin","usePopper","useEffect","useFocusOnPointerDown","useFocusOnHide","useFocusOnShow","shouldRenderChildren","useLazyDisclosure","getPopoverProps","useCallback","ref","popoverProps","mergeRefs","handlerAll","ev","relatedTarget","getEventRelatedTarget","targetIsPopover","isContains","targetIsTrigger","maybeReferenceRef","node","getTriggerProps","triggerProps","isValidBlur","getAnchorProps","jsx","PopoverTrigger","child","Children","cloneElement","PopoverCloseButton","forwardRef","onClick","css","CloseButton","cx","getPopoverContentProps","custom","scaleFadeProps","slideFadeProps","PopoverContent","as","className","w","width","minW","minWidth","zIndex","__css","validChildren","getValidChildren","customPopoverCloseButton","cloneChildren","findChildren","resolvedChildren","jsxs","Fragment","omitObject","_a","_b","_c","_d","_e","ui","motion","funcAll"],"mappings":"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"}