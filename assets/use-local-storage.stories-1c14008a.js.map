{"version":3,"file":"use-local-storage.stories-1c14008a.js","sources":["../../packages/hooks/use-local-storage/src/index.ts"],"sourcesContent":["import { useWindowEvent } from '@yamada-ui/use-window-event'\nimport { isFunction } from '@yamada-ui/utils'\nimport { useState, useCallback, useEffect } from 'react'\n\nexport type StorageType = 'localStorage' | 'sessionStorage'\n\nexport type StorageProps<T> = {\n  key: string\n  defaultValue?: T\n  getInitialValueInEffect?: boolean\n  serialize?: (value: T) => string\n  deserialize?: (value: string | undefined) => T\n}\n\nconst serializeJSON = <T>(value: T, name: string) => {\n  try {\n    return JSON.stringify(value)\n  } catch (error) {\n    throw new Error(`useLocalStorage ${name}: Failed to serialize the value`)\n  }\n}\n\nconst deserializeJSON = (value: string | undefined) => {\n  if (!value) return value\n\n  try {\n    return JSON.parse(value)\n  } catch {\n    return value\n  }\n}\n\nexport const createStorage = <T>(type: StorageType, name: string) => {\n  const eventName =\n    type === 'localStorage' ? 'ui-local-storage' : 'ui-session-storage'\n\n  return ({\n    key,\n    defaultValue = undefined,\n    getInitialValueInEffect = true,\n    deserialize = deserializeJSON,\n    serialize = (value: T) => serializeJSON(value, name),\n  }: StorageProps<T>) => {\n    const readStorageValue = useCallback(\n      (skipStorage?: boolean): T => {\n        if (\n          typeof window === 'undefined' ||\n          !(type in window) ||\n          window[type] === null ||\n          skipStorage\n        ) {\n          return (defaultValue ?? '') as T\n        }\n\n        const storageValue = window[type].getItem(key)\n\n        return storageValue !== null\n          ? deserialize(storageValue)\n          : ((defaultValue ?? '') as T)\n      },\n      [key, deserialize, defaultValue],\n    )\n\n    const [value, setValue] = useState<T>(\n      readStorageValue(getInitialValueInEffect),\n    )\n\n    const setStorageValue = useCallback(\n      (valOrFunc: T | ((prevState: T) => T)) => {\n        if (isFunction(valOrFunc)) {\n          setValue((current) => {\n            const result = valOrFunc(current)\n\n            window[type].setItem(key, serialize(result))\n            window.dispatchEvent(\n              new CustomEvent(eventName, {\n                detail: { key, value: valOrFunc(current) },\n              }),\n            )\n\n            return result\n          })\n        } else {\n          window[type].setItem(key, serialize(valOrFunc))\n          window.dispatchEvent(\n            new CustomEvent(eventName, { detail: { key, value: valOrFunc } }),\n          )\n\n          setValue(valOrFunc)\n        }\n      },\n      [key, serialize],\n    )\n\n    const removeStorageValue = useCallback(() => {\n      window[type].removeItem(key)\n      setValue(defaultValue as T)\n    }, [defaultValue, key])\n\n    useWindowEvent('storage', (ev) => {\n      if (ev.storageArea === window[type] && ev.key === key)\n        setValue(deserialize(ev.newValue ?? undefined))\n    })\n\n    useWindowEvent(eventName, (ev) => {\n      if (ev.detail.key === key) setValue(ev.detail.value)\n    })\n\n    useEffect(() => {\n      if (defaultValue !== undefined && value === undefined)\n        setStorageValue(defaultValue)\n    }, [defaultValue, value, setStorageValue])\n\n    useEffect(() => {\n      if (getInitialValueInEffect) setValue(readStorageValue())\n    }, [getInitialValueInEffect, readStorageValue])\n\n    return [\n      value === undefined ? defaultValue : value,\n      setStorageValue,\n      removeStorageValue,\n    ] as const\n  }\n}\n\nexport const useLocalStorage = <T = string>(props: StorageProps<T>) =>\n  createStorage<T>('localStorage', 'use-local-storage')(props)\n"],"names":["serializeJSON","value","name","deserializeJSON","createStorage","type","eventName","key","defaultValue","getInitialValueInEffect","deserialize","serialize","readStorageValue","useCallback","skipStorage","storageValue","setValue","useState","setStorageValue","valOrFunc","isFunction","current","result","removeStorageValue","useWindowEvent","ev","useEffect","useLocalStorage","props"],"mappings":"knBAcA,MAAMA,EAAgB,CAAIC,EAAUC,IAAiB,CAC/C,GAAA,CACK,OAAA,KAAK,UAAUD,CAAK,OACb,CACd,MAAM,IAAI,MAAM,mBAAmBC,CAAI,iCAAiC,CAC1E,CACF,EAEMC,EAAmBF,GAA8B,CACrD,GAAI,CAACA,EAAc,OAAAA,EAEf,GAAA,CACK,OAAA,KAAK,MAAMA,CAAK,CAAA,MACjB,CACC,OAAAA,CACT,CACF,EAEaG,EAAgB,CAAIC,EAAmBH,IAAiB,CAC7D,MAAAI,EACJD,IAAS,eAAiB,mBAAqB,qBAEjD,MAAO,CAAC,CACN,IAAAE,EACA,aAAAC,EAAe,OACf,wBAAAC,EAA0B,GAC1B,YAAAC,EAAcP,EACd,UAAAQ,EAAaV,GAAaD,EAAcC,EAAOC,CAAI,CAAA,IAC9B,CACrB,MAAMU,EAAmBC,EAAA,YACtBC,GAA6B,CAE1B,GAAA,OAAO,OAAW,KAClB,EAAET,KAAQ,SACV,OAAOA,CAAI,IAAM,MACjBS,EAEA,OAAQN,GAAgB,GAG1B,MAAMO,EAAe,OAAOV,CAAI,EAAE,QAAQE,CAAG,EAE7C,OAAOQ,IAAiB,KACpBL,EAAYK,CAAY,EACtBP,GAAgB,EACxB,EACA,CAACD,EAAKG,EAAaF,CAAY,CAAA,EAG3B,CAACP,EAAOe,CAAQ,EAAIC,EAAA,SACxBL,EAAiBH,CAAuB,CAAA,EAGpCS,EAAkBL,EAAA,YACrBM,GAAyC,CACpCC,EAAWD,CAAS,EACtBH,EAAUK,GAAY,CACd,MAAAC,EAASH,EAAUE,CAAO,EAEhC,cAAOhB,CAAI,EAAE,QAAQE,EAAKI,EAAUW,CAAM,CAAC,EACpC,OAAA,cACL,IAAI,YAAYhB,EAAW,CACzB,OAAQ,CAAE,IAAAC,EAAK,MAAOY,EAAUE,CAAO,CAAE,CAAA,CAC1C,CAAA,EAGIC,CAAA,CACR,GAED,OAAOjB,CAAI,EAAE,QAAQE,EAAKI,EAAUQ,CAAS,CAAC,EACvC,OAAA,cACL,IAAI,YAAYb,EAAW,CAAE,OAAQ,CAAE,IAAAC,EAAK,MAAOY,CAAU,EAAG,CAAA,EAGlEH,EAASG,CAAS,EAEtB,EACA,CAACZ,EAAKI,CAAS,CAAA,EAGXY,EAAqBV,EAAAA,YAAY,IAAM,CACpC,OAAAR,CAAI,EAAE,WAAWE,CAAG,EAC3BS,EAASR,CAAiB,CAAA,EACzB,CAACA,EAAcD,CAAG,CAAC,EAEP,OAAAiB,EAAA,UAAYC,GAAO,CAC5BA,EAAG,cAAgB,OAAOpB,CAAI,GAAKoB,EAAG,MAAQlB,GAChDS,EAASN,EAAYe,EAAG,UAAY,MAAS,CAAC,CAAA,CACjD,EAEcD,EAAAlB,EAAYmB,GAAO,CAC5BA,EAAG,OAAO,MAAQlB,GAAcS,EAAAS,EAAG,OAAO,KAAK,CAAA,CACpD,EAEDC,EAAAA,UAAU,IAAM,CACVlB,IAAiB,QAAaP,IAAU,QAC1CiB,EAAgBV,CAAY,CAC7B,EAAA,CAACA,EAAcP,EAAOiB,CAAe,CAAC,EAEzCQ,EAAAA,UAAU,IAAM,CACVjB,GAAyBO,EAASJ,GAAkB,CAAA,EACvD,CAACH,EAAyBG,CAAgB,CAAC,EAEvC,CACLX,IAAU,OAAYO,EAAeP,EACrCiB,EACAK,CAAA,CACF,CAEJ,EAEaI,EAA+BC,GAC1CxB,EAAiB,eAAgB,mBAAmB,EAAEwB,CAAK;;;;;;;;;;;;;;"}