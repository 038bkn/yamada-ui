{"version":3,"file":"option-d9b28128.js","sources":["../../packages/components/select/src/use-select.ts","../../packages/components/select/src/select-icon.tsx","../../packages/components/select/src/select-list.tsx","../../packages/components/select/src/option-group.tsx","../../packages/components/select/src/option.tsx"],"sourcesContent":["import type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { layoutStylesProperties } from \"@yamada-ui/core\"\nimport type { FormControlOptions } from \"@yamada-ui/form-control\"\nimport {\n  formControlProperties,\n  useFormControlProps,\n} from \"@yamada-ui/form-control\"\nimport type { PopoverProps } from \"@yamada-ui/popover\"\nimport { useControllableState } from \"@yamada-ui/use-controllable-state\"\nimport { createDescendant } from \"@yamada-ui/use-descendant\"\nimport { useOutsideClick } from \"@yamada-ui/use-outside-click\"\nimport type { Dict, PropGetter } from \"@yamada-ui/utils\"\nimport {\n  createContext,\n  dataAttr,\n  funcAll,\n  handlerAll,\n  omitObject,\n  pickObject,\n  splitObject,\n  useUnmountEffect,\n  useUpdateEffect,\n  mergeRefs,\n  isHTMLElement,\n  ariaAttr,\n  isArray,\n  isUndefined,\n  getEventRelatedTarget,\n  isContains,\n} from \"@yamada-ui/utils\"\nimport type {\n  Dispatch,\n  ForwardedRef,\n  KeyboardEvent,\n  RefObject,\n  SetStateAction,\n  FocusEvent,\n  MouseEvent,\n  CSSProperties,\n} from \"react\"\nimport { useCallback, useRef, useState, useEffect } from \"react\"\nimport type { OptionProps } from \"./\"\n\nconst isTargetOption = (target: EventTarget | null): boolean =>\n  isHTMLElement(target) &&\n  !!target?.getAttribute(\"role\")?.startsWith(\"select-item\")\n\nexport const {\n  DescendantsContextProvider: SelectDescendantsContextProvider,\n  useDescendantsContext: useSelectDescendantsContext,\n  useDescendants: useSelectDescendants,\n  useDescendant: useSelectDescendant,\n} = createDescendant<HTMLElement>()\n\nexport type MaybeValue = string | string[]\n\ntype SelectContext = Omit<\n  UseSelectProps,\n  \"value\" | \"defaultValue\" | \"onChange\" | \"isEmpty\"\n> & {\n  value: MaybeValue\n  displayValue: MaybeValue | undefined\n  onChange: (newValue: string) => void\n  onChangeDisplayValue: (newValue: string, runOmit?: boolean) => void\n  isOpen: boolean\n  onOpen: () => void\n  onClose: () => void\n  onFocusFirst: () => void\n  onFocusLast: () => void\n  onFocusNext: () => void\n  onFocusPrev: () => void\n  focusedIndex: number\n  setFocusedIndex: Dispatch<SetStateAction<number>>\n  containerRef: RefObject<HTMLDivElement>\n  fieldRef: RefObject<HTMLDivElement>\n  listRef: RefObject<HTMLUListElement>\n  styles: Record<string, CSSUIObject>\n}\n\nexport const [SelectProvider, useSelectContext] = createContext<SelectContext>({\n  strict: false,\n  name: \"SelectContext\",\n})\n\nexport type UseSelectProps<T extends MaybeValue = string> = Omit<\n  HTMLUIProps<\"div\">,\n  \"defaultValue\" | \"onChange\"\n> &\n  Omit<\n    PopoverProps,\n    | \"initialFocusRef\"\n    | \"closeOnButton\"\n    | \"isOpen\"\n    | \"trigger\"\n    | \"autoFocus\"\n    | \"restoreFocus\"\n    | \"openDelay\"\n    | \"closeDelay\"\n  > &\n  FormControlOptions & {\n    /**\n     * The HTML `name` attribute used for forms.\n     */\n    name?: string\n    /**\n     * The value of the select.\n     */\n    value?: T\n    /**\n     * The initial value of the select.\n     */\n    defaultValue?: T\n    /**\n     * The callback invoked when value state changes.\n     */\n    onChange?: (value: T) => void\n    /**\n     * If `true`, the list element will be closed when value is selected.\n     *\n     * @default true\n     */\n    closeOnSelect?: boolean\n    /**\n     * If `true`, include placeholders in options.\n     *\n     * @default true\n     */\n    placeholderInOptions?: boolean\n    isEmpty: boolean\n    /**\n     * If `true`, the selected item(s) will be excluded from the list.\n     *\n     * @default false\n     */\n    omitSelectedValues?: boolean\n    /**\n     * The maximum selectable value.\n     */\n    maxSelectedValues?: number\n    /**\n     * Props for select option element.\n     */\n    optionProps?: Omit<OptionProps, \"value\" | \"children\">\n  }\n\nexport const useSelect = <T extends MaybeValue = string>({\n  defaultIsOpen,\n  placeholder,\n  closeOnBlur = true,\n  closeOnEsc = true,\n  closeOnSelect = true,\n  placeholderInOptions = true,\n  omitSelectedValues = false,\n  maxSelectedValues,\n  isEmpty,\n  placement = \"bottom-start\",\n  duration = 0.2,\n  optionProps,\n  ...rest\n}: UseSelectProps<T>) => {\n  rest = useFormControlProps(rest)\n\n  const formControlProps = pickObject(rest, formControlProperties)\n  const computedProps = splitObject(rest, layoutStylesProperties)\n\n  const descendants = useSelectDescendants()\n\n  const [focusedIndex, setFocusedIndex] = useState<number>(-1)\n  const [isAllSelected, setIsAllSelected] = useState<boolean>(false)\n\n  const containerRef = useRef<HTMLDivElement>(null)\n  const fieldRef = useRef<HTMLDivElement>(null)\n  const listRef = useRef<HTMLUListElement>(null)\n  const timeoutIds = useRef<Set<any>>(new Set([]))\n\n  const [value, setValue] = useControllableState({\n    value: rest.value,\n    defaultValue: rest.defaultValue,\n    onChange: rest.onChange,\n  })\n  const [displayValue, setDisplayValue] = useState<T | undefined>(undefined)\n\n  const isFocused = focusedIndex > -1\n  const isMulti = isArray(value)\n  const isEmptyValue =\n    (!isMulti ? !value : !value.length) &&\n    !(placeholder && placeholderInOptions)\n\n  const selectedValues = descendants.values(\n    ({ node }) => isMulti && value.includes(node.dataset.value ?? \"\"),\n  )\n\n  const selectedIndexes = selectedValues.map(({ index }) => index)\n  const enabledValues = descendants.enabledValues(\n    ({ index }) => !selectedIndexes.includes(index),\n  )\n\n  const onFocusFirst = useCallback(() => {\n    const id = setTimeout(() => {\n      const first = descendants.enabledfirstValue()\n\n      if (!first) return\n\n      if (!isMulti || !omitSelectedValues) {\n        setFocusedIndex(first.index)\n      } else {\n        if (selectedIndexes.includes(first.index)) {\n          const enabledFirst = enabledValues[0]\n\n          setFocusedIndex(enabledFirst.index)\n        } else {\n          setFocusedIndex(first.index)\n        }\n      }\n    })\n\n    timeoutIds.current.add(id)\n  }, [descendants, enabledValues, isMulti, omitSelectedValues, selectedIndexes])\n\n  const onFocusLast = useCallback(() => {\n    const id = setTimeout(() => {\n      const last = descendants.enabledlastValue()\n\n      if (!last) return\n\n      if (!isMulti || !omitSelectedValues) {\n        setFocusedIndex(last.index)\n      } else {\n        if (selectedIndexes.includes(last.index)) {\n          const enabledlast = enabledValues.reverse()[0]\n\n          setFocusedIndex(enabledlast.index)\n        } else {\n          setFocusedIndex(last.index)\n        }\n      }\n    })\n\n    timeoutIds.current.add(id)\n  }, [descendants, enabledValues, isMulti, omitSelectedValues, selectedIndexes])\n\n  const onFocusSelected = useCallback(() => {\n    const id = setTimeout(() => {\n      const values = descendants.enabledValues()\n\n      const selected = values.find(({ node }) =>\n        !isMulti\n          ? node.dataset.value === value\n          : value.includes(node.dataset.value ?? \"\"),\n      )\n\n      if (selected) setFocusedIndex(selected.index)\n    })\n\n    timeoutIds.current.add(id)\n  }, [descendants, isMulti, value])\n\n  const onFocusNext = useCallback(() => {\n    const id = setTimeout(() => {\n      const next = descendants.enabledNextValue(focusedIndex)\n\n      if (!next) return\n\n      if (!isMulti || !omitSelectedValues) {\n        setFocusedIndex(next.index)\n      } else {\n        if (selectedIndexes.includes(next.index)) {\n          const enabledNext =\n            enabledValues.find(({ index }) => next.index < index) ??\n            enabledValues[0]\n\n          setFocusedIndex(enabledNext.index)\n        } else {\n          setFocusedIndex(next.index)\n        }\n      }\n    })\n\n    timeoutIds.current.add(id)\n  }, [\n    descendants,\n    enabledValues,\n    focusedIndex,\n    isMulti,\n    omitSelectedValues,\n    selectedIndexes,\n    setFocusedIndex,\n  ])\n\n  const onFocusPrev = useCallback(() => {\n    const id = setTimeout(() => {\n      const prev = descendants.enabledPrevValue(focusedIndex)\n\n      if (!prev) return\n\n      if (!isMulti || !omitSelectedValues) {\n        setFocusedIndex(prev.index)\n      } else {\n        if (selectedIndexes.includes(prev.index)) {\n          const enabledPrev =\n            enabledValues.reverse().find(({ index }) => index < prev.index) ??\n            enabledValues[0]\n\n          setFocusedIndex(enabledPrev.index)\n        } else {\n          setFocusedIndex(prev.index)\n        }\n      }\n    })\n\n    timeoutIds.current.add(id)\n  }, [\n    descendants,\n    enabledValues,\n    focusedIndex,\n    isMulti,\n    omitSelectedValues,\n    selectedIndexes,\n    setFocusedIndex,\n  ])\n\n  const onFocusFirstOrSelected =\n    isEmptyValue || omitSelectedValues ? onFocusFirst : onFocusSelected\n  const onFocusLastOrSelected =\n    isEmptyValue || omitSelectedValues ? onFocusLast : onFocusSelected\n\n  const onChangeDisplayValue = useCallback(\n    (newValue: string, runOmit: boolean = true) => {\n      const values = descendants.values()\n      const selectedValues = values\n        .filter(({ node }) => node.dataset.value === newValue)\n        .map(({ node, index }) =>\n          !(!!placeholder && placeholderInOptions) || index !== 0\n            ? node.textContent ?? \"\"\n            : undefined,\n        )\n\n      setDisplayValue((prev) => {\n        if (!isMulti) {\n          return selectedValues[0] as T\n        } else {\n          selectedValues.forEach((selectedValue) => {\n            const isSelected =\n              isArray(prev) && prev.includes(selectedValue ?? \"\")\n\n            if (!isSelected) {\n              prev = [...(isArray(prev) ? prev : []), selectedValue] as T\n            } else if (runOmit) {\n              prev = (\n                isArray(prev)\n                  ? prev.filter((value) => value !== selectedValue)\n                  : undefined\n              ) as T\n            }\n          })\n\n          return prev\n        }\n      })\n    },\n    [descendants, isMulti, placeholder, placeholderInOptions],\n  )\n\n  const onChange = useCallback(\n    (newValue: string) => {\n      setValue((prev) => {\n        if (!isArray(prev)) {\n          return newValue as T\n        } else {\n          const isSelected = prev.includes(newValue)\n\n          if (!isSelected) {\n            return [...prev, newValue] as T\n          } else {\n            return prev.filter((value) => value !== newValue) as T\n          }\n        }\n      })\n\n      onChangeDisplayValue(newValue)\n    },\n    [onChangeDisplayValue, setValue],\n  )\n\n  const onClear = useCallback(\n    (ev: MouseEvent<HTMLDivElement>) => {\n      ev.stopPropagation()\n\n      setValue([] as unknown as T)\n      setDisplayValue(undefined)\n    },\n    [setDisplayValue, setValue],\n  )\n\n  const [isOpen, setIsOpen] = useState<boolean>(defaultIsOpen ?? false)\n\n  const onOpen = useCallback(() => {\n    if (formControlProps.disabled || formControlProps.readOnly) return\n\n    if (isEmpty || isAllSelected) return\n\n    setIsOpen(true)\n\n    rest.onOpen?.()\n  }, [formControlProps, isEmpty, isAllSelected, rest])\n\n  const onClose = useCallback(() => {\n    setIsOpen(false)\n\n    rest.onClose?.()\n  }, [rest])\n\n  const onSelect = useCallback(() => {\n    let enabledValue = descendants.value(focusedIndex)\n\n    if (\"disabled\" in (enabledValue?.node.dataset ?? {}))\n      enabledValue = undefined\n\n    if (!enabledValue) return\n\n    const value = enabledValue.node.dataset.value ?? \"\"\n\n    onChange(value)\n\n    if (closeOnSelect) onClose()\n\n    if (omitSelectedValues) onFocusNext()\n  }, [\n    closeOnSelect,\n    descendants,\n    focusedIndex,\n    omitSelectedValues,\n    onChange,\n    onClose,\n    onFocusNext,\n  ])\n\n  const onClick = useCallback(() => {\n    if (isOpen) return\n\n    onOpen()\n\n    onFocusFirstOrSelected()\n  }, [isOpen, onFocusFirstOrSelected, onOpen])\n\n  const onFocus = useCallback(() => {\n    if (isOpen) return\n\n    onOpen()\n\n    onFocusFirstOrSelected()\n  }, [isOpen, onFocusFirstOrSelected, onOpen])\n\n  const onBlur = useCallback(\n    (ev: FocusEvent<HTMLDivElement>) => {\n      const relatedTarget = getEventRelatedTarget(ev)\n\n      if (isContains(containerRef.current, relatedTarget)) return\n\n      if (!closeOnBlur) return\n\n      if (isOpen) onClose()\n    },\n    [closeOnBlur, isOpen, onClose],\n  )\n\n  const onKeyDown = useCallback(\n    (ev: KeyboardEvent<HTMLDivElement>) => {\n      if (ev.key === \" \") ev.key = ev.code\n\n      if (formControlProps.disabled || formControlProps.readOnly) return\n\n      const actions: Record<string, Function | undefined> = {\n        ArrowDown: isFocused\n          ? () => onFocusNext()\n          : !isOpen\n          ? funcAll(onOpen, onFocusFirstOrSelected)\n          : undefined,\n        ArrowUp: isFocused\n          ? () => onFocusPrev()\n          : !isOpen\n          ? funcAll(onOpen, onFocusLastOrSelected)\n          : undefined,\n        Space: isFocused\n          ? onSelect\n          : !isOpen\n          ? funcAll(onOpen, onFocusFirstOrSelected)\n          : undefined,\n        Enter: isFocused\n          ? onSelect\n          : !isOpen\n          ? funcAll(onOpen, onFocusFirstOrSelected)\n          : undefined,\n        Home: isOpen ? onFocusFirst : undefined,\n        End: isOpen ? onFocusLast : undefined,\n        Escape: closeOnEsc ? onClose : undefined,\n      }\n\n      const action = actions[ev.key]\n\n      if (!action) return\n\n      ev.preventDefault()\n      ev.stopPropagation()\n      action()\n    },\n    [\n      formControlProps.disabled,\n      formControlProps.readOnly,\n      isFocused,\n      isOpen,\n      onOpen,\n      onFocusFirstOrSelected,\n      onFocusLastOrSelected,\n      onSelect,\n      onFocusFirst,\n      onFocusLast,\n      closeOnEsc,\n      onClose,\n      onFocusNext,\n      onFocusPrev,\n    ],\n  )\n\n  useOutsideClick({\n    ref: containerRef,\n    handler: onClose,\n    enabled: closeOnBlur,\n  })\n\n  useEffect(() => {\n    if (!isMulti) return\n\n    if (!omitSelectedValues && isUndefined(maxSelectedValues)) return\n\n    const isAll = value.length > 0 && value.length === descendants.count()\n    const isMax = value.length === maxSelectedValues\n\n    if (isAll || isMax) {\n      onClose()\n      setIsAllSelected(true)\n    } else {\n      setIsAllSelected(false)\n    }\n  }, [\n    omitSelectedValues,\n    value,\n    descendants,\n    isMulti,\n    onClose,\n    maxSelectedValues,\n  ])\n\n  useUpdateEffect(() => {\n    if (!isOpen) setFocusedIndex(-1)\n  }, [isOpen])\n\n  useUnmountEffect(() => {\n    timeoutIds.current.forEach((id) => clearTimeout(id))\n    timeoutIds.current.clear()\n  })\n\n  const getPopoverProps = useCallback(\n    (props?: PopoverProps): PopoverProps => ({\n      ...rest,\n      ...props,\n      isOpen,\n      onOpen,\n      onClose,\n      placement,\n      duration,\n      trigger: \"never\",\n      closeOnButton: false,\n    }),\n    [duration, onClose, onOpen, placement, rest, isOpen],\n  )\n\n  const getContainerProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ref: mergeRefs(containerRef, ref),\n      ...computedProps[0],\n      ...props,\n      ...formControlProps,\n      onClick: handlerAll(props.onClick, rest.onClick, onClick),\n\n      onBlur: handlerAll(props.onBlur, rest.onBlur, onBlur),\n    }),\n    [computedProps, formControlProps, onBlur, onClick, rest],\n  )\n\n  const getFieldProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ref: mergeRefs(fieldRef, ref),\n      tabIndex: 0,\n      ...omitObject(computedProps[1] as Dict, [\n        \"value\",\n        \"defaultValue\",\n        \"onChange\",\n      ]),\n      ...props,\n      \"data-active\": dataAttr(isOpen),\n      \"data-placeholder\": dataAttr(\n        !isMulti ? displayValue === undefined : !displayValue?.length,\n      ),\n      \"aria-expanded\": dataAttr(isOpen),\n      onFocus: handlerAll(props.onFocus, rest.onFocus, onFocus),\n      onKeyDown: handlerAll(props.onKeyDown, rest.onKeyDown, onKeyDown),\n    }),\n    [computedProps, isOpen, isMulti, displayValue, rest, onFocus, onKeyDown],\n  )\n\n  return {\n    descendants,\n    value,\n    displayValue,\n    focusedIndex,\n    placeholder,\n    placeholderInOptions,\n    omitSelectedValues,\n    closeOnSelect,\n    isOpen,\n    containerRef,\n    fieldRef,\n    listRef,\n    optionProps,\n    formControlProps,\n    onChangeDisplayValue,\n    onChange,\n    onClear,\n    onOpen,\n    onClose,\n    onFocusFirst,\n    onFocusLast,\n    onFocusSelected,\n    onFocusNext,\n    onFocusPrev,\n    setFocusedIndex,\n    getPopoverProps,\n    getContainerProps,\n    getFieldProps,\n  }\n}\n\nexport type UseSelectReturn = ReturnType<typeof useSelect>\n\nexport const useSelectList = () => {\n  const { listRef, focusedIndex } = useSelectContext()\n\n  const descendants = useSelectDescendantsContext()\n\n  const beforeFocusedIndex = useRef<number>(-1)\n  const selectedValue = descendants.value(focusedIndex)\n\n  useEffect(() => {\n    if (!listRef.current || !selectedValue) return\n\n    if (beforeFocusedIndex.current === selectedValue.index) return\n\n    const parent = listRef.current\n    const child = selectedValue.node\n\n    const parentHeight = parent.clientHeight\n    const viewTop = parent.scrollTop\n    const viewBottom = viewTop + parentHeight\n\n    const childHeight = child.clientHeight\n    const childTop = child.offsetTop\n    const childBottom = childTop + childHeight\n\n    const isInView = viewTop <= childTop && childBottom <= viewBottom\n\n    const isScrollBottom = beforeFocusedIndex.current < selectedValue.index\n\n    if (!isInView) {\n      if (childBottom <= parentHeight) {\n        listRef.current.scrollTo({ top: 0 })\n      } else {\n        if (!isScrollBottom) {\n          listRef.current.scrollTo({ top: childTop + 1 })\n        } else {\n          listRef.current.scrollTo({ top: childBottom - parentHeight })\n        }\n      }\n    }\n\n    beforeFocusedIndex.current = selectedValue.index\n  }, [listRef, selectedValue])\n\n  const getListProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      as: \"ul\",\n      ref: mergeRefs(listRef, ref),\n      role: \"select\",\n      tabIndex: -1,\n      ...props,\n    }),\n    [listRef],\n  )\n\n  return {\n    getListProps,\n  }\n}\n\nexport type UseSelectListReturn = ReturnType<typeof useSelectList>\n\nexport type UseSelectOptionGroupProps = HTMLUIProps<\"ul\"> & {\n  /**\n   * The label of the option group.\n   */\n  label: string\n}\n\nexport const useSelectOptionGroup = ({\n  label,\n  ...rest\n}: UseSelectOptionGroupProps) => {\n  const { value, omitSelectedValues } = useSelectContext()\n\n  const isMulti = isArray(value)\n\n  const descendants = useSelectDescendantsContext()\n\n  const values = descendants.values()\n  const selectedValues =\n    isMulti && omitSelectedValues\n      ? descendants.values(({ node }) =>\n          value.includes(node.dataset.value ?? \"\"),\n        )\n      : []\n  const selectedIndexes = selectedValues.map(({ index }) => index)\n  const childValues = values.filter(\n    ({ node, index }) =>\n      node.parentElement?.dataset.label === label &&\n      !selectedIndexes.includes(index),\n  )\n\n  const isEmpty = !childValues.length\n\n  const computedRest = splitObject(rest, layoutStylesProperties)\n\n  const getContainerProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const style: CSSProperties = {\n        border: \"0px\",\n        clip: \"rect(0px, 0px, 0px, 0px)\",\n        height: \"1px\",\n        width: \"1px\",\n        margin: \"-1px\",\n        padding: \"0px\",\n        overflow: \"hidden\",\n        whiteSpace: \"nowrap\",\n        position: \"absolute\",\n      }\n\n      return {\n        ref,\n        ...props,\n        ...computedRest[0],\n        style: isEmpty ? style : undefined,\n      }\n    },\n    [computedRest, isEmpty],\n  )\n\n  const getGroupProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ref,\n      ...props,\n      ...computedRest[1],\n      \"data-label\": label,\n    }),\n    [computedRest, label],\n  )\n\n  return {\n    label,\n    getContainerProps,\n    getGroupProps,\n  }\n}\n\nexport type UseSelectOptionGroupReturn = ReturnType<typeof useSelectOptionGroup>\n\nexport type UseSelectOptionProps = Omit<\n  HTMLUIProps<\"li\">,\n  \"value\" | \"children\"\n> & {\n  /**\n   * The value of the select option.\n   */\n  value?: string\n  /**\n   * The label of the select option.\n   */\n  children?: string\n  /**\n   * If `true`, the select option will be disabled.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true`, the select option will be focusable.\n   *\n   * @default false\n   */\n  isFocusable?: boolean\n  /**\n   * If `true`, the list element will be closed when selected.\n   *\n   * @default false\n   */\n  closeOnSelect?: boolean\n}\n\nexport const useSelectOption = (\n  ref: ForwardedRef<any> | undefined,\n  props: UseSelectOptionProps,\n) => {\n  const {\n    fieldRef,\n    value,\n    placeholder,\n    placeholderInOptions,\n    omitSelectedValues,\n    closeOnSelect: generalCloseOnSelect,\n    focusedIndex,\n    optionProps,\n    onChange,\n    onChangeDisplayValue,\n    onFocusNext,\n    onClose,\n    setFocusedIndex,\n  } = useSelectContext()\n\n  let {\n    icon: customIcon,\n    isDisabled,\n    isFocusable,\n    closeOnSelect: customCloseOnSelect,\n    children,\n    ...computedProps\n  } = { ...optionProps, ...props }\n\n  const trulyDisabled = !!isDisabled && !isFocusable\n\n  const itemRef = useRef<HTMLLIElement>(null)\n\n  const { index, register, descendants } = useSelectDescendant({\n    disabled: trulyDisabled,\n  })\n\n  const values = descendants.values()\n  const frontValues = values.slice(0, index)\n\n  const isMulti = isArray(value)\n  const isDuplicated = !isMulti\n    ? frontValues.some(\n        ({ node }) => node.dataset.value === (computedProps.value ?? \"\"),\n      )\n    : false\n\n  const isSelected =\n    !isDuplicated &&\n    (!isMulti\n      ? (computedProps.value ?? \"\") === value\n      : value.includes(computedProps.value ?? \"\"))\n  const isFocused = index === focusedIndex\n\n  if (\n    !!placeholder &&\n    index > 0 &&\n    placeholderInOptions &&\n    !computedProps.value\n  ) {\n    console.warn(\n      `${\n        !isMulti ? \"Select\" : \"MultiSelect\"\n      }: If placeholders are present, All options must be set value. If want to set an empty value, either don't set the placeholder or set 'placeholderInOptions' to false.`,\n    )\n  }\n  const onClick = useCallback(\n    (ev: MouseEvent<HTMLLIElement>) => {\n      ev.preventDefault()\n      ev.stopPropagation()\n\n      if (isDisabled) {\n        if (fieldRef.current) fieldRef.current.focus()\n\n        return\n      }\n\n      if (!isTargetOption(ev.currentTarget)) {\n        if (fieldRef.current) fieldRef.current.focus()\n\n        return\n      }\n\n      setFocusedIndex(index)\n\n      onChange(computedProps.value ?? \"\")\n\n      if (fieldRef.current) fieldRef.current.focus()\n\n      if (customCloseOnSelect ?? generalCloseOnSelect) onClose()\n\n      if (omitSelectedValues) onFocusNext()\n    },\n    [\n      isDisabled,\n      setFocusedIndex,\n      index,\n      onChange,\n      computedProps.value,\n      fieldRef,\n      customCloseOnSelect,\n      generalCloseOnSelect,\n      onClose,\n      omitSelectedValues,\n      onFocusNext,\n    ],\n  )\n\n  useEffect(() => {\n    if (isSelected) onChangeDisplayValue(computedProps.value ?? \"\", false)\n  }, [computedProps, isSelected, onChangeDisplayValue])\n\n  const getOptionProps: PropGetter = useCallback(\n    (props = {}) => {\n      const style: CSSProperties = {\n        border: \"0px\",\n        clip: \"rect(0px, 0px, 0px, 0px)\",\n        height: \"1px\",\n        width: \"1px\",\n        margin: \"-1px\",\n        padding: \"0px\",\n        overflow: \"hidden\",\n        whiteSpace: \"nowrap\",\n        position: \"absolute\",\n      }\n\n      return {\n        ref: mergeRefs(itemRef, ref, register),\n        ...omitObject(computedProps, [\"value\"]),\n        ...props,\n        role: \"select-item\",\n        tabIndex: -1,\n        style: omitSelectedValues && isSelected ? style : undefined,\n        \"data-value\": computedProps.value ?? \"\",\n        \"data-focus\": dataAttr(isFocused),\n        \"data-disabled\": dataAttr(isDisabled),\n        \"aria-checked\": ariaAttr(isSelected),\n        \"aria-disabled\": ariaAttr(isDisabled),\n        onClick: handlerAll(computedProps.onClick, props.onClick, onClick),\n      }\n    },\n    [\n      computedProps,\n      isDisabled,\n      isFocused,\n      isSelected,\n      omitSelectedValues,\n      onClick,\n      ref,\n      register,\n    ],\n  )\n\n  return {\n    isSelected,\n    isFocused,\n    customIcon,\n    children,\n    getOptionProps,\n  }\n}\n\nexport type UseSelectOptionReturn = ReturnType<typeof useSelectOption>\n","import type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { ChevronIcon, CloseIcon } from \"@yamada-ui/icon\"\nimport { useClickable } from \"@yamada-ui/use-clickable\"\nimport { cx, getValidChildren, isValidElement } from \"@yamada-ui/utils\"\nimport type { FC, HTMLAttributes } from \"react\"\nimport { cloneElement, useRef } from \"react\"\nimport { useSelectContext } from \"./use-select\"\n\nexport type SelectIconProps = HTMLUIProps<\"div\">\n\nexport const SelectIcon = forwardRef<SelectIconProps, \"div\">(\n  ({ className, children, __css, ...rest }, ref) => {\n    const { styles } = useSelectContext()\n\n    const css: CSSUIObject = {\n      position: \"absolute\",\n      top: \"50%\",\n      transform: \"translateY(-50%)\",\n      display: \"inline-flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      pointerEvents: \"none\",\n      cursor: \"pointer\",\n      ...styles.icon,\n      ...__css,\n    }\n\n    const validChildren = getValidChildren(children)\n\n    const cloneChildren = validChildren.map((child) =>\n      cloneElement(child, {\n        focusable: false,\n        \"aria-hidden\": true,\n        style: {\n          maxWidth: \"1em\",\n          maxHeight: \"1em\",\n          color: \"currentColor\",\n        },\n      }),\n    )\n\n    return (\n      <ui.div\n        ref={ref}\n        className={cx(\"ui-select__icon\", className)}\n        __css={css}\n        {...rest}\n      >\n        {isValidElement(children) ? cloneChildren : <ChevronIcon />}\n      </ui.div>\n    )\n  },\n)\n\nexport type SelectClearIconProps = SelectIconProps & { disabled?: boolean }\n\nexport const SelectClearIcon: FC<SelectClearIconProps> = ({\n  className,\n  children,\n  ...props\n}) => {\n  const ref = useRef<HTMLDivElement>(null)\n  const { styles } = useSelectContext()\n\n  const isDisabled = props.disabled\n\n  const rest = useClickable({\n    ref,\n    isDisabled,\n    ...(props as HTMLAttributes<HTMLElement>),\n  })\n\n  return (\n    <SelectIcon\n      className={cx(\"ui-select__clear-icon\", className)}\n      __css={styles.clearIcon}\n      {...rest}\n    >\n      {children ?? <CloseIcon w=\"0.5em\" h=\"0.5em\" />}\n    </SelectIcon>\n  )\n}\n","import type { CSSUIObject, CSSUIProps, HTMLUIProps } from \"@yamada-ui/core\"\nimport { forwardRef } from \"@yamada-ui/core\"\nimport { PopoverContent } from \"@yamada-ui/popover\"\nimport { cx } from \"@yamada-ui/utils\"\nimport { useSelectContext, useSelectList } from \"./use-select\"\n\nexport type SelectListProps = HTMLUIProps<\"ul\">\n\nexport const SelectList = forwardRef<SelectListProps, \"ul\">(\n  ({ className, w, width, minW, minWidth, ...rest }, ref) => {\n    const { styles } = useSelectContext()\n\n    const { getListProps } = useSelectList()\n\n    w =\n      w ?? width ?? ((styles.list?.w ?? styles.list?.width) as CSSUIProps[\"w\"])\n    minW =\n      minW ??\n      minWidth ??\n      ((styles.list?.minW ?? styles.list?.minWidth) as CSSUIProps[\"minW\"])\n\n    const css: CSSUIObject = { ...styles.list }\n\n    return (\n      <PopoverContent\n        className={cx(\"ui-select__list\", className)}\n        w={w}\n        minW={minW}\n        __css={css}\n        {...getListProps(rest, ref)}\n      />\n    )\n  },\n)\n","import type { HTMLUIProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport type { UseSelectOptionGroupProps } from \"./use-select\"\nimport { useSelectContext, useSelectOptionGroup } from \"./use-select\"\n\ntype OptionGroupOptions = UseSelectOptionGroupProps\n\nexport type OptionGroupProps = HTMLUIProps<\"ul\"> & OptionGroupOptions\n\nexport const OptionGroup = forwardRef<OptionGroupProps, \"ul\">(\n  (\n    { className, color, h, height, minH, minHeight, children, ...rest },\n    ref,\n  ) => {\n    const { styles } = useSelectContext()\n    const { label, getContainerProps, getGroupProps } =\n      useSelectOptionGroup(rest)\n\n    h ??= height\n    minH ??= minHeight\n\n    return (\n      <ui.li\n        className={cx(\"ui-select__item\", \"ui-select__item--group\", className)}\n        __css={{ w: \"100%\", h: \"fit-content\", color }}\n        {...getContainerProps()}\n      >\n        <ui.span\n          className={cx(\"ui-select__item-group-label\")}\n          __css={styles.groupLabel}\n          noOfLines={1}\n        >\n          {label}\n        </ui.span>\n\n        <ui.ul\n          {...getGroupProps({}, ref)}\n          className={cx(\"ui-select__item-group\", className)}\n          __css={{ h, minH, ...styles.group }}\n        >\n          {children}\n        </ui.ul>\n      </ui.li>\n    )\n  },\n)\n","import type { CSSUIObject, HTMLUIProps } from \"@yamada-ui/core\"\nimport { ui, forwardRef } from \"@yamada-ui/core\"\nimport { cx } from \"@yamada-ui/utils\"\nimport type { ReactElement, FC } from \"react\"\nimport type { UseSelectOptionProps } from \"./use-select\"\nimport { useSelectContext, useSelectOption } from \"./use-select\"\n\ntype OptionOptions = { icon?: ReactElement }\n\nexport type OptionProps = UseSelectOptionProps & OptionOptions\n\nexport const Option = forwardRef<OptionProps, \"li\">(\n  ({ className, icon, ...rest }, ref) => {\n    const { styles } = useSelectContext()\n    const { isSelected, customIcon, children, getOptionProps } =\n      useSelectOption(ref, rest)\n\n    icon ??= customIcon\n\n    const css: CSSUIObject = {\n      textDecoration: \"none\",\n      color: \"inherit\",\n      userSelect: \"none\",\n      display: \"flex\",\n      width: \"100%\",\n      alignItems: \"center\",\n      textAlign: \"start\",\n      flex: \"0 0 auto\",\n      outline: 0,\n      gap: \"0.75rem\",\n      ...styles.item,\n    }\n\n    return (\n      <ui.li\n        className={cx(\"ui-select__item\", className)}\n        __css={css}\n        {...getOptionProps()}\n      >\n        {icon !== null ? (\n          <OptionIcon opacity={isSelected ? 1 : 0}>\n            {icon || <CheckIcon />}\n          </OptionIcon>\n        ) : null}\n        {icon ? (\n          <ui.span style={{ pointerEvents: \"none\", flex: 1 }} noOfLines={1}>\n            {children}\n          </ui.span>\n        ) : (\n          children\n        )}\n      </ui.li>\n    )\n  },\n)\n\ntype OptionIconProps = HTMLUIProps<\"span\">\n\nconst OptionIcon = forwardRef<OptionIconProps, \"span\">(\n  ({ className, ...rest }, ref) => {\n    const { styles } = useSelectContext()\n\n    const css: CSSUIObject = {\n      flexShrink: 0,\n      display: \"inline-flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      fontSize: \"0.85em\",\n      ...styles.itemIcon,\n    }\n\n    return (\n      <ui.span\n        ref={ref}\n        className={cx(\"ui-select__item__icon\", className)}\n        __css={css}\n        {...rest}\n      />\n    )\n  },\n)\n\nconst CheckIcon: FC = () => (\n  <svg viewBox=\"0 0 14 14\" width=\"1em\" height=\"1em\">\n    <polygon\n      fill=\"currentColor\"\n      points=\"5.5 11.9993304 14 3.49933039 12.5 2 5.5 8.99933039 1.5 4.9968652 0 6.49933039\"\n    />\n  </svg>\n)\n"],"names":["isTargetOption","target","isHTMLElement","_a","SelectDescendantsContextProvider","useSelectDescendantsContext","useSelectDescendants","useSelectDescendant","createDescendant","SelectProvider","useSelectContext","createContext","useSelect","defaultIsOpen","placeholder","closeOnBlur","closeOnEsc","closeOnSelect","placeholderInOptions","omitSelectedValues","maxSelectedValues","isEmpty","placement","duration","optionProps","rest","useFormControlProps","formControlProps","pickObject","formControlProperties","computedProps","splitObject","layoutStylesProperties","descendants","focusedIndex","setFocusedIndex","useState","isAllSelected","setIsAllSelected","containerRef","useRef","fieldRef","listRef","timeoutIds","value","setValue","useControllableState","displayValue","setDisplayValue","isFocused","isMulti","isArray","isEmptyValue","selectedIndexes","node","index","enabledValues","onFocusFirst","useCallback","id","first","enabledFirst","onFocusLast","last","enabledlast","onFocusSelected","selected","onFocusNext","next","enabledNext","onFocusPrev","prev","enabledPrev","onFocusFirstOrSelected","onFocusLastOrSelected","onChangeDisplayValue","newValue","runOmit","selectedValues","selectedValue","onChange","onClear","ev","isOpen","setIsOpen","onOpen","onClose","onSelect","enabledValue","onClick","onFocus","onBlur","relatedTarget","getEventRelatedTarget","isContains","onKeyDown","action","funcAll","useOutsideClick","useEffect","isUndefined","isAll","isMax","useUpdateEffect","useUnmountEffect","getPopoverProps","props","getContainerProps","ref","mergeRefs","handlerAll","getFieldProps","omitObject","dataAttr","useSelectList","beforeFocusedIndex","parent","child","parentHeight","viewTop","viewBottom","childHeight","childTop","childBottom","isInView","isScrollBottom","useSelectOptionGroup","label","values","computedRest","style","getGroupProps","useSelectOption","generalCloseOnSelect","customIcon","isDisabled","isFocusable","customCloseOnSelect","children","trulyDisabled","itemRef","register","frontValues","isSelected","getOptionProps","ariaAttr","SelectIcon","forwardRef","className","__css","styles","css","cloneChildren","getValidChildren","cloneElement","jsx","ui","cx","isValidElement","ChevronIcon","SelectClearIcon","useClickable","CloseIcon","SelectList","w","width","minW","minWidth","getListProps","_b","_c","_d","PopoverContent","OptionGroup","color","h","height","minH","minHeight","jsxs","Option","icon","OptionIcon","CheckIcon"],"mappings":"opBA2CA,MAAMA,GAAkBC,UACtB,OAAAC,GAAcD,CAAM,GACpB,CAAC,GAACE,EAAAF,GAAA,YAAAA,EAAQ,aAAa,UAArB,MAAAE,EAA8B,WAAW,iBAEhC,CACX,2BAA4BC,GAC5B,sBAAuBC,GACvB,eAAgBC,GAChB,cAAeC,EACjB,EAAIC,GAA8B,EA2BrB,CAACC,GAAgBC,CAAgB,EAAIC,GAA6B,CAC7E,OAAQ,GACR,KAAM,eACR,CAAC,EA+DYC,GAAY,CAAgC,CACvD,cAAAC,EACA,YAAAC,EACA,YAAAC,EAAc,GACd,WAAAC,EAAa,GACb,cAAAC,EAAgB,GAChB,qBAAAC,EAAuB,GACvB,mBAAAC,EAAqB,GACrB,kBAAAC,EACA,QAAAC,EACA,UAAAC,EAAY,eACZ,SAAAC,EAAW,GACX,YAAAC,EACA,GAAGC,CACL,IAAyB,CACvBA,EAAOC,GAAoBD,CAAI,EAEzB,MAAAE,EAAmBC,GAAWH,EAAMI,EAAqB,EACzDC,EAAgBC,GAAYN,EAAMO,EAAsB,EAExDC,EAAc3B,KAEd,CAAC4B,EAAcC,CAAe,EAAIC,EAAAA,SAAiB,EAAE,EACrD,CAACC,EAAeC,CAAgB,EAAIF,WAAkB,EAAK,EAE3DG,EAAeC,SAAuB,IAAI,EAC1CC,EAAWD,SAAuB,IAAI,EACtCE,GAAUF,SAAyB,IAAI,EACvCG,EAAaH,EAAiB,OAAA,IAAI,IAAI,CAAA,CAAE,CAAC,EAEzC,CAACI,EAAOC,CAAQ,EAAIC,GAAqB,CAC7C,MAAOrB,EAAK,MACZ,aAAcA,EAAK,aACnB,SAAUA,EAAK,QAAA,CAChB,EACK,CAACsB,EAAcC,CAAe,EAAIZ,EAAAA,SAAwB,MAAS,EAEnEa,EAAYf,EAAe,GAC3BgB,EAAUC,EAAQP,CAAK,EACvBQ,GACFF,EAAmB,CAACN,EAAM,OAAhB,CAACA,IACb,EAAE9B,GAAeI,GAMbmC,EAJiBpB,EAAY,OACjC,CAAC,CAAE,KAAAqB,KAAWJ,GAAWN,EAAM,SAASU,EAAK,QAAQ,OAAS,EAAE,CAAA,EAG3B,IAAI,CAAC,CAAE,MAAAC,CAAA,IAAYA,CAAK,EACzDC,EAAgBvB,EAAY,cAChC,CAAC,CAAE,MAAAsB,KAAY,CAACF,EAAgB,SAASE,CAAK,CAAA,EAG1CE,EAAeC,EAAAA,YAAY,IAAM,CAC/B,MAAAC,EAAK,WAAW,IAAM,CACpB,MAAAC,EAAQ3B,EAAY,oBAE1B,GAAK2B,EAED,GAAA,CAACV,GAAW,CAAC/B,EACfgB,EAAgByB,EAAM,KAAK,UAEvBP,EAAgB,SAASO,EAAM,KAAK,EAAG,CACnC,MAAAC,EAAeL,EAAc,CAAC,EAEpCrB,EAAgB0B,EAAa,KAAK,CAAA,MAElC1B,EAAgByB,EAAM,KAAK,CAE/B,CACD,EAEUjB,EAAA,QAAQ,IAAIgB,CAAE,CAAA,EACxB,CAAC1B,EAAauB,EAAeN,EAAS/B,EAAoBkC,CAAe,CAAC,EAEvES,EAAcJ,EAAAA,YAAY,IAAM,CAC9B,MAAAC,EAAK,WAAW,IAAM,CACpB,MAAAI,EAAO9B,EAAY,mBAEzB,GAAK8B,EAED,GAAA,CAACb,GAAW,CAAC/B,EACfgB,EAAgB4B,EAAK,KAAK,UAEtBV,EAAgB,SAASU,EAAK,KAAK,EAAG,CACxC,MAAMC,EAAcR,EAAc,QAAQ,EAAE,CAAC,EAE7CrB,EAAgB6B,EAAY,KAAK,CAAA,MAEjC7B,EAAgB4B,EAAK,KAAK,CAE9B,CACD,EAEUpB,EAAA,QAAQ,IAAIgB,CAAE,CAAA,EACxB,CAAC1B,EAAauB,EAAeN,EAAS/B,EAAoBkC,CAAe,CAAC,EAEvEY,GAAkBP,EAAAA,YAAY,IAAM,CAClC,MAAAC,EAAK,WAAW,IAAM,CAG1B,MAAMO,EAFSjC,EAAY,gBAEH,KAAK,CAAC,CAAE,KAAAqB,CAAK,IAClCJ,EAEGN,EAAM,SAASU,EAAK,QAAQ,OAAS,EAAE,EADvCA,EAAK,QAAQ,QAAUV,CACgB,EAGzCsB,GAAU/B,EAAgB+B,EAAS,KAAK,CAAA,CAC7C,EAEUvB,EAAA,QAAQ,IAAIgB,CAAE,CACxB,EAAA,CAAC1B,EAAaiB,EAASN,CAAK,CAAC,EAE1BuB,EAAcT,EAAAA,YAAY,IAAM,CAC9B,MAAAC,EAAK,WAAW,IAAM,CACpB,MAAAS,EAAOnC,EAAY,iBAAiBC,CAAY,EAEtD,GAAKkC,EAED,GAAA,CAAClB,GAAW,CAAC/B,EACfgB,EAAgBiC,EAAK,KAAK,UAEtBf,EAAgB,SAASe,EAAK,KAAK,EAAG,CACxC,MAAMC,EACJb,EAAc,KAAK,CAAC,CAAE,MAAAD,CAAA,IAAYa,EAAK,MAAQb,CAAK,GACpDC,EAAc,CAAC,EAEjBrB,EAAgBkC,EAAY,KAAK,CAAA,MAEjClC,EAAgBiC,EAAK,KAAK,CAE9B,CACD,EAEUzB,EAAA,QAAQ,IAAIgB,CAAE,CAAA,EACxB,CACD1B,EACAuB,EACAtB,EACAgB,EACA/B,EACAkC,EACAlB,CAAA,CACD,EAEKmC,GAAcZ,EAAAA,YAAY,IAAM,CAC9B,MAAAC,EAAK,WAAW,IAAM,CACpB,MAAAY,EAAOtC,EAAY,iBAAiBC,CAAY,EAEtD,GAAKqC,EAED,GAAA,CAACrB,GAAW,CAAC/B,EACfgB,EAAgBoC,EAAK,KAAK,UAEtBlB,EAAgB,SAASkB,EAAK,KAAK,EAAG,CACxC,MAAMC,EACJhB,EAAc,QAAQ,EAAE,KAAK,CAAC,CAAE,MAAAD,KAAYA,EAAQgB,EAAK,KAAK,GAC9Df,EAAc,CAAC,EAEjBrB,EAAgBqC,EAAY,KAAK,CAAA,MAEjCrC,EAAgBoC,EAAK,KAAK,CAE9B,CACD,EAEU5B,EAAA,QAAQ,IAAIgB,CAAE,CAAA,EACxB,CACD1B,EACAuB,EACAtB,EACAgB,EACA/B,EACAkC,EACAlB,CAAA,CACD,EAEKsC,EACJrB,GAAgBjC,EAAqBsC,EAAeQ,GAChDS,GACJtB,GAAgBjC,EAAqB2C,EAAcG,GAE/CU,GAAuBjB,EAAA,YAC3B,CAACkB,EAAkBC,EAAmB,KAAS,CAEvCC,MAAAA,EADS7C,EAAY,SAExB,OAAO,CAAC,CAAE,KAAAqB,KAAWA,EAAK,QAAQ,QAAUsB,CAAQ,EACpD,IAAI,CAAC,CAAE,KAAAtB,EAAM,MAAAC,KACZ,EAAIzC,GAAeI,IAAyBqC,IAAU,EAClDD,EAAK,aAAe,GACpB,MAAA,EAGRN,EAAiBuB,GACVrB,GAGH4B,EAAe,QAASC,GAAkB,CAEtC5B,EAAQoB,CAAI,GAAKA,EAAK,SAASQ,GAAiB,EAAE,EAIzCF,IAEPN,EAAApB,EAAQoB,CAAI,EACRA,EAAK,OAAQ3B,IAAUA,KAAUmC,CAAa,EAC9C,QALCR,EAAA,CAAC,GAAIpB,EAAQoB,CAAI,EAAIA,EAAO,CAAA,EAAKQ,CAAa,CAOvD,CACD,EAEMR,GAjBAO,EAAe,CAAC,CAmB1B,CACH,EACA,CAAC7C,EAAaiB,EAASpC,EAAaI,CAAoB,CAAA,EAGpD8D,GAAWtB,EAAA,YACdkB,GAAqB,CACpB/B,EAAU0B,GACHpB,EAAQoB,CAAI,EAGIA,EAAK,SAASK,CAAQ,EAKhCL,EAAK,OAAQ3B,GAAUA,IAAUgC,CAAQ,EAFzC,CAAC,GAAGL,EAAMK,CAAQ,EALpBA,CAUV,EAEDD,GAAqBC,CAAQ,CAC/B,EACA,CAACD,GAAsB9B,CAAQ,CAAA,EAG3BoC,GAAUvB,EAAA,YACbwB,GAAmC,CAClCA,EAAG,gBAAgB,EAEnBrC,EAAS,CAAkB,CAAA,EAC3BG,EAAgB,MAAS,CAC3B,EACA,CAACA,EAAiBH,CAAQ,CAAA,EAGtB,CAACsC,EAAQC,EAAS,EAAIhD,EAAAA,SAAkBvB,GAAiB,EAAK,EAE9DwE,EAAS3B,EAAAA,YAAY,IAAM,OAC3B/B,EAAiB,UAAYA,EAAiB,UAE9CN,GAAWgB,IAEf+C,GAAU,EAAI,GAEdjF,EAAAsB,EAAK,SAAL,MAAAtB,EAAA,KAAAsB,KACC,CAACE,EAAkBN,EAASgB,EAAeZ,CAAI,CAAC,EAE7C6D,EAAU5B,EAAAA,YAAY,IAAM,OAChC0B,GAAU,EAAK,GAEfjF,EAAAsB,EAAK,UAAL,MAAAtB,EAAA,KAAAsB,EAAe,EACd,CAACA,CAAI,CAAC,EAEH8D,GAAW7B,EAAAA,YAAY,IAAM,CAC7B,IAAA8B,EAAevD,EAAY,MAAMC,CAAY,EAKjD,GAHI,cAAesD,GAAA,YAAAA,EAAc,KAAK,UAAW,CAAA,KAChCA,EAAA,QAEb,CAACA,EAAc,OAEnB,MAAM5C,EAAQ4C,EAAa,KAAK,QAAQ,OAAS,GAEjDR,GAASpC,CAAK,EAEV3B,GAAuBqE,IAEvBnE,GAAgCgD,GAAA,EACnC,CACDlD,EACAgB,EACAC,EACAf,EACA6D,GACAM,EACAnB,CAAA,CACD,EAEKsB,GAAU/B,EAAAA,YAAY,IAAM,CAC5ByB,IAEGE,IAEgBZ,IACtB,EAAA,CAACU,EAAQV,EAAwBY,CAAM,CAAC,EAErCK,GAAUhC,EAAAA,YAAY,IAAM,CAC5ByB,IAEGE,IAEgBZ,IACtB,EAAA,CAACU,EAAQV,EAAwBY,CAAM,CAAC,EAErCM,GAASjC,EAAA,YACZwB,GAAmC,CAC5B,MAAAU,EAAgBC,GAAsBX,CAAE,EAE1CY,GAAWvD,EAAa,QAASqD,CAAa,GAE7C7E,GAEDoE,GAAgBG,GACtB,EACA,CAACvE,EAAaoE,EAAQG,CAAO,CAAA,EAGzBS,GAAYrC,EAAA,YACfwB,GAAsC,CAGjC,GAFAA,EAAG,MAAQ,MAAKA,EAAG,IAAMA,EAAG,MAE5BvD,EAAiB,UAAYA,EAAiB,SAAU,OA4BtD,MAAAqE,EA1BgD,CACpD,UAAW/C,EACP,IAAMkB,IACLgB,EAED,OADAc,GAAQZ,EAAQZ,CAAsB,EAE1C,QAASxB,EACL,IAAMqB,KACLa,EAED,OADAc,GAAQZ,EAAQX,EAAqB,EAEzC,MAAOzB,EACHsC,GACCJ,EAED,OADAc,GAAQZ,EAAQZ,CAAsB,EAE1C,MAAOxB,EACHsC,GACCJ,EAED,OADAc,GAAQZ,EAAQZ,CAAsB,EAE1C,KAAMU,EAAS1B,EAAe,OAC9B,IAAK0B,EAASrB,EAAc,OAC5B,OAAQ9C,EAAasE,EAAU,MAAA,EAGVJ,EAAG,GAAG,EAExBc,IAELd,EAAG,eAAe,EAClBA,EAAG,gBAAgB,EACZc,IACT,EACA,CACErE,EAAiB,SACjBA,EAAiB,SACjBsB,EACAkC,EACAE,EACAZ,EACAC,GACAa,GACA9B,EACAK,EACA9C,EACAsE,EACAnB,EACAG,EACF,CAAA,EAGc4B,GAAA,CACd,IAAK3D,EACL,QAAS+C,EACT,QAASvE,CAAA,CACV,EAEDoF,EAAAA,UAAU,IAAM,CAGV,GAFA,CAACjD,GAED,CAAC/B,GAAsBiF,GAAYhF,CAAiB,EAAG,OAE3D,MAAMiF,EAAQzD,EAAM,OAAS,GAAKA,EAAM,SAAWX,EAAY,QACzDqE,EAAQ1D,EAAM,SAAWxB,EAE3BiF,GAASC,GACHhB,IACRhD,EAAiB,EAAI,GAErBA,EAAiB,EAAK,CACxB,EACC,CACDnB,EACAyB,EACAX,EACAiB,EACAoC,EACAlE,CAAA,CACD,EAEDmF,GAAgB,IAAM,CACfpB,GAAQhD,EAAgB,EAAE,CAAA,EAC9B,CAACgD,CAAM,CAAC,EAEXqB,GAAiB,IAAM,CACrB7D,EAAW,QAAQ,QAASgB,GAAO,aAAaA,CAAE,CAAC,EACnDhB,EAAW,QAAQ,OAAM,CAC1B,EAED,MAAM8D,GAAkB/C,EAAA,YACrBgD,IAAwC,CACvC,GAAGjF,EACH,GAAGiF,EACH,OAAAvB,EACA,OAAAE,EACA,QAAAC,EACA,UAAAhE,EACA,SAAAC,EACA,QAAS,QACT,cAAe,EAAA,GAEjB,CAACA,EAAU+D,EAASD,EAAQ/D,EAAWG,EAAM0D,CAAM,CAAA,EAG/CwB,GAAgCjD,EAAA,YACpC,CAACgD,EAAQ,CAAA,EAAIE,EAAM,QAAU,CAC3B,IAAKC,GAAUtE,EAAcqE,CAAG,EAChC,GAAG9E,EAAc,CAAC,EAClB,GAAG4E,EACH,GAAG/E,EACH,QAASmF,EAAWJ,EAAM,QAASjF,EAAK,QAASgE,EAAO,EAExD,OAAQqB,EAAWJ,EAAM,OAAQjF,EAAK,OAAQkE,EAAM,CAAA,GAEtD,CAAC7D,EAAeH,EAAkBgE,GAAQF,GAAShE,CAAI,CAAA,EAGnDsF,GAA4BrD,EAAA,YAChC,CAACgD,EAAQ,CAAA,EAAIE,EAAM,QAAU,CAC3B,IAAKC,GAAUpE,EAAUmE,CAAG,EAC5B,SAAU,EACV,GAAGI,GAAWlF,EAAc,CAAC,EAAW,CACtC,QACA,eACA,UAAA,CACD,EACD,GAAG4E,EACH,cAAeO,EAAS9B,CAAM,EAC9B,mBAAoB8B,EACjB/D,EAAuC,EAACH,GAAA,MAAAA,EAAc,QAA5CA,IAAiB,MAC9B,EACA,gBAAiBkE,EAAS9B,CAAM,EAChC,QAAS2B,EAAWJ,EAAM,QAASjF,EAAK,QAASiE,EAAO,EACxD,UAAWoB,EAAWJ,EAAM,UAAWjF,EAAK,UAAWsE,EAAS,CAAA,GAElE,CAACjE,EAAeqD,EAAQjC,EAASH,EAActB,EAAMiE,GAASK,EAAS,CAAA,EAGlE,MAAA,CACL,YAAA9D,EACA,MAAAW,EACA,aAAAG,EACA,aAAAb,EACA,YAAApB,EACA,qBAAAI,EACA,mBAAAC,EACA,cAAAF,EACA,OAAAkE,EACA,aAAA5C,EACA,SAAAE,EACA,QAAAC,GACA,YAAAlB,EACA,iBAAAG,EACA,qBAAAgD,GACA,SAAAK,GACA,QAAAC,GACA,OAAAI,EACA,QAAAC,EACA,aAAA7B,EACA,YAAAK,EACA,gBAAAG,GACA,YAAAE,EACA,YAAAG,GACA,gBAAAnC,EACA,gBAAAsE,GACA,kBAAAE,GACA,cAAAI,EAAA,CAEJ,EAIaG,GAAgB,IAAM,CACjC,KAAM,CAAE,QAAAxE,EAAS,aAAAR,CAAa,EAAIxB,EAAiB,EAE7CuB,EAAc5B,KAEd8G,EAAqB3E,EAAAA,OAAe,EAAE,EACtCuC,EAAgB9C,EAAY,MAAMC,CAAY,EAEpDiE,OAAAA,EAAAA,UAAU,IAAM,CAGV,GAFA,CAACzD,EAAQ,SAAW,CAACqC,GAErBoC,EAAmB,UAAYpC,EAAc,MAAO,OAExD,MAAMqC,EAAS1E,EAAQ,QACjB2E,EAAQtC,EAAc,KAEtBuC,EAAeF,EAAO,aACtBG,EAAUH,EAAO,UACjBI,EAAaD,EAAUD,EAEvBG,EAAcJ,EAAM,aACpBK,EAAWL,EAAM,UACjBM,EAAcD,EAAWD,EAEzBG,EAAWL,GAAWG,GAAYC,GAAeH,EAEjDK,EAAiBV,EAAmB,QAAUpC,EAAc,MAE7D6C,IACCD,GAAeL,EACjB5E,EAAQ,QAAQ,SAAS,CAAE,IAAK,CAAG,CAAA,EAE9BmF,EAGHnF,EAAQ,QAAQ,SAAS,CAAE,IAAKiF,EAAcL,EAAc,EAF5D5E,EAAQ,QAAQ,SAAS,CAAE,IAAKgF,EAAW,EAAG,GAOpDP,EAAmB,QAAUpC,EAAc,KAAA,EAC1C,CAACrC,EAASqC,CAAa,CAAC,EAapB,CACL,aAZ+BrB,EAAA,YAC/B,CAACgD,EAAQ,CAAA,EAAIE,EAAM,QAAU,CAC3B,GAAI,KACJ,IAAKC,GAAUnE,EAASkE,CAAG,EAC3B,KAAM,SACN,SAAU,GACV,GAAGF,CAAA,GAEL,CAAChE,CAAO,CAAA,CAIR,CAEJ,EAWaoF,GAAuB,CAAC,CACnC,MAAAC,EACA,GAAGtG,CACL,IAAiC,CAC/B,KAAM,CAAE,MAAAmB,EAAO,mBAAAzB,CAAmB,EAAIT,EAAiB,EAEjDwC,EAAUC,EAAQP,CAAK,EAEvBX,EAAc5B,KAEd2H,EAAS/F,EAAY,SAOrBoB,GALJH,GAAW/B,EACPc,EAAY,OAAO,CAAC,CAAE,KAAAqB,CAAK,IACzBV,EAAM,SAASU,EAAK,QAAQ,OAAS,EAAE,GAEzC,IACiC,IAAI,CAAC,CAAE,MAAAC,CAAA,IAAYA,CAAK,EAOzDlC,EAAU,CANI2G,EAAO,OACzB,CAAC,CAAE,KAAA1E,EAAM,MAAAC,CACP,IAAA,OAAA,QAAApD,EAAAmD,EAAK,gBAAL,YAAAnD,EAAoB,QAAQ,SAAU4H,GACtC,CAAC1E,EAAgB,SAASE,CAAK,EAAA,EAGN,OAEvB0E,EAAelG,GAAYN,EAAMO,EAAsB,EAEvD2E,EAAgCjD,EAAA,YACpC,CAACgD,EAAQ,CAAA,EAAIE,EAAM,OAAS,CAC1B,MAAMsB,EAAuB,CAC3B,OAAQ,MACR,KAAM,2BACN,OAAQ,MACR,MAAO,MACP,OAAQ,OACR,QAAS,MACT,SAAU,SACV,WAAY,SACZ,SAAU,UAAA,EAGL,MAAA,CACL,IAAAtB,EACA,GAAGF,EACH,GAAGuB,EAAa,CAAC,EACjB,MAAO5G,EAAU6G,EAAQ,MAAA,CAE7B,EACA,CAACD,EAAc5G,CAAO,CAAA,EAGlB8G,EAA4BzE,EAAA,YAChC,CAACgD,EAAQ,CAAA,EAAIE,EAAM,QAAU,CAC3B,IAAAA,EACA,GAAGF,EACH,GAAGuB,EAAa,CAAC,EACjB,aAAcF,CAAA,GAEhB,CAACE,EAAcF,CAAK,CAAA,EAGf,MAAA,CACL,MAAAA,EACA,kBAAApB,EACA,cAAAwB,CAAA,CAEJ,EAoCaC,GAAkB,CAC7BxB,EACAF,IACG,CACG,KAAA,CACJ,SAAAjE,EACA,MAAAG,EACA,YAAA9B,EACA,qBAAAI,EACA,mBAAAC,EACA,cAAekH,EACf,aAAAnG,EACA,YAAAV,EACA,SAAAwD,EACA,qBAAAL,EACA,YAAAR,EACA,QAAAmB,EACA,gBAAAnD,GACEzB,EAAiB,EAEjB,GAAA,CACF,KAAM4H,EACN,WAAAC,EACA,YAAAC,EACA,cAAeC,EACf,SAAAC,EACA,GAAG5G,CACD,EAAA,CAAE,GAAGN,EAAa,GAAGkF,GAEzB,MAAMiC,EAAgB,CAAC,CAACJ,GAAc,CAACC,EAEjCI,GAAUpG,SAAsB,IAAI,EAEpC,CAAE,MAAAe,EAAO,SAAAsF,EAAU,YAAA5G,CAAA,EAAgB1B,GAAoB,CAC3D,SAAUoI,CAAA,CACX,EAGKG,EADS7G,EAAY,SACA,MAAM,EAAGsB,CAAK,EAEnCL,EAAUC,EAAQP,CAAK,EAOvBmG,EACJ,EAPoB7F,EAIlB,GAHA4F,EAAY,KACV,CAAC,CAAE,KAAAxF,CAAK,IAAMA,EAAK,QAAQ,SAAWxB,EAAc,OAAS,GAE/D,KAIAoB,EAEEN,EAAM,SAASd,EAAc,OAAS,EAAE,GADvCA,EAAc,OAAS,MAAQc,GAEhCK,GAAYM,IAAUrB,EAGxBpB,GACFyC,EAAQ,GACRrC,GACA,CAACY,EAAc,OAEP,QAAA,KACN,GACGoB,EAAqB,cAAX,QACb,uKAAA,EAGJ,MAAMuC,EAAU/B,EAAA,YACbwB,GAAkC,CAIjC,GAHAA,EAAG,eAAe,EAClBA,EAAG,gBAAgB,EAEfqD,EAAY,CACV9F,EAAS,SAASA,EAAS,QAAQ,QAEvC,MACF,CAEA,GAAI,CAACzC,GAAekF,EAAG,aAAa,EAAG,CACjCzC,EAAS,SAASA,EAAS,QAAQ,QAEvC,MACF,CAEAN,EAAgBoB,CAAK,EAEZyB,EAAAlD,EAAc,OAAS,EAAE,EAE9BW,EAAS,SAASA,EAAS,QAAQ,SAEnCgG,GAAuBJ,IAA8B/C,IAErDnE,GAAgCgD,GACtC,EACA,CACEoE,EACApG,EACAoB,EACAyB,EACAlD,EAAc,MACdW,EACAgG,EACAJ,EACA/C,EACAnE,EACAgD,CACF,CAAA,EAGFgC,EAAAA,UAAU,IAAM,CACV4C,GAAiCpE,EAAA7C,EAAc,OAAS,GAAI,EAAK,CACpE,EAAA,CAACA,EAAeiH,EAAYpE,CAAoB,CAAC,EAEpD,MAAMqE,EAA6BtF,EAAA,YACjC,CAACgD,EAAQ,CAAA,IAAO,CACd,MAAMwB,EAAuB,CAC3B,OAAQ,MACR,KAAM,2BACN,OAAQ,MACR,MAAO,MACP,OAAQ,OACR,QAAS,MACT,SAAU,SACV,WAAY,SACZ,SAAU,UAAA,EAGL,MAAA,CACL,IAAKrB,GAAU+B,GAAShC,EAAKiC,CAAQ,EACrC,GAAG7B,GAAWlF,EAAe,CAAC,OAAO,CAAC,EACtC,GAAG4E,EACH,KAAM,cACN,SAAU,GACV,MAAOvF,GAAsB4H,EAAab,EAAQ,OAClD,aAAcpG,EAAc,OAAS,GACrC,aAAcmF,EAAShE,EAAS,EAChC,gBAAiBgE,EAASsB,CAAU,EACpC,eAAgBU,GAASF,CAAU,EACnC,gBAAiBE,GAASV,CAAU,EACpC,QAASzB,EAAWhF,EAAc,QAAS4E,EAAM,QAASjB,CAAO,CAAA,CAErE,EACA,CACE3D,EACAyG,EACAtF,GACA8F,EACA5H,EACAsE,EACAmB,EACAiC,CACF,CAAA,EAGK,MAAA,CACL,WAAAE,EACA,UAAA9F,GACA,WAAAqF,EACA,SAAAI,EACA,eAAAM,CAAA,CAEJ,ECr8BaE,GAAaC,EACxB,CAAC,CAAE,UAAAC,EAAW,SAAAV,EAAU,MAAAW,EAAO,GAAG5H,GAAQmF,IAAQ,CAC1C,KAAA,CAAE,OAAA0C,GAAW5I,IAEb6I,EAAmB,CACvB,SAAU,WACV,IAAK,MACL,UAAW,mBACX,QAAS,cACT,WAAY,SACZ,eAAgB,SAChB,cAAe,OACf,OAAQ,UACR,GAAGD,EAAO,KACV,GAAGD,CAAA,EAKCG,EAFgBC,GAAiBf,CAAQ,EAEX,IAAKrB,GACvCqC,EAAA,aAAarC,EAAO,CAClB,UAAW,GACX,cAAe,GACf,MAAO,CACL,SAAU,MACV,UAAW,MACX,MAAO,cACT,CAAA,CACD,CAAA,EAID,OAAAsC,EAACC,EAAG,IAAH,CACC,IAAAhD,EACA,UAAWiD,EAAG,kBAAmBT,CAAS,EAC1C,MAAOG,EACN,GAAG9H,EAEH,SAAeqI,GAAApB,CAAQ,EAAIc,IAAiBO,GAAY,EAAA,CAAA,CAAA,CAG/D,CACF,EAIaC,GAA4C,CAAC,CACxD,UAAAZ,EACA,SAAAV,EACA,GAAGhC,CACL,IAAM,CACE,MAAAE,EAAMpE,SAAuB,IAAI,EACjC,CAAE,OAAA8G,GAAW5I,IAEb6H,EAAa7B,EAAM,SAEnBjF,EAAOwI,GAAa,CACxB,IAAArD,EACA,WAAA2B,EACA,GAAI7B,CAAA,CACL,EAGC,OAAAiD,EAACT,GAAA,CACC,UAAWW,EAAG,wBAAyBT,CAAS,EAChD,MAAOE,EAAO,UACb,GAAG7H,EAEH,YAAakI,EAAAO,GAAA,CAAU,EAAE,QAAQ,EAAE,QAAQ,CAAA,CAAA,CAGlD,EC1EaC,GAAahB,EACxB,CAAC,CAAE,UAAAC,EAAW,EAAAgB,EAAG,MAAAC,EAAO,KAAAC,EAAM,SAAAC,EAAU,GAAG9I,CAAK,EAAGmF,IAAQ,aACnD,KAAA,CAAE,OAAA0C,GAAW5I,IAEb,CAAE,aAAA8J,GAAiBtD,KAEzBkD,EACEA,GAAKC,KAAWlK,EAAAmJ,EAAO,OAAP,YAAAnJ,EAAa,MAAKsK,EAAAnB,EAAO,OAAP,YAAAmB,EAAa,OACjDH,EACEA,GACAC,KACEG,EAAApB,EAAO,OAAP,YAAAoB,EAAa,SAAQC,EAAArB,EAAO,OAAP,YAAAqB,EAAa,UAEtC,MAAMpB,EAAmB,CAAE,GAAGD,EAAO,IAAK,EAGxC,OAAAK,EAACiB,GAAA,CACC,UAAWf,EAAG,kBAAmBT,CAAS,EAC1C,EAAAgB,EACA,KAAAE,EACA,MAAOf,EACN,GAAGiB,EAAa/I,EAAMmF,CAAG,CAAA,CAAA,CAGhC,CACF,ECvBaiE,GAAc1B,EACzB,CACE,CAAE,UAAAC,EAAW,MAAA0B,EAAO,EAAAC,EAAG,OAAAC,EAAQ,KAAAC,EAAM,UAAAC,EAAW,SAAAxC,EAAU,GAAGjH,CAAK,EAClEmF,IACG,CACG,KAAA,CAAE,OAAA0C,GAAW5I,IACb,CAAE,MAAAqH,EAAO,kBAAApB,EAAmB,cAAAwB,CAAc,EAC9CL,GAAqBrG,CAAI,EAErB,OAAAsJ,MAAAC,GACGC,MAAAC,GAGPC,GAACvB,EAAG,GAAH,CACC,UAAWC,EAAG,kBAAmB,yBAA0BT,CAAS,EACpE,MAAO,CAAE,EAAG,OAAQ,EAAG,cAAe,MAAA0B,CAAM,EAC3C,GAAGnE,EAAkB,EAEtB,SAAA,CAAAgD,EAACC,EAAG,KAAH,CACC,UAAWC,EAAG,6BAA6B,EAC3C,MAAOP,EAAO,WACd,UAAW,EAEV,SAAAvB,CAAA,CACH,EAEA4B,EAACC,EAAG,GAAH,CACE,GAAGzB,EAAc,CAAC,EAAGvB,CAAG,EACzB,UAAWiD,EAAG,wBAAyBT,CAAS,EAChD,MAAO,CAAE,EAAA2B,EAAG,KAAAE,EAAM,GAAG3B,EAAO,KAAM,EAEjC,SAAAZ,CAAA,CACH,CAAA,CAAA,CAAA,CAGN,CACF,ECnCa0C,GAASjC,EACpB,CAAC,CAAE,UAAAC,EAAW,KAAAiC,EAAM,GAAG5J,CAAA,EAAQmF,IAAQ,CAC/B,KAAA,CAAE,OAAA0C,GAAW5I,IACb,CAAE,WAAAqI,EAAY,WAAAT,EAAY,SAAAI,EAAU,eAAAM,GACxCZ,GAAgBxB,EAAKnF,CAAI,EAElB4J,MAAA/C,GAET,MAAMiB,EAAmB,CACvB,eAAgB,OAChB,MAAO,UACP,WAAY,OACZ,QAAS,OACT,MAAO,OACP,WAAY,SACZ,UAAW,QACX,KAAM,WACN,QAAS,EACT,IAAK,UACL,GAAGD,EAAO,IAAA,EAIV,OAAA6B,GAACvB,EAAG,GAAH,CACC,UAAWC,EAAG,kBAAmBT,CAAS,EAC1C,MAAOG,EACN,GAAGP,EAAe,EAElB,SAAA,CAASqC,IAAA,KACP1B,EAAA2B,GAAA,CAAW,QAASvC,EAAa,EAAI,EACnC,SAAQsC,GAAA1B,EAAC4B,GAAU,CAAA,CAAA,CACtB,CAAA,EACE,KACHF,EACC1B,EAACC,EAAG,KAAH,CAAQ,MAAO,CAAE,cAAe,OAAQ,KAAM,CAAE,EAAG,UAAW,EAC5D,SAAAlB,CACH,CAAA,EAEAA,CAAA,CAAA,CAAA,CAIR,CACF,EAIM4C,GAAanC,EACjB,CAAC,CAAE,UAAAC,EAAW,GAAG3H,CAAA,EAAQmF,IAAQ,CACzB,KAAA,CAAE,OAAA0C,GAAW5I,IAEb6I,EAAmB,CACvB,WAAY,EACZ,QAAS,cACT,eAAgB,SAChB,WAAY,SACZ,SAAU,SACV,GAAGD,EAAO,QAAA,EAIV,OAAAK,EAACC,EAAG,KAAH,CACC,IAAAhD,EACA,UAAWiD,EAAG,wBAAyBT,CAAS,EAChD,MAAOG,EACN,GAAG9H,CAAA,CAAA,CAGV,CACF,EAEM8J,GAAgB,IACnB5B,EAAA,MAAA,CAAI,QAAQ,YAAY,MAAM,MAAM,OAAO,MAC1C,SAAAA,EAAC,UAAA,CACC,KAAK,eACL,OAAO,+EAAA,CACT,EACF"}