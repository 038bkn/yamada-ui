{"version":3,"file":"index-c817ab90.js","sources":["../../packages/hooks/use-token/src/index.ts"],"sourcesContent":["import { useColorMode, useTheme, Theme } from '@yamada-ui/core'\nimport { getMemoizedObject as get, isArray } from '@yamada-ui/utils'\n\nexport const useToken = <\n  Y extends string | number = string,\n  M extends keyof Omit<Theme, 'components'> = keyof Omit<Theme, 'components'>,\n>(\n  name: M,\n  path: Theme[M] | number | undefined,\n) => {\n  const { theme } = useTheme()\n  const { colorMode } = useColorMode()\n\n  if (name === 'layerStyles') name = 'styles.layerStyles' as M\n\n  if (name === 'textStyles') name = 'styles.textStyles' as M\n\n  if (name === 'transitionProperty') name = 'transitions.property' as M\n\n  if (name === 'transitionDuration') name = 'transitions.duration' as M\n\n  if (name === 'transitionEasing') name = 'transitions.easing' as M\n\n  const value = get<Y | [Y, Y] | undefined>(theme, `${name}.${path}`)\n\n  if (isArray(value)) {\n    const [lightValue, darkValue] = value\n\n    return colorMode === 'light' ? lightValue : darkValue\n  } else {\n    return value\n  }\n}\n"],"names":["useToken","name","path","theme","useTheme","colorMode","useColorMode","value","get","isArray","lightValue","darkValue"],"mappings":"2FAGa,MAAAA,EAAW,CAItBC,EACAC,IACG,CACG,KAAA,CAAE,MAAAC,GAAUC,IACZ,CAAE,UAAAC,GAAcC,IAElBL,IAAS,gBAAsBA,EAAA,sBAE/BA,IAAS,eAAqBA,EAAA,qBAE9BA,IAAS,uBAA6BA,EAAA,wBAEtCA,IAAS,uBAA6BA,EAAA,wBAEtCA,IAAS,qBAA2BA,EAAA,sBAExC,MAAMM,EAAQC,EAA4BL,EAAO,GAAGF,CAAI,IAAIC,CAAI,EAAE,EAE9D,GAAAO,EAAQF,CAAK,EAAG,CACZ,KAAA,CAACG,EAAYC,CAAS,EAAIJ,EAEzB,OAAAF,IAAc,QAAUK,EAAaC,CAAA,KAErC,QAAAJ,CAEX"}