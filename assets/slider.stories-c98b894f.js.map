{"version":3,"file":"slider.stories-c98b894f.js","sources":["../../packages/components/slider/src/slider.tsx"],"sourcesContent":["import {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n  CSSUIObject,\n  HTMLUIProps,\n  ThemeProps,\n  UIProps,\n} from '@yamada-ui/core'\nimport {\n  FormControlOptions,\n  useFormControlProps,\n  formControlProperties,\n} from '@yamada-ui/form-control'\nimport { useControllableState } from '@yamada-ui/use-controllable-state'\nimport { useLatestRef } from '@yamada-ui/use-latest-ref'\nimport { usePanEvent } from '@yamada-ui/use-pan-event'\nimport { useSize } from '@yamada-ui/use-size'\nimport {\n  createContext,\n  cx,\n  omitObject,\n  pickObject,\n  PropGetter,\n  useCallbackRef,\n  valueToPercent,\n  clampNumber,\n  roundNumberToStep,\n  useUpdateEffect,\n  mergeRefs,\n  dataAttr,\n  handlerAll,\n  RequiredPropGetter,\n  percentToValue,\n  getValidChildren,\n  findChildren,\n  isEmpty,\n  omitChildren,\n  includesChildren,\n} from '@yamada-ui/utils'\nimport {\n  CSSProperties,\n  KeyboardEvent,\n  useCallback,\n  useRef,\n  useState,\n} from 'react'\n\nexport type UseSliderProps = FormControlOptions & {\n  /**\n   * The base `id` to use for the slider.\n   */\n  id?: string\n  /**\n   * The name attribute of the hidden `input` field.\n   * This is particularly useful in forms.\n   */\n  name?: string\n  /**\n   * The minimum allowed value of the slider. Cannot be greater than max.\n   *\n   * @default 0\n   */\n  min?: number\n  /**\n   * The maximum allowed value of the slider. Cannot be less than min.\n   *\n   * @default 100\n   */\n  max?: number\n  /**\n   * The step in which increments or decrements have to be made.\n   *\n   * @default 1\n   */\n  step?: number\n  /**\n   * The value of the slider.\n   */\n  value?: number\n  /**\n   * The initial value of the slider.\n   */\n  defaultValue?: number\n  /**\n   * The orientation of the slider.\n   *\n   * @default 'horizontal'\n   */\n  orientation?: 'horizontal' | 'vertical'\n  /**\n   * If `true`, the value will be incremented or decremented in reverse.\n   */\n  isReversed?: boolean\n  /**\n   * If `false`, the slider handle will not capture focus when value changes.\n   *\n   * @default true\n   */\n  focusThumbOnChange?: boolean\n  /**\n   * Function called when the user starts selecting a new value.\n   */\n  onChangeStart?: (value: number) => void\n  /**\n   * Function called when the user is done selecting a new value.\n   */\n  onChangeEnd?: (value: number) => void\n  /**\n   * Function called whenever the slider value changes.\n   */\n  onChange?: (value: number) => void\n}\n\nexport const useSlider = (props: UseSliderProps) => {\n  const {\n    id,\n    name,\n    min = 0,\n    max = 100,\n    step = 1,\n    defaultValue,\n    orientation = 'horizontal',\n    isReversed,\n    focusThumbOnChange = true,\n    required,\n    disabled,\n    readOnly,\n    onChange,\n    ...rest\n  } = useFormControlProps(props)\n\n  if (max < min)\n    throw new Error(\"Do not assign a number less than 'min' to 'max'\")\n\n  const onChangeStart = useCallbackRef(rest.onChangeStart)\n  const onChangeEnd = useCallbackRef(rest.onChangeEnd)\n\n  const [computedValue, setValue] = useControllableState({\n    value: rest.value,\n    defaultValue: defaultValue ?? min + (max - min) / 2,\n    onChange,\n  })\n\n  const [isDragging, setDragging] = useState(false)\n  const [isFocused, setFocused] = useState(false)\n  const isInteractive = !(disabled || readOnly)\n\n  const tenStep = (max - min) / 10\n  const oneStep = step || (max - min) / 100\n\n  const value = clampNumber(computedValue, min, max)\n  const reversedValue = max - value + min\n  const thumbValue = isReversed ? reversedValue : value\n  const thumbPercent = valueToPercent(thumbValue, min, max)\n\n  const isVertical = orientation === 'vertical'\n\n  const latestRef = useLatestRef({\n    min,\n    max,\n    step,\n    value,\n    isInteractive,\n    eventSource: null as 'pointer' | 'keyboard' | null,\n    focusThumbOnChange,\n  })\n\n  const containerRef = useRef<HTMLElement>(null)\n  const trackRef = useRef<HTMLElement>(null)\n  const thumbRef = useRef<HTMLElement>(null)\n\n  const thumbSize = useSize(thumbRef)\n\n  usePanEvent(containerRef, {\n    onSessionStart: (ev) => {\n      const { isInteractive, value } = latestRef.current\n\n      if (!isInteractive) return\n\n      setDragging(true)\n      focusThumb()\n      setValueFromPointer(ev)\n      onChangeStart(value)\n    },\n    onSessionEnd: () => {\n      const { isInteractive, value } = latestRef.current\n\n      if (!isInteractive) return\n\n      setDragging(false)\n      onChangeEnd(value)\n    },\n    onMove: (ev) => {\n      const { isInteractive } = latestRef.current\n\n      if (!isInteractive) return\n\n      setValueFromPointer(ev)\n    },\n  })\n\n  const getValueFromPointer = useCallback(\n    (ev: any) => {\n      if (!trackRef.current) return\n\n      const { min, max, step } = latestRef.current\n\n      latestRef.current.eventSource = 'pointer'\n\n      const { bottom, left, height, width } =\n        trackRef.current.getBoundingClientRect()\n      const { clientX, clientY } = ev.touches?.[0] ?? ev\n\n      const diff = isVertical ? bottom - clientY : clientX - left\n\n      const length = isVertical ? height : width\n\n      let percent = diff / length\n\n      if (isReversed) percent = 1 - percent\n\n      let nextValue = percentToValue(percent, min, max)\n\n      if (step) nextValue = parseFloat(roundNumberToStep(nextValue, min, step))\n\n      nextValue = clampNumber(nextValue, min, max)\n\n      return nextValue\n    },\n    [isVertical, isReversed, latestRef],\n  )\n\n  const setValueFromPointer = (ev: MouseEvent | TouchEvent | PointerEvent) => {\n    const { value } = latestRef.current\n    const nextValue = getValueFromPointer(ev)\n\n    if (nextValue != null && nextValue !== value) setValue(nextValue)\n  }\n\n  const focusThumb = useCallback(() => {\n    const { focusThumbOnChange } = latestRef.current\n\n    if (focusThumbOnChange) setTimeout(() => thumbRef.current?.focus())\n  }, [latestRef])\n\n  const constrain = useCallback(\n    (value: number) => {\n      const { isInteractive, min, max } = latestRef.current\n\n      if (!isInteractive) return\n\n      value = parseFloat(roundNumberToStep(value, min, oneStep))\n      value = clampNumber(value, min, max)\n\n      setValue(value)\n    },\n    [oneStep, setValue, latestRef],\n  )\n\n  const stepUp = useCallback(\n    (step = oneStep) => constrain(isReversed ? value - step : value + step),\n    [constrain, isReversed, oneStep, value],\n  )\n\n  const stepDown = useCallback(\n    (step = oneStep) => constrain(isReversed ? value + step : value - step),\n    [constrain, isReversed, oneStep, value],\n  )\n\n  const reset = useCallback(\n    () => constrain(defaultValue || 0),\n    [constrain, defaultValue],\n  )\n\n  const stepTo = useCallback((value: number) => constrain(value), [constrain])\n\n  const onKeyDown = useCallback(\n    (ev: KeyboardEvent<HTMLElement>) => {\n      const { min, max } = latestRef.current\n\n      const actions: Record<string, React.KeyboardEventHandler> = {\n        ArrowRight: () => stepUp(),\n        ArrowUp: () => stepUp(),\n        ArrowLeft: () => stepDown(),\n        ArrowDown: () => stepDown(),\n        PageUp: () => stepUp(tenStep),\n        PageDown: () => stepDown(tenStep),\n        Home: () => constrain(min),\n        End: () => constrain(max),\n      }\n\n      const action = actions[ev.key]\n\n      if (!action) return\n\n      ev.preventDefault()\n      ev.stopPropagation()\n\n      action(ev)\n\n      latestRef.current.eventSource = 'keyboard'\n    },\n    [constrain, latestRef, stepDown, stepUp, tenStep],\n  )\n\n  useUpdateEffect(() => {\n    const { eventSource, value } = latestRef.current\n\n    focusThumb()\n\n    if (eventSource === 'keyboard') onChangeEnd(value)\n  }, [value, onChangeEnd])\n\n  const getContainerProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const { width: w, height: h } = thumbSize ?? { width: 0, height: 0 }\n\n      const style: CSSProperties = {\n        ...props.style,\n        position: 'relative',\n        userSelect: 'none',\n        touchAction: 'none',\n        WebkitTapHighlightColor: 'rgba(0, 0, 0, 0)',\n        outline: 0,\n        ...(isVertical\n          ? { paddingLeft: w / 2, paddingRight: w / 2 }\n          : { paddingTop: h / 2, paddingBottom: h / 2 }),\n      }\n\n      return {\n        ...omitObject(rest, ['value', 'onChangeStart', 'onChangeEnd']),\n        ...props,\n        ref: mergeRefs(ref, containerRef),\n        tabIndex: -1,\n        style,\n      }\n    },\n    [isVertical, rest, thumbSize],\n  )\n\n  const getInputProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...pickObject(rest, formControlProperties),\n      ...props,\n      id,\n      ref,\n      type: 'hidden',\n      name,\n      value,\n      required,\n      disabled,\n      readOnly,\n    }),\n    [disabled, id, name, readOnly, required, rest, value],\n  )\n\n  const getTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const style: CSSProperties = {\n        ...props.style,\n        position: 'absolute',\n        ...(isVertical\n          ? {\n              left: '50%',\n              transform: 'translateX(-50%)',\n              height: '100%',\n            }\n          : {\n              top: '50%',\n              transform: 'translateY(-50%)',\n              width: '100%',\n            }),\n      }\n\n      return {\n        ...pickObject(rest, formControlProperties),\n        ...props,\n        ref: mergeRefs(ref, trackRef),\n        style,\n      }\n    },\n    [isVertical, rest],\n  )\n\n  const getFilledTrackProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const n = Math.abs(isReversed ? 100 - thumbPercent : thumbPercent)\n\n      const style: CSSProperties = {\n        ...props.style,\n        position: 'absolute',\n        ...(isVertical\n          ? {\n              left: '50%',\n              transform: 'translateX(-50%)',\n              height: `${n}%`,\n              ...(isReversed ? { top: '0%' } : { bottom: '0%' }),\n            }\n          : {\n              top: '50%',\n              transform: 'translateY(-50%)',\n              width: `${n}%`,\n              ...(isReversed ? { right: '0%' } : { left: '0%' }),\n            }),\n      }\n\n      return {\n        ...pickObject(rest, formControlProperties),\n        ...props,\n        ref,\n        style,\n      }\n    },\n    [isReversed, isVertical, rest, thumbPercent],\n  )\n\n  const getMarkProps: RequiredPropGetter<{ value: number }> = useCallback(\n    (props = {}, ref = null) => {\n      let n = valueToPercent(props.value, min, max)\n      n = isReversed ? 100 - n : n\n\n      const style: CSSProperties = {\n        ...props.style,\n        position: 'absolute',\n        pointerEvents: 'none',\n        ...(isVertical ? { bottom: `${n}%` } : { left: `${n}%` }),\n      }\n\n      return {\n        ...pickObject(rest, formControlProperties),\n        ...props,\n        ref,\n        'aria-hidden': true,\n        'data-invalid': dataAttr(props.value < min || max < props.value),\n        'data-highlighted': dataAttr(props.value <= value),\n        style,\n      }\n    },\n    [isReversed, isVertical, max, min, rest, value],\n  )\n\n  const getThumbProps: PropGetter = useCallback(\n    (props = {}, ref = null) => {\n      const n = thumbPercent\n      const { width: w, height: h } = thumbSize ?? { width: 0, height: 0 }\n\n      const style: CSSProperties = {\n        ...props.style,\n        position: 'absolute',\n        userSelect: 'none',\n        touchAction: 'none',\n        ...(isVertical\n          ? { bottom: `calc(${n}% - ${h / 2}px)` }\n          : { left: `calc(${n}% - ${w / 2}px)` }),\n      }\n\n      return {\n        ...pickObject(rest, formControlProperties),\n        ...props,\n        ref: mergeRefs(ref, thumbRef),\n        tabIndex: isInteractive ? 0 : undefined,\n        role: 'slider',\n        'data-active': dataAttr(isDragging),\n        'aria-orientation': orientation,\n        onKeyDown: handlerAll(props.onKeyDown, onKeyDown),\n        onFocus: handlerAll(props.onFocus, rest.onFocus, () =>\n          setFocused(true),\n        ),\n        onBlur: handlerAll(props.onBlur, rest.onBlur, () => setFocused(false)),\n        style,\n      }\n    },\n    [\n      isDragging,\n      isInteractive,\n      isVertical,\n      onKeyDown,\n      orientation,\n      rest,\n      thumbPercent,\n      thumbSize,\n    ],\n  )\n\n  return {\n    value,\n    isFocused,\n    isDragging,\n    isVertical,\n    stepUp,\n    stepDown,\n    reset,\n    stepTo,\n    getContainerProps,\n    getInputProps,\n    getTrackProps,\n    getFilledTrackProps,\n    getMarkProps,\n    getThumbProps,\n  }\n}\n\nexport type ReturnUseSlider = ReturnType<typeof useSlider>\n\ntype SliderContext = Pick<\n  ReturnUseSlider,\n  | 'isVertical'\n  | 'getTrackProps'\n  | 'getFilledTrackProps'\n  | 'getMarkProps'\n  | 'getThumbProps'\n> &\n  Omit<SliderOptions, 'input'> & { styles: Record<string, CSSUIObject> }\n\nconst [SliderProvider, useSliderContext] = createContext<SliderContext>({\n  name: 'SliderContext',\n  errorMessage: `useSliderContext returned is 'undefined'. Seems you forgot to wrap the components in \"<Slider />\" `,\n})\n\ntype SliderOptions = {\n  /**\n   * Props for slider input element.\n   */\n  inputProps?: HTMLUIProps<'input'>\n  /**\n   * Props for slider track element.\n   */\n  trackProps?: SliderTrackProps\n  /**\n   * Props for slider filled track element.\n   */\n  filledTrackProps?: SliderFilledTrackProps\n  /**\n   * Props for slider thumb element.\n   */\n  thumbProps?: SliderThumbProps\n  /**\n   * The CSS `color` property. Used in `color` of track element.\n   */\n  trackColor?: UIProps['color']\n  /**\n   * The CSS `color` property. Used in `color` of filled track element.\n   */\n  filledTrackColor?: UIProps['color']\n  /**\n   * The CSS `height` property. Used in `height` of track element.\n   */\n  trackSize?: UIProps['h']\n  /**\n   * The CSS `background` property. Used in `background` of thumb element.\n   */\n  thumbColor?: UIProps['bg']\n  /**\n   * The CSS `box-size` property. Used in `box-size` of thumb element.\n   */\n  thumbSize?: UIProps['boxSize']\n}\n\nexport type SliderProps = Omit<HTMLUIProps<'div'>, keyof UseSliderProps> &\n  ThemeProps<'Slider'> &\n  UseSliderProps &\n  SliderOptions\n\nexport const Slider = forwardRef<SliderProps, 'input'>((props, ref) => {\n  const [styles, mergedProps] = useMultiComponentStyle('Slider', props)\n  const {\n    className,\n    children,\n    inputProps,\n    trackProps,\n    filledTrackProps,\n    thumbProps,\n    trackColor,\n    filledTrackColor,\n    trackSize,\n    thumbColor,\n    thumbSize,\n    ...rest\n  } = omitThemeProps(mergedProps)\n  const {\n    isVertical,\n    getContainerProps,\n    getInputProps,\n    getTrackProps,\n    getFilledTrackProps,\n    getMarkProps,\n    getThumbProps,\n  } = useSlider(rest)\n\n  const css: CSSUIObject = { ...styles.container }\n\n  const validChildren = getValidChildren(children)\n\n  const [customSliderTrack] = findChildren(validChildren, SliderTrack)\n  const [customSliderThumb] = findChildren(validChildren, SliderThumb)\n\n  const hasSliderThumb = includesChildren(validChildren, SliderThumb)\n\n  const cloneChildren = !isEmpty(validChildren)\n    ? omitChildren(validChildren, SliderTrack, SliderThumb)\n    : children\n\n  return (\n    <SliderProvider\n      value={{\n        isVertical,\n        getTrackProps,\n        getFilledTrackProps,\n        getMarkProps,\n        getThumbProps,\n        trackProps,\n        trackColor,\n        trackSize,\n        filledTrackProps,\n        filledTrackColor,\n        thumbProps,\n        thumbColor,\n        thumbSize,\n        styles,\n      }}\n    >\n      <ui.div\n        className={cx('ui-slider', className)}\n        __css={css}\n        {...getContainerProps()}\n      >\n        <ui.input {...getInputProps(inputProps, ref)} />\n\n        {customSliderTrack ?? <SliderTrack />}\n\n        {cloneChildren}\n\n        {customSliderThumb ?? (!hasSliderThumb ? <SliderThumb /> : null)}\n      </ui.div>\n    </SliderProvider>\n  )\n})\n\nexport type SliderTrackProps = HTMLUIProps<'div'> &\n  Pick<SliderOptions, 'filledTrackProps'>\n\nexport const SliderTrack = forwardRef<SliderTrackProps, 'div'>(\n  ({ className, children, filledTrackProps, ...rest }, ref) => {\n    const {\n      styles,\n      trackProps,\n      trackColor,\n      trackSize,\n      isVertical,\n      getTrackProps,\n    } = useSliderContext()\n\n    const css: CSSUIObject = { ...styles.track }\n\n    return (\n      <ui.div\n        className={cx('ui-slider-track', className)}\n        __css={css}\n        {...getTrackProps(\n          {\n            ...(trackColor ? { bg: trackColor } : {}),\n            ...(trackSize\n              ? isVertical\n                ? { w: trackSize }\n                : { h: trackSize }\n              : {}),\n            ...trackProps,\n            ...rest,\n          },\n          ref,\n        )}\n      >\n        {children ?? <SliderFilledTrack {...filledTrackProps} />}\n      </ui.div>\n    )\n  },\n)\n\nexport type SliderFilledTrackProps = HTMLUIProps<'div'>\n\nexport const SliderFilledTrack = forwardRef<SliderFilledTrackProps, 'div'>(\n  ({ className, ...rest }, ref) => {\n    const { styles, filledTrackProps, filledTrackColor, getFilledTrackProps } =\n      useSliderContext()\n\n    const css: CSSUIObject = { ...styles.filledTrack }\n\n    return (\n      <ui.div\n        className={cx('ui-slider-filledTrack', className)}\n        __css={css}\n        {...getFilledTrackProps(\n          {\n            ...(filledTrackColor ? { bg: filledTrackColor } : {}),\n            ...filledTrackProps,\n            ...rest,\n          },\n          ref,\n        )}\n      />\n    )\n  },\n)\n\nexport type SliderMarkProps = HTMLUIProps<'div'> & { value: number }\n\nexport const SliderMark = forwardRef<SliderMarkProps, 'div'>(\n  ({ className, ...rest }, ref) => {\n    const { styles, getMarkProps } = useSliderContext()\n\n    const css: CSSUIObject = {\n      display: 'inline-flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      ...styles.mark,\n    }\n\n    return (\n      <ui.div\n        className={cx('ui-slider-mark', className)}\n        __css={css}\n        {...getMarkProps(rest, ref)}\n      />\n    )\n  },\n)\n\nexport type SliderThumbProps = HTMLUIProps<'div'>\n\nexport const SliderThumb = forwardRef<SliderThumbProps, 'div'>(\n  ({ className, ...rest }, ref) => {\n    const { styles, thumbProps, thumbColor, thumbSize, getThumbProps } =\n      useSliderContext()\n\n    const css: CSSUIObject = { ...styles.thumb }\n\n    return (\n      <ui.div\n        className={cx('ui-slider-thumb', className)}\n        __css={css}\n        {...getThumbProps(\n          {\n            ...(thumbColor ? { bg: thumbColor } : {}),\n            ...(thumbSize ? { boxSize: thumbSize } : {}),\n            ...thumbProps,\n            ...rest,\n          },\n          ref,\n        )}\n      />\n    )\n  },\n)\n"],"names":["useSlider","props","id","name","min","max","step","defaultValue","orientation","isReversed","focusThumbOnChange","required","disabled","readOnly","onChange","rest","useFormControlProps","onChangeStart","useCallbackRef","onChangeEnd","computedValue","setValue","useControllableState","isDragging","setDragging","useState","isFocused","setFocused","isInteractive","tenStep","oneStep","value","clampNumber","reversedValue","thumbPercent","valueToPercent","isVertical","latestRef","useLatestRef","containerRef","useRef","trackRef","thumbRef","thumbSize","useSize","usePanEvent","ev","focusThumb","setValueFromPointer","getValueFromPointer","useCallback","bottom","left","height","width","clientX","clientY","_a","percent","nextValue","percentToValue","roundNumberToStep","constrain","stepUp","stepDown","reset","stepTo","onKeyDown","action","useUpdateEffect","eventSource","getContainerProps","ref","w","h","style","omitObject","mergeRefs","getInputProps","pickObject","formControlProperties","getTrackProps","getFilledTrackProps","n","getMarkProps","dataAttr","getThumbProps","handlerAll","SliderProvider","useSliderContext","createContext","Slider","forwardRef","styles","mergedProps","useMultiComponentStyle","className","children","inputProps","trackProps","filledTrackProps","thumbProps","trackColor","filledTrackColor","trackSize","thumbColor","omitThemeProps","css","validChildren","getValidChildren","customSliderTrack","findChildren","SliderTrack","customSliderThumb","SliderThumb","hasSliderThumb","includesChildren","cloneChildren","isEmpty","omitChildren","jsx","jsxs","ui","cx","SliderFilledTrack","SliderMark"],"mappings":"2iDAmHa,MAAAA,GAAaC,GAA0B,CAC5C,KAAA,CACJ,GAAAC,EACA,KAAAC,EACA,IAAAC,EAAM,EACN,IAAAC,EAAM,IACN,KAAAC,EAAO,EACP,aAAAC,EACA,YAAAC,EAAc,aACd,WAAAC,EACA,mBAAAC,EAAqB,GACrB,SAAAC,EACA,SAAAC,EACA,SAAAC,EACA,SAAAC,GACA,GAAGC,CAAA,EACDC,GAAoBf,CAAK,EAE7B,GAAII,EAAMD,EACF,MAAA,IAAI,MAAM,iDAAiD,EAE7D,MAAAa,GAAgBC,GAAeH,EAAK,aAAa,EACjDI,EAAcD,GAAeH,EAAK,WAAW,EAE7C,CAACK,GAAeC,CAAQ,EAAIC,GAAqB,CACrD,MAAOP,EAAK,MACZ,aAAcR,GAAgBH,GAAOC,EAAMD,GAAO,EAClD,SAAAU,EAAA,CACD,EAEK,CAACS,EAAYC,CAAW,EAAIC,WAAS,EAAK,EAC1C,CAACC,GAAWC,CAAU,EAAIF,WAAS,EAAK,EACxCG,EAAgB,EAAEhB,GAAYC,GAE9BgB,GAAWxB,EAAMD,GAAO,GACxB0B,EAAUxB,IAASD,EAAMD,GAAO,IAEhC2B,EAAQC,GAAYZ,GAAehB,EAAKC,CAAG,EAC3C4B,GAAgB5B,EAAM0B,EAAQ3B,EAE9B8B,EAAeC,GADF1B,EAAawB,GAAgBF,EACA3B,EAAKC,CAAG,EAElD+B,EAAa5B,IAAgB,WAE7B6B,EAAYC,GAAa,CAC7B,IAAAlC,EACA,IAAAC,EACA,KAAAC,EACA,MAAAyB,EACA,cAAAH,EACA,YAAa,KACb,mBAAAlB,CAAA,CACD,EAEK6B,GAAeC,SAAoB,IAAI,EACvCC,GAAWD,SAAoB,IAAI,EACnCE,GAAWF,SAAoB,IAAI,EAEnCG,EAAYC,GAAQF,EAAQ,EAElCG,GAAYN,GAAc,CACxB,eAAiBO,GAAO,CACtB,KAAM,CAAE,cAAAlB,EAAe,MAAAG,GAAUM,EAAU,QAEtCT,IAELJ,EAAY,EAAI,EACLuB,KACXC,GAAoBF,CAAE,EACtB7B,GAAcc,CAAK,EACrB,EACA,aAAc,IAAM,CAClB,KAAM,CAAE,cAAAH,EAAe,MAAAG,GAAUM,EAAU,QAEtCT,IAELJ,EAAY,EAAK,EACjBL,EAAYY,CAAK,EACnB,EACA,OAASe,GAAO,CACd,KAAM,CAAE,cAAAlB,GAAkBS,EAAU,QAE/BT,GAELoB,GAAoBF,CAAE,CACxB,CAAA,CACD,EAED,MAAMG,GAAsBC,EAAA,YACzBJ,GAAY,QACX,GAAI,CAACL,GAAS,QAAS,OAEjB,KAAA,CAAE,IAAArC,EAAK,IAAAC,EAAK,KAAAC,CAAAA,EAAS+B,EAAU,QAErCA,EAAU,QAAQ,YAAc,UAE1B,KAAA,CAAE,OAAAc,EAAQ,KAAAC,GAAM,OAAAC,GAAQ,MAAAC,IAC5Bb,GAAS,QAAQ,wBACb,CAAE,QAAAc,GAAS,QAAAC,MAAYC,GAAAX,EAAG,UAAH,YAAAW,GAAa,KAAMX,EAMhD,IAAIY,IAJStB,EAAae,EAASK,GAAUD,GAAUH,KAExChB,EAAaiB,GAASC,IAIjC7C,IAAYiD,GAAU,EAAIA,IAE9B,IAAIC,EAAYC,GAAeF,GAAStD,EAAKC,CAAG,EAE5CC,OAAAA,IAAMqD,EAAY,WAAWE,GAAkBF,EAAWvD,EAAKE,CAAI,CAAC,GAE5DqD,EAAA3B,GAAY2B,EAAWvD,EAAKC,CAAG,EAEpCsD,CACT,EACA,CAACvB,EAAY3B,EAAY4B,CAAS,CAAA,EAG9BW,GAAuBF,GAA+C,CAC1E,KAAM,CAAE,MAAAf,GAAUM,EAAU,QACtBsB,EAAYV,GAAoBH,CAAE,EAEpCa,GAAa,MAAQA,IAAc5B,GAAOV,EAASsC,CAAS,CAAA,EAG5DZ,GAAaG,EAAAA,YAAY,IAAM,CACnC,KAAM,CAAE,mBAAAxC,GAAuB2B,EAAU,QAErC3B,GAAoB,WAAW,IAAA,OAAM,OAAA+C,EAAAf,GAAS,UAAT,YAAAe,EAAkB,QAAO,CAAA,EACjE,CAACpB,CAAS,CAAC,EAERyB,EAAYZ,EAAA,YACfnB,GAAkB,CACX,KAAA,CAAE,cAAAH,EAAe,IAAAxB,EAAK,IAAAC,CAAAA,EAAQgC,EAAU,QAEzCT,IAELG,EAAQ,WAAW8B,GAAkB9B,EAAO3B,EAAK0B,CAAO,CAAC,EACzDC,EAAQC,GAAYD,EAAO3B,EAAKC,CAAG,EAEnCgB,EAASU,CAAK,EAChB,EACA,CAACD,EAAST,EAAUgB,CAAS,CAAA,EAGzB0B,EAASb,EAAA,YACb,CAAC5C,EAAOwB,IAAYgC,EAAUrD,EAAasB,EAAQzB,EAAOyB,EAAQzB,CAAI,EACtE,CAACwD,EAAWrD,EAAYqB,EAASC,CAAK,CAAA,EAGlCiC,EAAWd,EAAA,YACf,CAAC5C,EAAOwB,IAAYgC,EAAUrD,EAAasB,EAAQzB,EAAOyB,EAAQzB,CAAI,EACtE,CAACwD,EAAWrD,EAAYqB,EAASC,CAAK,CAAA,EAGlCkC,GAAQf,EAAA,YACZ,IAAMY,EAAUvD,GAAgB,CAAC,EACjC,CAACuD,EAAWvD,CAAY,CAAA,EAGpB2D,GAAShB,cAAanB,GAAkB+B,EAAU/B,CAAK,EAAG,CAAC+B,CAAS,CAAC,EAErEK,GAAYjB,EAAA,YACfJ,GAAmC,CAClC,KAAM,CAAE,IAAA1C,EAAK,IAAAC,GAAQgC,EAAU,QAazB+B,EAXsD,CAC1D,WAAY,IAAML,EAAO,EACzB,QAAS,IAAMA,EAAO,EACtB,UAAW,IAAMC,EAAS,EAC1B,UAAW,IAAMA,EAAS,EAC1B,OAAQ,IAAMD,EAAOlC,CAAO,EAC5B,SAAU,IAAMmC,EAASnC,CAAO,EAChC,KAAM,IAAMiC,EAAU1D,CAAG,EACzB,IAAK,IAAM0D,EAAUzD,CAAG,CAAA,EAGHyC,EAAG,GAAG,EAExBsB,IAELtB,EAAG,eAAe,EAClBA,EAAG,gBAAgB,EAEnBsB,EAAOtB,CAAE,EAETT,EAAU,QAAQ,YAAc,WAClC,EACA,CAACyB,EAAWzB,EAAW2B,EAAUD,EAAQlC,CAAO,CAAA,EAGlDwC,GAAgB,IAAM,CACpB,KAAM,CAAE,YAAAC,EAAa,MAAAvC,CAAAA,EAAUM,EAAU,QAE9BU,KAEPuB,IAAgB,YAAYnD,EAAYY,CAAK,CAAA,EAChD,CAACA,EAAOZ,CAAW,CAAC,EAEvB,MAAMoD,GAAgCrB,EAAA,YACpC,CAACjD,EAAQ,CAAA,EAAIuE,EAAM,OAAS,CACpB,KAAA,CAAE,MAAOC,EAAG,OAAQC,CAAM,EAAA/B,GAAa,CAAE,MAAO,EAAG,OAAQ,CAAE,EAE7DgC,EAAuB,CAC3B,GAAG1E,EAAM,MACT,SAAU,WACV,WAAY,OACZ,YAAa,OACb,wBAAyB,mBACzB,QAAS,EACT,GAAImC,EACA,CAAE,YAAaqC,EAAI,EAAG,aAAcA,EAAI,CAAE,EAC1C,CAAE,WAAYC,EAAI,EAAG,cAAeA,EAAI,CAAE,CAAA,EAGzC,MAAA,CACL,GAAGE,GAAW7D,EAAM,CAAC,QAAS,gBAAiB,aAAa,CAAC,EAC7D,GAAGd,EACH,IAAK4E,GAAUL,EAAKjC,EAAY,EAChC,SAAU,GACV,MAAAoC,CAAA,CAEJ,EACA,CAACvC,EAAYrB,EAAM4B,CAAS,CAAA,EAGxBmC,GAA4B5B,EAAA,YAChC,CAACjD,EAAQ,CAAA,EAAIuE,EAAM,QAAU,CAC3B,GAAGO,EAAWhE,EAAMiE,CAAqB,EACzC,GAAG/E,EACH,GAAAC,EACA,IAAAsE,EACA,KAAM,SACN,KAAArE,EACA,MAAA4B,EACA,SAAApB,EACA,SAAAC,EACA,SAAAC,CAAA,GAEF,CAACD,EAAUV,EAAIC,EAAMU,EAAUF,EAAUI,EAAMgB,CAAK,CAAA,EAGhDkD,GAA4B/B,EAAA,YAChC,CAACjD,EAAQ,CAAA,EAAIuE,EAAM,OAAS,CAC1B,MAAMG,EAAuB,CAC3B,GAAG1E,EAAM,MACT,SAAU,WACV,GAAImC,EACA,CACE,KAAM,MACN,UAAW,mBACX,OAAQ,MAAA,EAEV,CACE,IAAK,MACL,UAAW,mBACX,MAAO,MACT,CAAA,EAGC,MAAA,CACL,GAAG2C,EAAWhE,EAAMiE,CAAqB,EACzC,GAAG/E,EACH,IAAK4E,GAAUL,EAAK/B,EAAQ,EAC5B,MAAAkC,CAAA,CAEJ,EACA,CAACvC,EAAYrB,CAAI,CAAA,EAGbmE,GAAkChC,EAAA,YACtC,CAACjD,EAAQ,CAAA,EAAIuE,EAAM,OAAS,CAC1B,MAAMW,EAAI,KAAK,IAAI1E,EAAa,IAAMyB,EAAeA,CAAY,EAE3DyC,EAAuB,CAC3B,GAAG1E,EAAM,MACT,SAAU,WACV,GAAImC,EACA,CACE,KAAM,MACN,UAAW,mBACX,OAAQ,GAAG+C,CAAC,IACZ,GAAI1E,EAAa,CAAE,IAAK,MAAS,CAAE,OAAQ,IAAK,CAAA,EAElD,CACE,IAAK,MACL,UAAW,mBACX,MAAO,GAAG0E,CAAC,IACX,GAAI1E,EAAa,CAAE,MAAO,MAAS,CAAE,KAAM,IAAK,CAClD,CAAA,EAGC,MAAA,CACL,GAAGsE,EAAWhE,EAAMiE,CAAqB,EACzC,GAAG/E,EACH,IAAAuE,EACA,MAAAG,CAAA,CAEJ,EACA,CAAClE,EAAY2B,EAAYrB,EAAMmB,CAAY,CAAA,EAGvCkD,GAAsDlC,EAAA,YAC1D,CAACjD,EAAQ,CAAA,EAAIuE,EAAM,OAAS,CAC1B,IAAIW,EAAIhD,GAAelC,EAAM,MAAOG,EAAKC,CAAG,EACxC8E,EAAA1E,EAAa,IAAM0E,EAAIA,EAE3B,MAAMR,EAAuB,CAC3B,GAAG1E,EAAM,MACT,SAAU,WACV,cAAe,OACf,GAAImC,EAAa,CAAE,OAAQ,GAAG+C,CAAC,GAAI,EAAI,CAAE,KAAM,GAAGA,CAAC,GAAI,CAAA,EAGlD,MAAA,CACL,GAAGJ,EAAWhE,EAAMiE,CAAqB,EACzC,GAAG/E,EACH,IAAAuE,EACA,cAAe,GACf,eAAgBa,GAASpF,EAAM,MAAQG,GAAOC,EAAMJ,EAAM,KAAK,EAC/D,mBAAoBoF,GAASpF,EAAM,OAAS8B,CAAK,EACjD,MAAA4C,CAAA,CAEJ,EACA,CAAClE,EAAY2B,EAAY/B,EAAKD,EAAKW,EAAMgB,CAAK,CAAA,EAG1CuD,GAA4BpC,EAAA,YAChC,CAACjD,EAAQ,CAAA,EAAIuE,EAAM,OAAS,CAC1B,MAAMW,EAAIjD,EACJ,CAAE,MAAO,EAAG,OAAQwC,CAAM,EAAA/B,GAAa,CAAE,MAAO,EAAG,OAAQ,CAAE,EAE7DgC,GAAuB,CAC3B,GAAG1E,EAAM,MACT,SAAU,WACV,WAAY,OACZ,YAAa,OACb,GAAImC,EACA,CAAE,OAAQ,QAAQ+C,CAAC,OAAOT,EAAI,CAAC,KAAM,EACrC,CAAE,KAAM,QAAQS,CAAC,OAAO,EAAI,CAAC,KAAM,CAAA,EAGlC,MAAA,CACL,GAAGJ,EAAWhE,EAAMiE,CAAqB,EACzC,GAAG/E,EACH,IAAK4E,GAAUL,EAAK9B,EAAQ,EAC5B,SAAUd,EAAgB,EAAI,OAC9B,KAAM,SACN,cAAeyD,GAAS9D,CAAU,EAClC,mBAAoBf,EACpB,UAAW+E,GAAWtF,EAAM,UAAWkE,EAAS,EAChD,QAASoB,GAAWtF,EAAM,QAASc,EAAK,QAAS,IAC/CY,EAAW,EAAI,CACjB,EACA,OAAQ4D,GAAWtF,EAAM,OAAQc,EAAK,OAAQ,IAAMY,EAAW,EAAK,CAAC,EACrE,MAAAgD,EAAA,CAEJ,EACA,CACEpD,EACAK,EACAQ,EACA+B,GACA3D,EACAO,EACAmB,EACAS,CACF,CAAA,EAGK,MAAA,CACL,MAAAZ,EACA,UAAAL,GACA,WAAAH,EACA,WAAAa,EACA,OAAA2B,EACA,SAAAC,EACA,MAAAC,GACA,OAAAC,GACA,kBAAAK,GACA,cAAAO,GACA,cAAAG,GACA,oBAAAC,GACA,aAAAE,GACA,cAAAE,EAAA,CAEJ,EAcM,CAACE,GAAgBC,EAAgB,EAAIC,GAA6B,CACtE,KAAM,gBACN,aAAc,oGAChB,CAAC,EA8CYC,EAASC,EAAiC,CAAC3F,EAAOuE,IAAQ,CACrE,KAAM,CAACqB,EAAQC,CAAW,EAAIC,GAAuB,SAAU9F,CAAK,EAC9D,CACJ,UAAA+F,EACA,SAAAC,EACA,WAAAC,EACA,WAAAC,EACA,iBAAAC,EACA,WAAAC,EACA,WAAAC,EACA,iBAAAC,EACA,UAAAC,EACA,WAAAC,GACA,UAAA9D,EACA,GAAG5B,EAAA,EACD2F,GAAeZ,CAAW,EACxB,CACJ,WAAA1D,EACA,kBAAAmC,GACA,cAAAO,EACA,cAAAG,EACA,oBAAAC,EACA,aAAAE,GACA,cAAAE,CAAA,EACEtF,GAAUe,EAAI,EAEZ4F,EAAmB,CAAE,GAAGd,EAAO,SAAU,EAEzCe,EAAgBC,GAAiBZ,CAAQ,EAEzC,CAACa,CAAiB,EAAIC,GAAaH,EAAeI,CAAW,EAC7D,CAACC,CAAiB,EAAIF,GAAaH,EAAeM,CAAW,EAE7DC,GAAiBC,GAAiBR,EAAeM,CAAW,EAE5DG,GAAiBC,GAAQV,CAAa,EAExCX,EADAsB,GAAaX,EAAeI,EAAaE,CAAW,EAItD,OAAAM,EAAChC,GAAA,CACC,MAAO,CACL,WAAApD,EACA,cAAA6C,EACA,oBAAAC,EACA,aAAAE,GACA,cAAAE,EACA,WAAAa,EACA,WAAAG,EACA,UAAAE,EACA,iBAAAJ,EACA,iBAAAG,EACA,WAAAF,EACA,WAAAI,GACA,UAAA9D,EACA,OAAAkD,CACF,EAEA,SAAA4B,EAACC,EAAG,IAAH,CACC,UAAWC,EAAG,YAAa3B,CAAS,EACpC,MAAOW,EACN,GAAGpC,GAAkB,EAEtB,SAAA,CAAAiD,EAACE,EAAG,MAAH,CAAU,GAAG5C,EAAcoB,EAAY1B,CAAG,EAAG,EAE7CsC,KAAsBE,EAAY,EAAA,EAElCK,GAEAJ,IAAuBE,GAAmC,KAAlBK,EAACN,IAAY,EAAK,CAAA,CAC7D,CAAA,CAAA,CAGN,CAAC,EAKYF,EAAcpB,EACzB,CAAC,CAAE,UAAAI,EAAW,SAAAC,EAAU,iBAAAG,EAAkB,GAAGrF,GAAQyD,IAAQ,CACrD,KAAA,CACJ,OAAAqB,EACA,WAAAM,EACA,WAAAG,EACA,UAAAE,EACA,WAAApE,EACA,cAAA6C,GACEQ,GAAiB,EAEfkB,EAAmB,CAAE,GAAGd,EAAO,KAAM,EAGzC,OAAA2B,EAACE,EAAG,IAAH,CACC,UAAWC,EAAG,kBAAmB3B,CAAS,EAC1C,MAAOW,EACN,GAAG1B,EACF,CACE,GAAIqB,EAAa,CAAE,GAAIA,GAAe,CAAC,EACvC,GAAIE,EACApE,EACE,CAAE,EAAGoE,CAAU,EACf,CAAE,EAAGA,CAAU,EACjB,CAAC,EACL,GAAGL,EACH,GAAGpF,CACL,EACAyD,CACF,EAEC,SAAYyB,GAAAuB,EAACI,GAAmB,CAAA,GAAGxB,CAAkB,CAAA,CAAA,CAAA,CAG5D,CACF,EAIawB,GAAoBhC,EAC/B,CAAC,CAAE,UAAAI,EAAW,GAAGjF,CAAA,EAAQyD,IAAQ,CAC/B,KAAM,CAAE,OAAAqB,EAAQ,iBAAAO,EAAkB,iBAAAG,EAAkB,oBAAArB,CAAA,EAClDO,KAEIkB,EAAmB,CAAE,GAAGd,EAAO,WAAY,EAG/C,OAAA2B,EAACE,EAAG,IAAH,CACC,UAAWC,EAAG,wBAAyB3B,CAAS,EAChD,MAAOW,EACN,GAAGzB,EACF,CACE,GAAIqB,EAAmB,CAAE,GAAIA,GAAqB,CAAC,EACnD,GAAGH,EACH,GAAGrF,CACL,EACAyD,CACF,CAAA,CAAA,CAGN,CACF,EAIaqD,EAAajC,EACxB,CAAC,CAAE,UAAAI,EAAW,GAAGjF,CAAA,EAAQyD,IAAQ,CAC/B,KAAM,CAAE,OAAAqB,EAAQ,aAAAT,CAAa,EAAIK,GAAiB,EAE5CkB,EAAmB,CACvB,QAAS,cACT,eAAgB,SAChB,WAAY,SACZ,GAAGd,EAAO,IAAA,EAIV,OAAA2B,EAACE,EAAG,IAAH,CACC,UAAWC,EAAG,iBAAkB3B,CAAS,EACzC,MAAOW,EACN,GAAGvB,EAAarE,EAAMyD,CAAG,CAAA,CAAA,CAGhC,CACF,EAIa0C,EAActB,EACzB,CAAC,CAAE,UAAAI,EAAW,GAAGjF,CAAA,EAAQyD,IAAQ,CAC/B,KAAM,CAAE,OAAAqB,EAAQ,WAAAQ,EAAY,WAAAI,EAAY,UAAA9D,EAAW,cAAA2C,CAAA,EACjDG,KAEIkB,EAAmB,CAAE,GAAGd,EAAO,KAAM,EAGzC,OAAA2B,EAACE,EAAG,IAAH,CACC,UAAWC,EAAG,kBAAmB3B,CAAS,EAC1C,MAAOW,EACN,GAAGrB,EACF,CACE,GAAImB,EAAa,CAAE,GAAIA,GAAe,CAAC,EACvC,GAAI9D,EAAY,CAAE,QAASA,GAAc,CAAC,EAC1C,GAAG0D,EACH,GAAGtF,CACL,EACAyD,CACF,CAAA,CAAA,CAGN,CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}