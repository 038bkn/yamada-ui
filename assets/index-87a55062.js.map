{"version":3,"file":"index-87a55062.js","sources":["../../packages/hooks/use-clickable/src/index.ts"],"sourcesContent":["import { useEventListeners } from '@yamada-ui/use-event-listener'\nimport { dataAttr, mergeRefs } from '@yamada-ui/utils'\nimport {\n  HTMLAttributes,\n  KeyboardEvent,\n  MouseEvent,\n  Ref,\n  useCallback,\n  useState,\n} from 'react'\n\nexport type UseClickableProps = HTMLAttributes<HTMLElement> & {\n  /**\n   * If `true`, the element will be disabled. It will set the `disabled` HTML attribute.\n   *\n   * @default false\n   */\n  isDisabled?: boolean\n  /**\n   * If `true` and isDisabled, the element will have only `aria-disabled` set to `true`.\n   *\n   * @default false\n   */\n  isFocusable?: boolean\n  /**\n   * Whether or not trigger click on pressing `Enter`.\n   *\n   * @default true\n   */\n  clickOnEnter?: boolean\n  /**\n   * Whether or not trigger click on pressing `Space`.\n   *\n   * @default true\n   */\n  clickOnSpace?: boolean\n  /**\n   * The ref for the element.\n   */\n  ref?: Ref<HTMLElement>\n}\n\nconst isValidElement = (\n  ev: KeyboardEvent | KeyboardEvent['nativeEvent'],\n): boolean => {\n  const { tagName, isContentEditable } = ev.target as HTMLElement\n\n  return (\n    tagName !== 'INPUT' && tagName !== 'TEXTAREA' && isContentEditable !== true\n  )\n}\n\nexport const useClickable = ({\n  ref,\n  isDisabled,\n  isFocusable,\n  clickOnEnter = true,\n  clickOnSpace = true,\n  onMouseDown,\n  onMouseUp,\n  onClick,\n  onKeyDown,\n  onKeyUp,\n  tabIndex: _tabIndex,\n  onMouseOver,\n  onMouseLeave,\n  ...props\n}: UseClickableProps = {}) => {\n  const [isButton, setIsButton] = useState<boolean>(true)\n  const [isPressed, setIsPressed] = useState<boolean>(false)\n\n  const listeners = useEventListeners()\n\n  const tabIndex = isButton ? _tabIndex : _tabIndex || 0\n  const trulyDisabled = isDisabled && !isFocusable\n\n  const refCb = (node: any) => {\n    if (!node) return\n\n    if (node.tagName !== 'BUTTON') setIsButton(false)\n  }\n\n  const handleClick = useCallback(\n    (ev: MouseEvent<HTMLElement>) => {\n      if (isDisabled) {\n        ev.stopPropagation()\n        ev.preventDefault()\n\n        return\n      }\n\n      ev.currentTarget.focus()\n      onClick?.(ev)\n    },\n    [isDisabled, onClick],\n  )\n\n  const onDocumentKeyUp = useCallback(\n    (ev: KeyboardEvent) => {\n      if (isPressed && isValidElement(ev)) {\n        ev.preventDefault()\n        ev.stopPropagation()\n\n        setIsPressed(false)\n\n        listeners.remove(document, 'keyup', onDocumentKeyUp, false)\n      }\n    },\n    [isPressed, listeners],\n  )\n\n  const handleKeyDown = useCallback(\n    (ev: KeyboardEvent<HTMLElement>) => {\n      onKeyDown?.(ev)\n\n      if (isDisabled || ev.defaultPrevented || ev.metaKey) return\n\n      if (!isValidElement(ev.nativeEvent) || isButton) return\n\n      if (clickOnSpace && ev.key === ' ') {\n        ev.preventDefault()\n        setIsPressed(true)\n      }\n\n      if (clickOnEnter && ev.key === 'Enter') {\n        ev.preventDefault()\n        ev.currentTarget.click()\n      }\n\n      listeners.add(document, 'keyup', onDocumentKeyUp, false)\n    },\n    [\n      isDisabled,\n      isButton,\n      onKeyDown,\n      clickOnEnter,\n      clickOnSpace,\n      listeners,\n      onDocumentKeyUp,\n    ],\n  )\n\n  const handleKeyUp = useCallback(\n    (ev: KeyboardEvent<HTMLElement>) => {\n      onKeyUp?.(ev)\n\n      if (isDisabled || ev.defaultPrevented || ev.metaKey) return\n\n      if (!isValidElement(ev.nativeEvent) || isButton) return\n\n      if (clickOnSpace && ev.key === ' ') {\n        ev.preventDefault()\n        setIsPressed(false)\n\n        ev.currentTarget.click()\n      }\n    },\n    [clickOnSpace, isButton, isDisabled, onKeyUp],\n  )\n\n  const onDocumentMouseUp = useCallback(\n    (event: MouseEvent) => {\n      if (event.button !== 0) return\n\n      setIsPressed(false)\n\n      listeners.remove(document, 'mouseup', onDocumentMouseUp, false)\n    },\n    [listeners],\n  )\n\n  const handleMouseDown = useCallback(\n    (ev: MouseEvent<HTMLElement>) => {\n      if (ev.button !== 0) return\n\n      if (isDisabled) {\n        ev.stopPropagation()\n        ev.preventDefault()\n\n        return\n      }\n\n      if (!isButton) setIsPressed(true)\n\n      ev.currentTarget.focus({ preventScroll: true })\n\n      listeners.add(document, 'mouseup', onDocumentMouseUp, false)\n\n      onMouseDown?.(ev)\n    },\n    [isDisabled, isButton, onMouseDown, listeners, onDocumentMouseUp],\n  )\n\n  const handleMouseUp = useCallback(\n    (ev: MouseEvent<HTMLElement>) => {\n      if (ev.button !== 0) return\n\n      if (!isButton) setIsPressed(false)\n\n      onMouseUp?.(ev)\n    },\n    [onMouseUp, isButton],\n  )\n\n  const handleMouseOver = useCallback(\n    (ev: MouseEvent<HTMLElement>) => {\n      if (isDisabled) {\n        ev.preventDefault()\n\n        return\n      }\n\n      onMouseOver?.(ev)\n    },\n    [isDisabled, onMouseOver],\n  )\n\n  const handleMouseLeave = useCallback(\n    (ev: MouseEvent<HTMLElement>) => {\n      if (isPressed) {\n        ev.preventDefault()\n\n        setIsPressed(false)\n      }\n\n      onMouseLeave?.(ev)\n    },\n    [isPressed, onMouseLeave],\n  )\n\n  if (isButton) {\n    return {\n      ...props,\n      ref: mergeRefs(ref, refCb),\n      type: 'button',\n      'aria-disabled': trulyDisabled ? undefined : isDisabled,\n      disabled: trulyDisabled,\n      onClick: handleClick,\n      onMouseDown,\n      onMouseUp,\n      onKeyUp,\n      onKeyDown,\n      onMouseOver,\n      onMouseLeave,\n    }\n  } else {\n    return {\n      ...props,\n      ref: mergeRefs(ref, refCb),\n      role: 'button',\n      'data-active': dataAttr(isPressed),\n      'aria-disabled': isDisabled ? ('true' as const) : undefined,\n      tabIndex: trulyDisabled ? undefined : tabIndex,\n      onClick: handleClick,\n      onMouseDown: handleMouseDown,\n      onMouseUp: handleMouseUp,\n      onKeyUp: handleKeyUp,\n      onKeyDown: handleKeyDown,\n      onMouseOver: handleMouseOver,\n      onMouseLeave: handleMouseLeave,\n    }\n  }\n}\n\nexport type UseClickableReturn = ReturnType<typeof useClickable>\n"],"names":["isValidElement","ev","tagName","isContentEditable","useClickable","ref","isDisabled","isFocusable","clickOnEnter","clickOnSpace","onMouseDown","onMouseUp","onClick","onKeyDown","onKeyUp","_tabIndex","onMouseOver","onMouseLeave","props","isButton","setIsButton","useState","isPressed","setIsPressed","listeners","useEventListeners","tabIndex","trulyDisabled","refCb","node","handleClick","useCallback","onDocumentKeyUp","handleKeyDown","handleKeyUp","onDocumentMouseUp","event","handleMouseDown","handleMouseUp","handleMouseOver","handleMouseLeave","mergeRefs","dataAttr"],"mappings":"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"}