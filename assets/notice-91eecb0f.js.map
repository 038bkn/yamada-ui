{"version":3,"file":"notice-91eecb0f.js","sources":["../../packages/components/notice/src/notice.tsx"],"sourcesContent":["import {\n  AlertProps,\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n} from '@yamada-ui/alert'\nimport { CloseButton } from '@yamada-ui/close-button'\nimport {\n  ui,\n  useTheme,\n  CSSUIObject,\n  NoticePlacement,\n  NoticeComponentProps,\n  NoticeConfigOptions,\n  StyledTheme,\n} from '@yamada-ui/core'\nimport { Dict, merge } from '@yamada-ui/utils'\nimport { FC, ReactNode, useMemo } from 'react'\n\nexport type UseNoticeOptions = NoticeConfigOptions\n\nexport type NoticeOptions = {\n  id: string | number\n  placement: NoticePlacement\n  duration: UseNoticeOptions['duration']\n  status: UseNoticeOptions['status']\n  message: (props: NoticeComponentProps) => ReactNode\n  isDelete?: boolean\n  onDelete: () => void\n  onCloseComplete?: () => void\n  style?: CSSUIObject\n}\n\nconst findId = (\n  options: NoticeOptions[],\n  id: string | number,\n): NoticeOptions | undefined => options.find((notice) => notice.id === id)\n\nconst findNotice = (\n  state: State,\n  id: string | number,\n): {\n  placement: NoticePlacement | undefined\n  index: number\n} => {\n  const placement = getNoticePlacement(state, id)\n\n  const index = placement\n    ? state[placement].findIndex((notice) => notice.id === id)\n    : -1\n\n  return { placement, index }\n}\n\nconst getNoticePlacement = (\n  state: State,\n  id: string | number,\n): NoticePlacement | undefined => {\n  for (const [placement, values] of Object.entries(state)) {\n    if (findId(values, id)) return placement as NoticePlacement\n  }\n}\n\ntype CreateNoticeOptions = Partial<\n  Pick<\n    NoticeOptions,\n    'id' | 'placement' | 'status' | 'duration' | 'onCloseComplete' | 'style'\n  >\n>\n\nlet counter = 0\n\nconst createNotice = (\n  message: (props: NoticeComponentProps) => ReactNode,\n  {\n    id,\n    placement = 'top',\n    duration,\n    onCloseComplete,\n    status,\n    style,\n  }: CreateNoticeOptions,\n) => {\n  counter += 1\n\n  id = id ?? counter\n\n  return {\n    id,\n    placement,\n    status,\n    duration,\n    message,\n    onDelete: () => noticeStore.remove(String(id), placement),\n    isDelete: false,\n    onCloseComplete,\n    style,\n  }\n}\n\nconst createRender = (options: UseNoticeOptions): FC<NoticeComponentProps> => {\n  const { component } = options\n\n  const Render: FC<NoticeComponentProps> = (props) => {\n    if (typeof component === 'function') {\n      return component({ ...props, ...options }) as JSX.Element\n    } else {\n      return <Notice {...props} {...options} />\n    }\n  }\n\n  return Render\n}\n\nconst createNoticeFunc = (\n  defaultOptions: UseNoticeOptions,\n  theme: StyledTheme<Dict<any>>,\n) => {\n  const themeOptions = theme.__config.notice?.options ?? {}\n\n  const computedOptions = (options: UseNoticeOptions) =>\n    merge(themeOptions, merge(defaultOptions, options))\n\n  const notice = (options: UseNoticeOptions = {}) => {\n    options = computedOptions(options)\n\n    const message = createRender(options)\n\n    return noticeStore.create(message, options)\n  }\n\n  notice.update = (\n    id: string | number,\n    options: Omit<UseNoticeOptions, 'id'>,\n  ) => {\n    options = computedOptions(options)\n\n    noticeStore.update(id, options)\n  }\n\n  notice.closeAll = noticeStore.closeAll\n  notice.close = noticeStore.close\n  notice.isActive = noticeStore.isActive\n\n  return notice\n}\n\ntype CreateNoticeReturn = ReturnType<typeof createNoticeFunc>\n\nexport const useNotice = (\n  defaultOptions?: UseNoticeOptions,\n): CreateNoticeReturn => {\n  const { theme } = useTheme()\n\n  return useMemo(\n    () => createNoticeFunc(defaultOptions ?? {}, theme),\n    [defaultOptions, theme],\n  )\n}\n\ntype State = {\n  [K in NoticePlacement]: NoticeOptions[]\n}\n\ntype Store = {\n  subscribe: (onStoreChange: () => void) => () => void\n  getSnapshot: () => State\n  create: (\n    message: (props: NoticeComponentProps) => ReactNode,\n    options: UseNoticeOptions,\n  ) => string | number\n  close: (id: string | number) => void\n  closeAll: (options?: { placement?: NoticePlacement[] }) => void\n  update: (id: string | number, options: Omit<UseNoticeOptions, 'id'>) => void\n  remove: (id: string | number, placement: NoticePlacement) => void\n  isActive: (id: string | number) => boolean\n}\n\nconst initialState = {\n  top: [],\n  'top-left': [],\n  'top-right': [],\n  bottom: [],\n  'bottom-left': [],\n  'bottom-right': [],\n}\n\nconst createNoticeStore = (initialState: State): Store => {\n  let state = initialState\n  const storeChangeCache = new Set<() => void>()\n\n  const setState = (setStateFunc: (values: State) => State) => {\n    state = setStateFunc(state)\n    storeChangeCache.forEach((onStoreChange) => onStoreChange())\n  }\n\n  return {\n    getSnapshot: () => state,\n\n    subscribe: (onStoreChange) => {\n      storeChangeCache.add(onStoreChange)\n\n      return () => {\n        setState(() => initialState)\n        storeChangeCache.delete(onStoreChange)\n      }\n    },\n\n    remove: (id, placement) => {\n      setState((prevState) => ({\n        ...prevState,\n        [placement]: prevState[placement].filter((notice) => notice.id != id),\n      }))\n    },\n\n    create: (message, options) => {\n      const limit = (options.limit ?? 0) - 1\n\n      const notice = createNotice(message, options)\n      const { placement, id } = notice\n\n      setState((prev) => {\n        let prevNotices = prev[placement] ?? []\n\n        if (limit > 0 && prevNotices.length > limit) {\n          const n = prevNotices.length - limit\n          const notices = placement.includes('top')\n            ? prevNotices.slice(n * -1)\n            : prevNotices.slice(0, n)\n\n          const ids = notices.map(({ id }) => id)\n\n          prevNotices = prevNotices.map((notice) =>\n            ids.includes(notice.id) ? { ...notice, isDelete: true } : notice,\n          )\n        }\n\n        const notices = placement.includes('top')\n          ? [notice, ...prevNotices]\n          : [...prevNotices, notice]\n\n        return { ...prev, [placement]: notices }\n      })\n\n      return id\n    },\n\n    update: (id, options) => {\n      setState((prev) => {\n        const next = { ...prev }\n        const { placement, index } = findNotice(next, id)\n\n        if (placement && index !== -1) {\n          next[placement][index] = {\n            ...next[placement][index],\n            ...options,\n            message: createRender(options),\n          }\n        }\n\n        return next\n      })\n    },\n\n    closeAll: ({ placement } = {}) => {\n      setState((prev) => {\n        let placements: NoticePlacement[] = [\n          'bottom',\n          'bottom-right',\n          'bottom-left',\n          'top',\n          'top-left',\n          'top-right',\n        ]\n\n        if (placement) placements = placement\n\n        return placements.reduce(\n          (acc, placement) => {\n            acc[placement] = prev[placement].map((notice) => ({\n              ...notice,\n              isDelete: true,\n            }))\n\n            return acc\n          },\n          { ...prev },\n        )\n      })\n    },\n\n    close: (id) => {\n      setState((prev) => {\n        const placement = getNoticePlacement(prev, id)\n\n        if (!placement) return prev\n\n        return {\n          ...prev,\n          [placement]: prev[placement].map((notice) =>\n            notice.id == id ? { ...notice, isDelete: true } : notice,\n          ),\n        }\n      })\n    },\n\n    isActive: (id) =>\n      Boolean(findNotice(noticeStore.getSnapshot(), id).placement),\n  }\n}\n\nexport const noticeStore = createNoticeStore(initialState)\n\nexport type NoticeProps = Omit<AlertProps, keyof UseNoticeOptions> &\n  UseNoticeOptions & {\n    onClose?: () => void\n  }\n\nconst Notice: FC<NoticeProps> = ({\n  variant = 'basic',\n  colorScheme,\n  status,\n  icon,\n  title,\n  description,\n  isClosable,\n  onClose,\n}) => {\n  return (\n    <Alert\n      status={status}\n      variant={variant}\n      colorScheme={colorScheme}\n      alignItems='start'\n      boxShadow='lg'\n      pe={isClosable ? 8 : undefined}\n    >\n      <AlertIcon\n        variant={icon?.variant}\n        {...(icon?.color ? { color: icon.color } : {})}\n      >\n        {icon?.children}\n      </AlertIcon>\n\n      <ui.div flex='1'>\n        {title ? <AlertTitle noOfLines={1}>{title}</AlertTitle> : null}\n        {description ? (\n          <AlertDescription noOfLines={3}>{description}</AlertDescription>\n        ) : null}\n      </ui.div>\n\n      {isClosable ? (\n        <CloseButton\n          size='sm'\n          onClick={onClose}\n          position='absolute'\n          top={2}\n          right={2}\n        />\n      ) : null}\n    </Alert>\n  )\n}\n"],"names":["findId","options","id","notice","findNotice","state","placement","getNoticePlacement","index","values","counter","createNotice","message","duration","onCloseComplete","status","style","noticeStore","createRender","component","props","jsx","Notice","createNoticeFunc","defaultOptions","theme","themeOptions","_a","computedOptions","merge","useNotice","useTheme","useMemo","initialState","createNoticeStore","storeChangeCache","setState","setStateFunc","onStoreChange","prevState","limit","prev","prevNotices","n","ids","notices","next","placements","acc","variant","colorScheme","icon","title","description","isClosable","onClose","jsxs","Alert","AlertIcon","ui","AlertTitle","AlertDescription","CloseButton"],"mappings":"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"}