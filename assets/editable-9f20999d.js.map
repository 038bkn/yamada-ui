{"version":3,"file":"editable-9f20999d.js","sources":["../../packages/components/editable/src/editable.tsx"],"sourcesContent":["import {\n  ui,\n  forwardRef,\n  useMultiComponentStyle,\n  omitThemeProps,\n  CSSUIObject,\n  HTMLUIProps,\n  ThemeProps,\n  ColorModeToken,\n  CSS,\n} from \"@yamada-ui/core\"\nimport {\n  FormControlOptions,\n  formControlProperties,\n  useFormControlProps,\n} from \"@yamada-ui/form-control\"\nimport { useControllableState } from \"@yamada-ui/use-controllable-state\"\nimport { useFocusOnPointerDown } from \"@yamada-ui/use-focus\"\nimport {\n  createContext,\n  cx,\n  omitObject,\n  PropGetter,\n  runIfFunc,\n  useCallbackRef,\n  useSafeLayoutEffect,\n  useUpdateEffect,\n  isContains,\n  handlerAll,\n  mergeRefs,\n  pickObject,\n} from \"@yamada-ui/utils\"\nimport {\n  ChangeEvent,\n  FocusEvent,\n  ReactNode,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  KeyboardEvent,\n} from \"react\"\n\nexport type UseEditableProps = FormControlOptions & {\n  /**\n   * The placeholder text when the value is empty.\n   */\n  placeholder?: string\n  /**\n   * The value of the Editable in both edit & preview mode.\n   */\n  value?: string\n  /**\n   * The initial value of the Editable in both edit & preview mode.\n   */\n  defaultValue?: string\n  /**\n   * If `true`, the Editable will start with edit mode by default.\n   */\n  startWithEditView?: boolean\n  /**\n   * If `true`, the read only view, has a `tabIndex` set to `0`\n   * so it can receive focus via the keyboard or click.\n   *\n   * @default true\n   */\n  isPreviewFocusable?: boolean\n  /**\n   * If `true`, it'll update the value onBlur and turn off the edit mode.\n   *\n   * @default true\n   */\n  submitOnBlur?: boolean\n  /**\n   * If `true`, the input's text will be highlighted on focus.\n   *\n   * @default true\n   */\n  selectAllOnFocus?: boolean\n  /**\n   * A callback invoked when user changes input.\n   */\n  onChange?: (value: string) => void\n  /**\n   * Callback invoked when user cancels input with the `Esc` key.\n   * It provides the last confirmed value as argument.\n   */\n  onCancel?: (preValue: string) => void\n  /**\n   * A callback invoked when user confirms value with `enter` key or by blurring input.\n   */\n  onSubmit?: (value: string) => void\n  /**\n   * A callback invoked once the user enters edit mode.\n   */\n  onEdit?: () => void\n}\n\nexport const useEditable = (props: UseEditableProps) => {\n  const {\n    id,\n    placeholder,\n    defaultValue,\n    required,\n    disabled,\n    readOnly,\n    startWithEditView,\n    isPreviewFocusable = true,\n    submitOnBlur = true,\n    selectAllOnFocus = true,\n    ...rest\n  } = useFormControlProps(props)\n  rest.onEdit = useCallbackRef(rest.onEdit)\n\n  const [isEditing, setIsEditing] = useState<boolean>(\n    !!startWithEditView && !disabled,\n  )\n\n  const [value, setValue] = useControllableState({\n    defaultValue: defaultValue || \"\",\n    value: rest.value,\n    onChange: rest.onChange,\n  })\n\n  const isInteractive = !isEditing && !disabled\n  const isValueEmpty = value.length === 0\n\n  const [prevValue, setPrevValue] = useState(value)\n\n  const inputRef = useRef<HTMLInputElement | HTMLTextAreaElement>(null)\n  const previewRef = useRef<HTMLElement>(null)\n  const editRef = useRef<HTMLButtonElement>(null)\n  const cancelRef = useRef<HTMLButtonElement>(null)\n  const submitRef = useRef<HTMLButtonElement>(null)\n\n  useFocusOnPointerDown({\n    ref: inputRef,\n    enabled: isEditing,\n    elements: [cancelRef, submitRef],\n  })\n\n  useSafeLayoutEffect(() => {\n    if (!isEditing) return\n\n    inputRef.current?.focus()\n\n    if (selectAllOnFocus) inputRef.current?.select()\n  }, [])\n\n  useUpdateEffect(() => {\n    if (!isEditing) {\n      editRef.current?.focus()\n\n      return\n    }\n\n    inputRef.current?.focus()\n\n    if (selectAllOnFocus) inputRef.current?.select()\n\n    rest.onEdit?.()\n  }, [isEditing, rest.onEdit, selectAllOnFocus])\n\n  useEffect(() => {\n    if (isEditing) return\n\n    const el = inputRef.current\n    const activeEl = el?.ownerDocument.activeElement\n\n    if (activeEl === el) el?.blur()\n  }, [isEditing])\n\n  const onChange = useCallback(\n    (ev: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) =>\n      setValue(ev.currentTarget.value),\n    [setValue],\n  )\n\n  const onUpdatePrevValue = useCallback(() => setPrevValue(value), [value])\n\n  const onEdit = useCallback(() => {\n    if (isInteractive) setIsEditing(true)\n  }, [isInteractive])\n\n  const onCancel = useCallback(() => {\n    setIsEditing(false)\n    setValue(prevValue)\n    rest.onCancel?.(prevValue)\n  }, [prevValue, rest, setValue])\n\n  const onSubmit = useCallback(() => {\n    setIsEditing(false)\n    setPrevValue(value)\n    rest.onSubmit?.(value)\n  }, [rest, value])\n\n  const onKeyDown = useCallback(\n    (ev: KeyboardEvent<Element>) => {\n      if (ev.key !== \"Escape\" && ev.key !== \"Enter\") return\n\n      ev.preventDefault()\n\n      if (ev.key === \"Escape\") {\n        onCancel()\n      } else {\n        const { shiftKey, metaKey } = ev\n\n        if (!shiftKey && !metaKey) onSubmit()\n      }\n    },\n    [onCancel, onSubmit],\n  )\n\n  const onKeyDownWithoutSubmit = useCallback(\n    (ev: KeyboardEvent<Element>) => {\n      if (ev.key !== \"Escape\") return\n\n      ev.preventDefault()\n      onCancel()\n    },\n    [onCancel],\n  )\n\n  const onBlur = useCallback(\n    (ev: FocusEvent) => {\n      if (!isEditing) return\n\n      const ownerDocument = ev.currentTarget.ownerDocument\n      const relatedTarget = (ev.relatedTarget ??\n        ownerDocument.activeElement) as HTMLElement\n      const targetIsCancel = isContains(cancelRef.current, relatedTarget)\n      const targetIsSubmit = isContains(submitRef.current, relatedTarget)\n      const isValidBlur = !targetIsCancel && !targetIsSubmit\n\n      if (!isValidBlur) return\n\n      if (submitOnBlur) {\n        onSubmit()\n      } else {\n        onCancel()\n      }\n    },\n    [isEditing, submitOnBlur, onSubmit, onCancel],\n  )\n\n  const getPreviewProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...pickObject(rest, formControlProperties),\n      ...props,\n      ref: mergeRefs(ref, previewRef),\n      hidden: isEditing,\n      tabIndex: isInteractive && isPreviewFocusable ? 0 : undefined,\n      children: isValueEmpty ? placeholder : value,\n      onFocus: handlerAll(props.onFocus, onEdit, onUpdatePrevValue),\n    }),\n    [\n      isEditing,\n      isInteractive,\n      isPreviewFocusable,\n      isValueEmpty,\n      onEdit,\n      onUpdatePrevValue,\n      placeholder,\n      rest,\n      value,\n    ],\n  )\n\n  const getInputProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...pickObject(rest, formControlProperties),\n      ...props,\n      ref: mergeRefs(ref, inputRef),\n      id,\n      placeholder,\n      hidden: !isEditing,\n      value,\n      required,\n      disabled,\n      readOnly,\n      onBlur: handlerAll(props.onBlur, onBlur),\n      onChange: handlerAll(props.onChange, onChange),\n      onKeyDown: handlerAll(props.onKeyDown, onKeyDown),\n      onFocus: handlerAll(props.onFocus, onUpdatePrevValue),\n    }),\n    [\n      disabled,\n      id,\n      isEditing,\n      onBlur,\n      onChange,\n      onKeyDown,\n      onUpdatePrevValue,\n      placeholder,\n      readOnly,\n      required,\n      rest,\n      value,\n    ],\n  )\n\n  const getTextareaProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...pickObject(rest, formControlProperties),\n      ...props,\n      ref: mergeRefs(ref, inputRef),\n      id,\n      placeholder,\n      hidden: !isEditing,\n      value,\n      required,\n      disabled,\n      readOnly,\n      onBlur: handlerAll(props.onBlur, onBlur),\n      onChange: handlerAll(props.onChange, onChange),\n      onKeyDown: handlerAll(props.onKeyDown, onKeyDownWithoutSubmit),\n      onFocus: handlerAll(props.onFocus, onUpdatePrevValue),\n    }),\n    [\n      disabled,\n      id,\n      isEditing,\n      onBlur,\n      onChange,\n      onKeyDownWithoutSubmit,\n      onUpdatePrevValue,\n      placeholder,\n      readOnly,\n      required,\n      rest,\n      value,\n    ],\n  )\n\n  const getEditProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ...omitObject(rest, [\n        \"value\",\n        \"onChange\",\n        \"onCancel\",\n        \"onSubmit\",\n        \"onEdit\",\n      ]),\n      ref: mergeRefs(ref, editRef),\n      type: \"button\",\n      disabled,\n      readOnly,\n      onClick: handlerAll(props.onClick, onEdit),\n    }),\n    [disabled, onEdit, readOnly, rest],\n  )\n\n  const getSubmitProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ...omitObject(rest, [\n        \"value\",\n        \"onChange\",\n        \"onCancel\",\n        \"onSubmit\",\n        \"onEdit\",\n      ]),\n      ref: mergeRefs(submitRef, ref),\n      type: \"button\",\n      disabled,\n      readOnly,\n      onClick: handlerAll(props.onClick, onSubmit),\n    }),\n    [disabled, onSubmit, readOnly, rest],\n  )\n\n  const getCancelProps: PropGetter = useCallback(\n    (props = {}, ref = null) => ({\n      ...props,\n      ...omitObject(rest, [\n        \"value\",\n        \"onChange\",\n        \"onCancel\",\n        \"onSubmit\",\n        \"onEdit\",\n      ]),\n      ref: mergeRefs(cancelRef, ref),\n      type: \"button\",\n      disabled,\n      readOnly,\n      onClick: handlerAll(props.onClick, onCancel),\n    }),\n    [disabled, onCancel, readOnly, rest],\n  )\n\n  return {\n    isEditing,\n    value,\n    onEdit,\n    onCancel,\n    onSubmit,\n    getPreviewProps,\n    getInputProps,\n    getTextareaProps,\n    getEditProps,\n    getSubmitProps,\n    getCancelProps,\n  }\n}\n\nexport type UseEditableReturn = ReturnType<typeof useEditable>\n\nexport const useEditableControl = () => {\n  const { isEditing, getEditProps, getCancelProps, getSubmitProps } =\n    useEditableContext()\n\n  return { isEditing, getEditProps, getCancelProps, getSubmitProps }\n}\n\ntype EditableContext = {\n  isEditing: boolean\n  getPreviewProps: PropGetter\n  getInputProps: PropGetter\n  getTextareaProps: PropGetter\n  getEditProps: PropGetter\n  getCancelProps: PropGetter\n  getSubmitProps: PropGetter\n  styles: Record<string, CSSUIObject>\n}\n\nconst [EditableProvider, useEditableContext] = createContext<EditableContext>({\n  name: \"EditableContext\",\n  errorMessage:\n    \"useEditableContext: context is undefined. Seems you forgot to wrap the editable components in `<Editable />`\",\n})\n\ntype EditableOptions = {\n  /**\n   * The border color when the input is focused.\n   */\n  focusBorderColor?: ColorModeToken<CSS.Property.BorderColor, \"colors\">\n  /**\n   * The border color when the input is invalid.\n   */\n  errorBorderColor?: ColorModeToken<CSS.Property.BorderColor, \"colors\">\n  children?:\n    | ReactNode\n    | ((\n        props: Pick<\n          UseEditableReturn,\n          \"isEditing\" | \"onSubmit\" | \"onCancel\" | \"onEdit\"\n        >,\n      ) => ReactNode)\n}\n\nexport type EditableProps = Omit<\n  HTMLUIProps<\"div\">,\n  \"onChange\" | \"value\" | \"defaultValue\" | \"onSubmit\" | \"children\"\n> &\n  ThemeProps<\"Editable\"> &\n  UseEditableProps &\n  EditableOptions\n\nexport const Editable = forwardRef<EditableProps, \"div\">(\n  ({ focusBorderColor, errorBorderColor, ...props }, ref) => {\n    const [styles, mergedProps] = useMultiComponentStyle(\"Editable\", {\n      focusBorderColor,\n      errorBorderColor,\n      ...props,\n    })\n    const { className, children, ...rest } = omitThemeProps(mergedProps)\n    const {\n      isEditing,\n      getPreviewProps,\n      getInputProps,\n      getTextareaProps,\n      getEditProps,\n      getCancelProps,\n      getSubmitProps,\n      onSubmit,\n      onCancel,\n      onEdit,\n    } = useEditable(rest)\n\n    const cloneChildren = runIfFunc(children, {\n      isEditing,\n      onSubmit,\n      onCancel,\n      onEdit,\n    })\n\n    const css: CSSUIObject = { ...styles.container }\n\n    return (\n      <EditableProvider\n        value={{\n          isEditing,\n          getPreviewProps,\n          getInputProps,\n          getTextareaProps,\n          getEditProps,\n          getCancelProps,\n          getSubmitProps,\n          styles,\n        }}\n      >\n        <ui.div\n          ref={ref}\n          className={cx(\"ui-editable\", className)}\n          {...omitObject(rest, [\n            \"placeholder\",\n            \"value\",\n            \"defaultValue\",\n            \"isInvalid\",\n            \"isReadOnly\",\n            \"isRequired\",\n            \"isDisabled\",\n            \"startWithEditView\",\n            \"isPreviewFocusable\",\n            \"submitOnBlur\",\n            \"selectAllOnFocus\",\n            \"onChange\",\n            \"onCancel\",\n            \"onSubmit\",\n            \"onEdit\",\n          ])}\n          __css={css}\n        >\n          {cloneChildren}\n        </ui.div>\n      </EditableProvider>\n    )\n  },\n)\n\nexport type EditablePreviewProps = HTMLUIProps<\"span\">\n\nexport const EditablePreview = forwardRef<EditablePreviewProps, \"span\">(\n  ({ className, ...rest }, ref) => {\n    const { styles, getPreviewProps } = useEditableContext()\n\n    const css: CSSUIObject = {\n      cursor: \"text\",\n      display: \"inline-block\",\n      fontSize: \"inherit\",\n      fontWeight: \"inherit\",\n      textAlign: \"inherit\",\n      bg: \"transparent\",\n      ...styles.preview,\n    }\n\n    return (\n      <ui.span\n        className={cx(\"ui-editable__preview\", className)}\n        {...getPreviewProps(rest, ref)}\n        __css={css}\n      />\n    )\n  },\n)\n\nexport type EditableInputProps = HTMLUIProps<\"input\">\n\nexport const EditableInput = forwardRef<EditableInputProps, \"input\">(\n  ({ className, ...rest }, ref) => {\n    const { styles, getInputProps } = useEditableContext()\n\n    const css: CSSUIObject = {\n      outline: 0,\n      fontSize: \"inherit\",\n      fontWeight: \"inherit\",\n      textAlign: \"inherit\",\n      bg: \"transparent\",\n      ...styles.input,\n    }\n\n    return (\n      <ui.input\n        className={cx(\"ui-editable__input\", className)}\n        {...getInputProps(rest, ref)}\n        __css={css}\n      />\n    )\n  },\n)\n\nexport type EditableTextareaProps = HTMLUIProps<\"textarea\">\n\nexport const EditableTextarea = forwardRef<EditableTextareaProps, \"textarea\">(\n  ({ className, ...rest }, ref) => {\n    const { styles, getTextareaProps } = useEditableContext()\n\n    const css: CSSUIObject = {\n      outline: 0,\n      fontSize: \"inherit\",\n      fontWeight: \"inherit\",\n      textAlign: \"inherit\",\n      bg: \"transparent\",\n      ...styles.textarea,\n    }\n\n    return (\n      <ui.textarea\n        className={cx(\"ui-editable__textarea\", className)}\n        {...getTextareaProps(rest, ref)}\n        __css={css}\n      />\n    )\n  },\n)\n"],"names":["useEditable","props","id","placeholder","defaultValue","required","disabled","readOnly","startWithEditView","isPreviewFocusable","submitOnBlur","selectAllOnFocus","rest","useFormControlProps","useCallbackRef","isEditing","setIsEditing","useState","value","setValue","useControllableState","isInteractive","isValueEmpty","prevValue","setPrevValue","inputRef","useRef","previewRef","editRef","cancelRef","submitRef","useFocusOnPointerDown","useSafeLayoutEffect","_a","_b","useUpdateEffect","_c","_d","useEffect","el","onChange","useCallback","ev","onUpdatePrevValue","onEdit","onCancel","onSubmit","onKeyDown","shiftKey","metaKey","onKeyDownWithoutSubmit","onBlur","ownerDocument","relatedTarget","targetIsCancel","isContains","targetIsSubmit","getPreviewProps","ref","pickObject","formControlProperties","mergeRefs","handlerAll","getInputProps","getTextareaProps","getEditProps","omitObject","getSubmitProps","getCancelProps","useEditableControl","useEditableContext","EditableProvider","createContext","Editable","forwardRef","focusBorderColor","errorBorderColor","styles","mergedProps","useMultiComponentStyle","className","children","omitThemeProps","cloneChildren","runIfFunc","css","jsx","ui","cx","EditablePreview","EditableInput","EditableTextarea"],"mappings":"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"}