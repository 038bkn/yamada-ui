{"version":3,"file":"theme-provider-d246dc71.js","sources":["../../packages/utils/src/string.ts","../../packages/utils/src/calc.ts","../../node_modules/.pnpm/color2k@2.0.2/node_modules/color2k/dist/index.exports.import.es.mjs","../../packages/utils/src/color.ts","../../packages/core/src/css/breakpoint.ts","../../packages/core/src/css/var.ts","../../packages/core/src/theme.ts","../../packages/core/src/providers/theme-script.tsx","../../packages/core/src/providers/theme-manager.ts","../../packages/core/src/providers/theme-provider.tsx"],"sourcesContent":["export const escape = (value: string, replaceValue: string = \"\"): string =>\n  value.replace(/\\s+/g, replaceValue)\n","type Operator = \"+\" | \"-\" | \"*\" | \"/\"\n\nexport type Operand = string | number\n\nconst toExpression = (operator: Operator, ...args: Operand[]) =>\n  args.join(` ${operator} `).replace(/calc/g, \"\")\n\nconst add = (...args: Operand[]) => `calc(${toExpression(\"+\", ...args)})`\n\nconst subtract = (...args: Operand[]) => `calc(${toExpression(\"-\", ...args)})`\n\nconst multiply = (...args: Operand[]) => `calc(${toExpression(\"*\", ...args)})`\n\nconst divide = (...args: Operand[]) => `calc(${toExpression(\"/\", ...args)})`\n\nconst negate = (value: Operand) => {\n  if (value != null && !isNaN(parseFloat(value.toString())))\n    return String(value).startsWith(\"-\") ? String(value).slice(1) : `-${value}`\n\n  return multiply(value, -1)\n}\n\ntype Calc = {\n  add: (...args: Operand[]) => Calc\n  subtract: (...args: Operand[]) => Calc\n  multiply: (...args: Operand[]) => Calc\n  divide: (...args: Operand[]) => Calc\n  negate: () => Calc\n}\n\nexport const calc = Object.assign(\n  (x: Operand): Calc => ({\n    add: (...args) => calc(add(x, ...args)),\n    subtract: (...args) => calc(subtract(x, ...args)),\n    multiply: (...args) => calc(multiply(x, ...args)),\n    divide: (...args) => calc(divide(x, ...args)),\n    negate: () => calc(negate(x)),\n  }),\n  {\n    add,\n    subtract,\n    multiply,\n    divide,\n    negate,\n  },\n)\n","/**\n * A simple guard function:\n *\n * ```js\n * Math.min(Math.max(low, value), high)\n * ```\n */\nfunction guard(low, high, value) {\n  return Math.min(Math.max(low, value), high);\n}\n\nclass ColorError extends Error {\n  constructor(color) {\n    super(`Failed to parse color: \"${color}\"`);\n  }\n}\nvar ColorError$1 = ColorError;\n\n/**\n * Parses a color into red, gree, blue, alpha parts\n *\n * @param color the input color. Can be a RGB, RBGA, HSL, HSLA, or named color\n */\nfunction parseToRgba(color) {\n  if (typeof color !== 'string') throw new ColorError$1(color);\n  if (color.trim().toLowerCase() === 'transparent') return [0, 0, 0, 0];\n  let normalizedColor = color.trim();\n  normalizedColor = namedColorRegex.test(color) ? nameToHex(color) : color;\n  const reducedHexMatch = reducedHexRegex.exec(normalizedColor);\n  if (reducedHexMatch) {\n    const arr = Array.from(reducedHexMatch).slice(1);\n    return [...arr.slice(0, 3).map(x => parseInt(r(x, 2), 16)), parseInt(r(arr[3] || 'f', 2), 16) / 255];\n  }\n  const hexMatch = hexRegex.exec(normalizedColor);\n  if (hexMatch) {\n    const arr = Array.from(hexMatch).slice(1);\n    return [...arr.slice(0, 3).map(x => parseInt(x, 16)), parseInt(arr[3] || 'ff', 16) / 255];\n  }\n  const rgbaMatch = rgbaRegex.exec(normalizedColor);\n  if (rgbaMatch) {\n    const arr = Array.from(rgbaMatch).slice(1);\n    return [...arr.slice(0, 3).map(x => parseInt(x, 10)), parseFloat(arr[3] || '1')];\n  }\n  const hslaMatch = hslaRegex.exec(normalizedColor);\n  if (hslaMatch) {\n    const [h, s, l, a] = Array.from(hslaMatch).slice(1).map(parseFloat);\n    if (guard(0, 100, s) !== s) throw new ColorError$1(color);\n    if (guard(0, 100, l) !== l) throw new ColorError$1(color);\n    return [...hslToRgb(h, s, l), Number.isNaN(a) ? 1 : a];\n  }\n  throw new ColorError$1(color);\n}\nfunction hash(str) {\n  let hash = 5381;\n  let i = str.length;\n  while (i) {\n    hash = hash * 33 ^ str.charCodeAt(--i);\n  }\n\n  /* JavaScript does bitwise operations (like XOR, above) on 32-bit signed\n   * integers. Since we want the results to be always positive, convert the\n   * signed int to an unsigned by doing an unsigned bitshift. */\n  return (hash >>> 0) % 2341;\n}\nconst colorToInt = x => parseInt(x.replace(/_/g, ''), 36);\nconst compressedColorMap = '1q29ehhb 1n09sgk7 1kl1ekf_ _yl4zsno 16z9eiv3 1p29lhp8 _bd9zg04 17u0____ _iw9zhe5 _to73___ _r45e31e _7l6g016 _jh8ouiv _zn3qba8 1jy4zshs 11u87k0u 1ro9yvyo 1aj3xael 1gz9zjz0 _3w8l4xo 1bf1ekf_ _ke3v___ _4rrkb__ 13j776yz _646mbhl _nrjr4__ _le6mbhl 1n37ehkb _m75f91n _qj3bzfz 1939yygw 11i5z6x8 _1k5f8xs 1509441m 15t5lwgf _ae2th1n _tg1ugcv 1lp1ugcv 16e14up_ _h55rw7n _ny9yavn _7a11xb_ 1ih442g9 _pv442g9 1mv16xof 14e6y7tu 1oo9zkds 17d1cisi _4v9y70f _y98m8kc 1019pq0v 12o9zda8 _348j4f4 1et50i2o _8epa8__ _ts6senj 1o350i2o 1mi9eiuo 1259yrp0 1ln80gnw _632xcoy 1cn9zldc _f29edu4 1n490c8q _9f9ziet 1b94vk74 _m49zkct 1kz6s73a 1eu9dtog _q58s1rz 1dy9sjiq __u89jo3 _aj5nkwg _ld89jo3 13h9z6wx _qa9z2ii _l119xgq _bs5arju 1hj4nwk9 1qt4nwk9 1ge6wau6 14j9zlcw 11p1edc_ _ms1zcxe _439shk6 _jt9y70f _754zsow 1la40eju _oq5p___ _x279qkz 1fa5r3rv _yd2d9ip _424tcku _8y1di2_ _zi2uabw _yy7rn9h 12yz980_ __39ljp6 1b59zg0x _n39zfzp 1fy9zest _b33k___ _hp9wq92 1il50hz4 _io472ub _lj9z3eo 19z9ykg0 _8t8iu3a 12b9bl4a 1ak5yw0o _896v4ku _tb8k8lv _s59zi6t _c09ze0p 1lg80oqn 1id9z8wb _238nba5 1kq6wgdi _154zssg _tn3zk49 _da9y6tc 1sg7cv4f _r12jvtt 1gq5fmkz 1cs9rvci _lp9jn1c _xw1tdnb 13f9zje6 16f6973h _vo7ir40 _bt5arjf _rc45e4t _hr4e100 10v4e100 _hc9zke2 _w91egv_ _sj2r1kk 13c87yx8 _vqpds__ _ni8ggk8 _tj9yqfb 1ia2j4r4 _7x9b10u 1fc9ld4j 1eq9zldr _5j9lhpx _ez9zl6o _md61fzm'.split(' ').reduce((acc, next) => {\n  const key = colorToInt(next.substring(0, 3));\n  const hex = colorToInt(next.substring(3)).toString(16);\n\n  // NOTE: padStart could be used here but it breaks Node 6 compat\n  // https://github.com/ricokahler/color2k/issues/351\n  let prefix = '';\n  for (let i = 0; i < 6 - hex.length; i++) {\n    prefix += '0';\n  }\n  acc[key] = `${prefix}${hex}`;\n  return acc;\n}, {});\n\n/**\n * Checks if a string is a CSS named color and returns its equivalent hex value, otherwise returns the original color.\n */\nfunction nameToHex(color) {\n  const normalizedColorName = color.toLowerCase().trim();\n  const result = compressedColorMap[hash(normalizedColorName)];\n  if (!result) throw new ColorError$1(color);\n  return `#${result}`;\n}\nconst r = (str, amount) => Array.from(Array(amount)).map(() => str).join('');\nconst reducedHexRegex = new RegExp(`^#${r('([a-f0-9])', 3)}([a-f0-9])?$`, 'i');\nconst hexRegex = new RegExp(`^#${r('([a-f0-9]{2})', 3)}([a-f0-9]{2})?$`, 'i');\nconst rgbaRegex = new RegExp(`^rgba?\\\\(\\\\s*(\\\\d+)\\\\s*${r(',\\\\s*(\\\\d+)\\\\s*', 2)}(?:,\\\\s*([\\\\d.]+))?\\\\s*\\\\)$`, 'i');\nconst hslaRegex = /^hsla?\\(\\s*([\\d.]+)\\s*,\\s*([\\d.]+)%\\s*,\\s*([\\d.]+)%(?:\\s*,\\s*([\\d.]+))?\\s*\\)$/i;\nconst namedColorRegex = /^[a-z]+$/i;\nconst roundColor = color => {\n  return Math.round(color * 255);\n};\nconst hslToRgb = (hue, saturation, lightness) => {\n  let l = lightness / 100;\n  if (saturation === 0) {\n    // achromatic\n    return [l, l, l].map(roundColor);\n  }\n\n  // formulae from https://en.wikipedia.org/wiki/HSL_and_HSV\n  const huePrime = (hue % 360 + 360) % 360 / 60;\n  const chroma = (1 - Math.abs(2 * l - 1)) * (saturation / 100);\n  const secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));\n  let red = 0;\n  let green = 0;\n  let blue = 0;\n  if (huePrime >= 0 && huePrime < 1) {\n    red = chroma;\n    green = secondComponent;\n  } else if (huePrime >= 1 && huePrime < 2) {\n    red = secondComponent;\n    green = chroma;\n  } else if (huePrime >= 2 && huePrime < 3) {\n    green = chroma;\n    blue = secondComponent;\n  } else if (huePrime >= 3 && huePrime < 4) {\n    green = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 4 && huePrime < 5) {\n    red = secondComponent;\n    blue = chroma;\n  } else if (huePrime >= 5 && huePrime < 6) {\n    red = chroma;\n    blue = secondComponent;\n  }\n  const lightnessModification = l - chroma / 2;\n  const finalRed = red + lightnessModification;\n  const finalGreen = green + lightnessModification;\n  const finalBlue = blue + lightnessModification;\n  return [finalRed, finalGreen, finalBlue].map(roundColor);\n};\n\n// taken from:\n\n/**\n * Parses a color in hue, saturation, lightness, and the alpha channel.\n *\n * Hue is a number between 0 and 360, saturation, lightness, and alpha are\n * decimal percentages between 0 and 1\n */\nfunction parseToHsla(color) {\n  const [red, green, blue, alpha] = parseToRgba(color).map((value, index) =>\n  // 3rd index is alpha channel which is already normalized\n  index === 3 ? value : value / 255);\n  const max = Math.max(red, green, blue);\n  const min = Math.min(red, green, blue);\n  const lightness = (max + min) / 2;\n\n  // achromatic\n  if (max === min) return [0, 0, lightness, alpha];\n  const delta = max - min;\n  const saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);\n  const hue = 60 * (red === max ? (green - blue) / delta + (green < blue ? 6 : 0) : green === max ? (blue - red) / delta + 2 : (red - green) / delta + 4);\n  return [hue, saturation, lightness, alpha];\n}\n\n/**\n * Takes in hsla parts and constructs an hsla string\n *\n * @param hue The color circle (from 0 to 360) - 0 (or 360) is red, 120 is green, 240 is blue\n * @param saturation Percentage of saturation, given as a decimal between 0 and 1\n * @param lightness Percentage of lightness, given as a decimal between 0 and 1\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\nfunction hsla(hue, saturation, lightness, alpha) {\n  return `hsla(${(hue % 360).toFixed()}, ${guard(0, 100, saturation * 100).toFixed()}%, ${guard(0, 100, lightness * 100).toFixed()}%, ${parseFloat(guard(0, 1, alpha).toFixed(3))})`;\n}\n\n/**\n * Adjusts the current hue of the color by the given degrees. Wraps around when\n * over 360.\n *\n * @param color input color\n * @param degrees degrees to adjust the input color, accepts degree integers\n * (0 - 360) and wraps around on overflow\n */\nfunction adjustHue(color, degrees) {\n  const [h, s, l, a] = parseToHsla(color);\n  return hsla(h + degrees, s, l, a);\n}\n\n/**\n * Darkens using lightness. This is equivalent to subtracting the lightness\n * from the L in HSL.\n *\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction darken(color, amount) {\n  const [hue, saturation, lightness, alpha] = parseToHsla(color);\n  return hsla(hue, saturation, lightness - amount, alpha);\n}\n\n/**\n * Desaturates the input color by the given amount via subtracting from the `s`\n * in `hsla`.\n *\n * @param amount The amount to desaturate, given as a decimal between 0 and 1\n */\nfunction desaturate(color, amount) {\n  const [h, s, l, a] = parseToHsla(color);\n  return hsla(h, s - amount, l, a);\n}\n\n// taken from:\n// https://github.com/styled-components/polished/blob/0764c982551b487469043acb56281b0358b3107b/src/color/getLuminance.js\n\n/**\n * Returns a number (float) representing the luminance of a color.\n */\nfunction getLuminance(color) {\n  if (color === 'transparent') return 0;\n  function f(x) {\n    const channel = x / 255;\n    return channel <= 0.03928 ? channel / 12.92 : Math.pow((channel + 0.055) / 1.055, 2.4);\n  }\n  const [r, g, b] = parseToRgba(color);\n  return 0.2126 * f(r) + 0.7152 * f(g) + 0.0722 * f(b);\n}\n\n// taken from:\n\n/**\n * Returns the contrast ratio between two colors based on\n * [W3's recommended equation for calculating contrast](http://www.w3.org/TR/WCAG20/#contrast-ratiodef).\n */\nfunction getContrast(color1, color2) {\n  const luminance1 = getLuminance(color1);\n  const luminance2 = getLuminance(color2);\n  return luminance1 > luminance2 ? (luminance1 + 0.05) / (luminance2 + 0.05) : (luminance2 + 0.05) / (luminance1 + 0.05);\n}\n\n/**\n * Takes in rgba parts and returns an rgba string\n *\n * @param red The amount of red in the red channel, given in a number between 0 and 255 inclusive\n * @param green The amount of green in the red channel, given in a number between 0 and 255 inclusive\n * @param blue The amount of blue in the red channel, given in a number between 0 and 255 inclusive\n * @param alpha Percentage of opacity, given as a decimal between 0 and 1\n */\nfunction rgba(red, green, blue, alpha) {\n  return `rgba(${guard(0, 255, red).toFixed()}, ${guard(0, 255, green).toFixed()}, ${guard(0, 255, blue).toFixed()}, ${parseFloat(guard(0, 1, alpha).toFixed(3))})`;\n}\n\n/**\n * Mixes two colors together. Taken from sass's implementation.\n */\nfunction mix(color1, color2, weight) {\n  const normalize = (n, index) =>\n  // 3rd index is alpha channel which is already normalized\n  index === 3 ? n : n / 255;\n  const [r1, g1, b1, a1] = parseToRgba(color1).map(normalize);\n  const [r2, g2, b2, a2] = parseToRgba(color2).map(normalize);\n\n  // The formula is copied from the original Sass implementation:\n  // http://sass-lang.com/documentation/Sass/Script/Functions.html#mix-instance_method\n  const alphaDelta = a2 - a1;\n  const normalizedWeight = weight * 2 - 1;\n  const combinedWeight = normalizedWeight * alphaDelta === -1 ? normalizedWeight : normalizedWeight + alphaDelta / (1 + normalizedWeight * alphaDelta);\n  const weight2 = (combinedWeight + 1) / 2;\n  const weight1 = 1 - weight2;\n  const r = (r1 * weight1 + r2 * weight2) * 255;\n  const g = (g1 * weight1 + g2 * weight2) * 255;\n  const b = (b1 * weight1 + b2 * weight2) * 255;\n  const a = a2 * weight + a1 * (1 - weight);\n  return rgba(r, g, b, a);\n}\n\n/**\n * Given a series colors, this function will return a `scale(x)` function that\n * accepts a percentage as a decimal between 0 and 1 and returns the color at\n * that percentage in the scale.\n *\n * ```js\n * const scale = getScale('red', 'yellow', 'green');\n * console.log(scale(0)); // rgba(255, 0, 0, 1)\n * console.log(scale(0.5)); // rgba(255, 255, 0, 1)\n * console.log(scale(1)); // rgba(0, 128, 0, 1)\n * ```\n *\n * If you'd like to limit the domain and range like chroma-js, we recommend\n * wrapping scale again.\n *\n * ```js\n * const _scale = getScale('red', 'yellow', 'green');\n * const scale = x => _scale(x / 100);\n *\n * console.log(scale(0)); // rgba(255, 0, 0, 1)\n * console.log(scale(50)); // rgba(255, 255, 0, 1)\n * console.log(scale(100)); // rgba(0, 128, 0, 1)\n * ```\n */\nfunction getScale(...colors) {\n  return n => {\n    const lastIndex = colors.length - 1;\n    const lowIndex = guard(0, lastIndex, Math.floor(n * lastIndex));\n    const highIndex = guard(0, lastIndex, Math.ceil(n * lastIndex));\n    const color1 = colors[lowIndex];\n    const color2 = colors[highIndex];\n    const unit = 1 / lastIndex;\n    const weight = (n - unit * lowIndex) / unit;\n    return mix(color1, color2, weight);\n  };\n}\n\nconst guidelines = {\n  decorative: 1.5,\n  readable: 3,\n  aa: 4.5,\n  aaa: 7\n};\n\n/**\n * Returns whether or not a color has bad contrast against a background\n * according to a given standard.\n */\nfunction hasBadContrast(color, standard = 'aa', background = '#fff') {\n  return getContrast(color, background) < guidelines[standard];\n}\n\n/**\n * Lightens a color by a given amount. This is equivalent to\n * `darken(color, -amount)`\n *\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction lighten(color, amount) {\n  return darken(color, -amount);\n}\n\n/**\n * Takes in a color and makes it more transparent by convert to `rgba` and\n * decreasing the amount in the alpha channel.\n *\n * @param amount The amount to increase the transparency by, given as a decimal between 0 and 1\n */\nfunction transparentize(color, amount) {\n  const [r, g, b, a] = parseToRgba(color);\n  return rgba(r, g, b, a - amount);\n}\n\n/**\n * Takes a color and un-transparentizes it. Equivalent to\n * `transparentize(color, -amount)`\n *\n * @param amount The amount to increase the opacity by, given as a decimal between 0 and 1\n */\nfunction opacify(color, amount) {\n  return transparentize(color, -amount);\n}\n\n/**\n * An alternative function to `readableColor`. Returns whether or not the \n * readable color (i.e. the color to be place on top the input color) should be\n * black.\n */\nfunction readableColorIsBlack(color) {\n  return getLuminance(color) > 0.179;\n}\n\n/**\n * Returns black or white for best contrast depending on the luminosity of the\n * given color.\n */\nfunction readableColor(color) {\n  return readableColorIsBlack(color) ? '#000' : '#fff';\n}\n\n/**\n * Saturates a color by converting it to `hsl` and increasing the saturation\n * amount. Equivalent to `desaturate(color, -amount)`\n * \n * @param color Input color\n * @param amount The amount to darken, given as a decimal between 0 and 1\n */\nfunction saturate(color, amount) {\n  return desaturate(color, -amount);\n}\n\n/**\n * Takes in any color and returns it as a hex code.\n */\nfunction toHex(color) {\n  const [r, g, b, a] = parseToRgba(color);\n  let hex = x => {\n    const h = guard(0, 255, x).toString(16);\n    // NOTE: padStart could be used here but it breaks Node 6 compat\n    // https://github.com/ricokahler/color2k/issues/351\n    return h.length === 1 ? `0${h}` : h;\n  };\n  return `#${hex(r)}${hex(g)}${hex(b)}${a < 1 ? hex(Math.round(a * 255)) : ''}`;\n}\n\n/**\n * Takes in any color and returns it as an rgba string.\n */\nfunction toRgba(color) {\n  return rgba(...parseToRgba(color));\n}\n\n/**\n * Takes in any color and returns it as an hsla string.\n */\nfunction toHsla(color) {\n  return hsla(...parseToHsla(color));\n}\n\nexport { ColorError$1 as ColorError, adjustHue, darken, desaturate, getContrast, getLuminance, getScale, guard, hasBadContrast, hsla, lighten, mix, opacify, parseToHsla, parseToRgba, readableColor, readableColorIsBlack, rgba, saturate, toHex, toHsla, toRgba, transparentize };\n//# sourceMappingURL=index.exports.import.es.mjs.map\n","import {\n  toHex,\n  parseToRgba,\n  transparentize,\n  mix,\n  darken,\n  lighten,\n} from \"color2k\"\nimport { getMemoizedObject as get, Dict, isArray } from \".\"\n\ntype ColorMode = \"light\" | \"dark\"\n\nexport const hues = [\n  50, 100, 200, 300, 400, 500, 600, 700, 800, 900, 950,\n] as const\n\nexport const isGray = (colorScheme: string) =>\n  colorScheme === \"gray\" ||\n  colorScheme === \"zinc\" ||\n  colorScheme === \"neutral\" ||\n  colorScheme === \"stone\"\n\nexport const getColor =\n  (color: string, fallback?: string) =>\n  (theme: Dict = {}, colorMode?: ColorMode) => {\n    const [token, hue] = color.split(\".\")\n\n    const [, relatedToken] =\n      Object.entries<string>(theme.semantics?.colorSchemes ?? {}).find(\n        ([semanticToken]) => token === semanticToken,\n      ) ?? []\n\n    if (relatedToken) color = `${relatedToken}.${hue}`\n\n    const hex = get<\n      string | number | [string | number, string | number] | undefined\n    >(theme, `colors.${color}`, color)\n\n    try {\n      if (isArray(hex)) {\n        return toHex(String(colorMode !== \"dark\" ? hex[0] : hex[1]))\n      } else {\n        return toHex(String(hex))\n      }\n    } catch {\n      return fallback ?? \"#000000\"\n    }\n  }\n\nexport const lightenColor =\n  (color: string, amount: number) => (theme?: Dict, colorMode?: ColorMode) => {\n    const raw = getColor(color, color)(theme, colorMode)\n\n    return toHex(lighten(raw, amount / 100))\n  }\n\nexport const darkenColor =\n  (color: string, amount: number) => (theme?: Dict, colorMode?: ColorMode) => {\n    const raw = getColor(color, color)(theme, colorMode)\n\n    return toHex(darken(raw, amount / 100))\n  }\n\nexport const tintColor =\n  (color: string, amount: number) => (theme?: Dict, colorMode?: ColorMode) => {\n    const raw = getColor(color, color)(theme, colorMode)\n\n    return toHex(mix(raw, \"#fff\", amount))\n  }\n\nexport const shadeColor =\n  (color: string, amount: number) => (theme?: Dict, colorMode?: ColorMode) => {\n    const raw = getColor(color, color)(theme, colorMode)\n\n    return toHex(mix(raw, \"#000\", amount / 100))\n  }\n\nexport const transparentizeColor =\n  (color: string, alpha: number) => (theme?: Dict, colorMode?: ColorMode) => {\n    const raw = getColor(color, color)(theme, colorMode)\n\n    return transparentize(raw, 1 - alpha)\n  }\n\nexport const toneColor =\n  (color: string, hue: (typeof hues)[number]) =>\n  (theme?: Dict, colorMode?: ColorMode) => {\n    const raw = getColor(color, color)(theme, colorMode)\n\n    if (hue < 50 || 950 < hue) return color\n\n    let n = (hue - 500) / 10\n\n    const isLighten = n <= 0\n\n    if (isLighten) n *= -1\n\n    if (n !== 0) n = n - 5 * (isLighten ? 1 : -1)\n\n    return toHex(isLighten ? lighten(raw, n / 100) : mix(raw, \"#000\", n / 100))\n  }\n\nexport const randomColor = ({\n  string,\n  colors,\n}: { string?: string; colors?: string[] } = {}) => {\n  const fallback = randomHex()\n\n  if (string && colors) return randomColorFromList(string, colors)\n\n  if (string && !colors) return randomColorFromString(string)\n\n  if (colors && !string) return randomFromList(colors)\n\n  return fallback\n}\n\nconst randomHex = () =>\n  `#${Math.floor(Math.random() * 0xffffff)\n    .toString(16)\n    .padEnd(6, \"0\")}`\n\nconst randomColorFromString = (str: string) => {\n  let hash = 0\n\n  if (str.length === 0) return hash.toString()\n\n  for (let i = 0; i < str.length; i += 1) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash)\n    hash = hash & hash\n  }\n\n  let color = \"#\"\n\n  for (let j = 0; j < 3; j += 1) {\n    const value = (hash >> (j * 8)) & 255\n\n    color += `00${value.toString(16)}`.substr(-2)\n  }\n\n  return color\n}\n\nconst randomColorFromList = (str: string, list: string[]) => {\n  let index = 0\n\n  if (str.length === 0) return list[0]\n\n  for (let i = 0; i < str.length; i += 1) {\n    index = str.charCodeAt(i) + ((index << 5) - index)\n\n    index = index & index\n  }\n\n  index = ((index % list.length) + list.length) % list.length\n\n  return list[index]\n}\n\nconst randomFromList = (list: string[]) =>\n  list[Math.floor(Math.random() * list.length)]\n\nconst getBrightness = (color: string) => {\n  const [r, g, b] = parseToRgba(color)\n\n  return (r * 299 + g * 587 + b * 114) / 1000\n}\n\nexport const isTone =\n  (color: string) => (theme?: Dict, colorMode?: ColorMode) => {\n    const raw = theme ? getColor(color)(theme, colorMode) : color\n\n    const brightness = getBrightness(raw)\n\n    const isDark = brightness < 128\n\n    return isDark ? \"dark\" : \"light\"\n  }\n\nexport const isLight =\n  (color: string) => (theme?: Dict, colorMode?: ColorMode) =>\n    isTone(color)(theme, colorMode) === \"dark\"\n\nexport const isDark =\n  (color: string) => (theme?: Dict, colorMode?: ColorMode) =>\n    isTone(color)(theme, colorMode) === \"light\"\n","import { keysFormObject, createdDom, Dict } from \"@yamada-ui/utils\"\n\nexport type BreakpointQuery = {\n  breakpoint: string\n  minW: number | undefined\n  maxW: number | undefined\n  maxWQuery: string | undefined\n  minWQuery: string | undefined\n  minMaxQuery: string | undefined\n}\n\nexport type BreakpointQueries = BreakpointQuery[]\n\ntype Breakpoints = {\n  keys: string[]\n  isResponsive: (obj: Dict) => boolean\n  queries: BreakpointQueries\n}\n\nconst createQuery = (min?: number, max?: number): string | undefined => {\n  const query = [\"@media screen\"]\n\n  if (min) query.push(\"and\", `(min-width: ${min}px)`)\n  if (max) query.push(\"and\", `(max-width: ${max}px)`)\n\n  return query.length > 1 ? query.join(\" \") : undefined\n}\n\nconst createQueries = (breakpoints: Dict): BreakpointQueries => {\n  return Object.entries(breakpoints).map(([breakpoint, maxW], i, entry) => {\n    let [, minW] = entry[i - 1] ?? []\n\n    maxW = breakpoint !== \"base\" ? maxW : undefined\n\n    if (minW) minW += 1\n\n    return {\n      breakpoint,\n      minW,\n      maxW,\n      maxWQuery: createQuery(undefined, maxW),\n      minWQuery: createQuery(minW),\n      minMaxQuery: createQuery(minW, maxW),\n    }\n  })\n}\n\nconst transformBreakpoints = (breakpoints: Dict): Dict => {\n  const isBrowser = createdDom()\n  const fontSize = isBrowser\n    ? parseFloat(window.getComputedStyle(document.documentElement).fontSize)\n    : 16\n\n  return Object.fromEntries(\n    Object.entries(breakpoints)\n      .map(([name, value]) => {\n        if (value.includes(\"px\")) {\n          value = parseFloat(value)\n\n          return [name, value]\n        } else {\n          value = parseFloat(value)\n          value = value * fontSize\n\n          return [name, value]\n        }\n      })\n      .sort((a, b) => (a[1] as number) - (b[1] as number)),\n  )\n}\n\nexport const analyzeBreakpoints = (\n  breakpoints: Dict,\n): Breakpoints | undefined => {\n  if (!breakpoints) return\n\n  breakpoints.base = \"9999px\"\n\n  breakpoints = transformBreakpoints(breakpoints)\n\n  const keys = keysFormObject(breakpoints)\n\n  const queries = createQueries(breakpoints)\n\n  return {\n    keys,\n    isResponsive: (obj: Dict) => {\n      const _keys = Object.keys(obj)\n\n      return _keys.length > 0 && _keys.every((key) => keys.includes(key))\n    },\n    queries,\n  }\n}\n\nexport type AnalyzeBreakpointsReturn = ReturnType<typeof analyzeBreakpoints>\n","import {\n  escape,\n  merge,\n  calc,\n  Dict,\n  isArray,\n  isUndefined,\n} from \"@yamada-ui/utils\"\nimport { generateAnimation, generateGradient, pseudos } from \"../styles\"\nimport { VarTokens } from \"../theme\"\nimport { CSSMap, StyledTheme } from \"../theme.types\"\n\ntype Var = {\n  variable: string\n  reference: string\n}\n\nconst createVar = (token: string, prefix: string): Var => {\n  const variable = `--${[prefix, escape(token, \"-\")].filter(Boolean).join(\"-\")}`\n  const reference = `var(${variable})`\n\n  return { variable, reference }\n}\n\nconst tokenToVar = (token: string, prefix: string): Var => {\n  token = token.replace(/\\./g, \"-\")\n\n  return createVar(token, prefix)\n}\n\nexport const createVars =\n  (tokens: VarTokens, prefix: string = \"ui\") =>\n  ({\n    baseTokens,\n    cssMap = {},\n    cssVars = {},\n  }: {\n    baseTokens?: VarTokens\n    cssMap?: CSSMap\n    cssVars?: Dict\n  } = {}): { cssMap: CSSMap; cssVars: Dict } => {\n    for (let [token, { isSemantic, value }] of Object.entries(tokens)) {\n      const fetchParent = (\n        value: string | number = \"\",\n      ): [string | undefined, string | number] => {\n        const [parent] = token.split(\".\")\n\n        const relatedToken = [parent, value].join(\".\")\n\n        const tokenValue = tokens[relatedToken] ?? baseTokens?.[relatedToken]\n\n        if (!tokenValue) return [, value]\n\n        const { variable, reference } = tokenToVar(relatedToken, prefix)\n\n        return [variable, reference]\n      }\n\n      const { variable, reference } = tokenToVar(token, prefix)\n\n      let resolvedLightValue: string | number | undefined\n      let resplvedDarkValue: string | number | undefined\n\n      if (token.startsWith(\"animations.\")) {\n        if (isArray(value)) {\n          resolvedLightValue = value\n            .map((value) =>\n              generateAnimation(value, {\n                __cssMap: cssMap,\n              } as StyledTheme),\n            )\n            .join(\",\")\n        } else {\n          resolvedLightValue = generateAnimation(value, {\n            __cssMap: cssMap,\n          } as StyledTheme)\n        }\n      } else {\n        let [lightValue, darkValue] = isArray(value) ? [...value] : [value]\n\n        if (token.startsWith(\"gradients.\")) {\n          const [lightParentVar, lightParentRef] = fetchParent(lightValue)\n          const [darkParentVar, darkParentRef] = fetchParent(darkValue)\n\n          if (lightParentVar) {\n            resolvedLightValue = lightParentRef\n          } else {\n            resolvedLightValue = generateGradient(fetchParent(lightValue)[1], {\n              __cssMap: cssMap,\n            } as StyledTheme)\n          }\n\n          if (darkParentVar) {\n            resplvedDarkValue = darkParentRef\n          } else {\n            resplvedDarkValue = generateGradient(darkValue, {\n              __cssMap: cssMap,\n            } as StyledTheme)\n          }\n        } else {\n          resolvedLightValue = lightValue\n          resplvedDarkValue = darkValue\n        }\n      }\n\n      if (!isSemantic) {\n        if (token.startsWith(\"spaces\") && !isUndefined(resolvedLightValue)) {\n          const keys = token.split(\".\")\n          const [firstKey, ...restKeys] = keys\n\n          const negativeToken = `${firstKey}.-${restKeys.join(\".\")}`\n\n          const negativeValue = calc.negate(resolvedLightValue)\n          const negativeReference = calc.negate(reference)\n\n          cssMap[negativeToken] = {\n            value: negativeValue,\n            var: variable,\n            ref: negativeReference,\n          }\n        }\n\n        cssVars[variable] = resolvedLightValue\n\n        if (resplvedDarkValue)\n          cssVars = merge(cssVars, {\n            [pseudos._dark]: { [variable]: resplvedDarkValue },\n          })\n\n        cssMap[token] = {\n          value: resolvedLightValue,\n          var: variable,\n          ref: reference,\n        }\n\n        continue\n      }\n\n      const [parentVar, parentRef] = fetchParent(resolvedLightValue)\n\n      cssVars = merge(cssVars, { [variable]: parentRef })\n\n      if (resplvedDarkValue) {\n        const [, parentRef] = fetchParent(resplvedDarkValue)\n\n        cssVars = merge(cssVars, { [pseudos._dark]: { [variable]: parentRef } })\n      }\n\n      cssMap[token] = {\n        value: parentVar ?? resolvedLightValue,\n        var: variable,\n        ref: reference,\n      }\n    }\n\n    return { cssMap, cssVars }\n  }\n","import {\n  flattenObject,\n  objectFromEntries,\n  pickObject,\n  omitObject,\n  Dict,\n  hues,\n  isObject,\n  runIfFunc,\n  isFunction,\n} from \"@yamada-ui/utils\"\nimport { ThemeProps, UIStyleProps, analyzeBreakpoints, createVars } from \"./css\"\nimport {\n  CSSMap,\n  ComponentMultiStyle,\n  ComponentStyle,\n  ThemeConfig,\n} from \"./theme.types\"\n\nexport type VarToken = {\n  isSemantic: boolean\n  value: string | number | [string | number, string | number]\n}\n\nexport type VarTokens = Record<string, VarToken>\n\nconst primaryTokens = [\n  \"blurs\",\n  \"borders\",\n  \"colors\",\n  \"fonts\",\n  \"fontSizes\",\n  \"fontWeights\",\n  \"letterSpacings\",\n  \"lineHeights\",\n  \"radii\",\n  \"shadows\",\n  \"sizes\",\n  \"spaces\",\n  \"transitions\",\n  \"zIndices\",\n] as const\n\nconst secondaryTokens = [\"gradients\"] as const\n\nexport type ThemeToken =\n  | (typeof primaryTokens)[number]\n  | (typeof secondaryTokens)[number]\n  | \"animations\"\n  | \"breakpoints\"\n  | \"transitions.duration\"\n  | \"transitions.property\"\n  | \"transitions.easing\"\n\nexport const transformTheme = (theme: Dict, config?: ThemeConfig): Dict => {\n  theme = omitTheme(theme)\n  const { breakpoints, themeSchemes } = theme ?? {}\n  const prefix = config?.var?.prefix\n\n  const primaryTokens = createTokens(theme)\n  const secondaryTokens = createTokens(theme, \"secondary\")\n  const animationTokens = createTokens(theme, \"animation\")\n\n  let { cssMap, cssVars } = createAllVars(\n    createVars(primaryTokens, prefix),\n    createVars(secondaryTokens, prefix),\n    createVars(animationTokens, prefix),\n  )()\n\n  if (themeSchemes) {\n    for (const [themeScheme, nestedTheme] of Object.entries<Dict>(\n      themeSchemes,\n    )) {\n      const nestedPrimaryTokens = createTokens(nestedTheme)\n      const nestedSecondaryTokens = createTokens(nestedTheme, \"secondary\")\n      const nestedAnimationTokens = createTokens(nestedTheme, \"animation\")\n\n      let { cssVars: nestedCSSVars } = createAllVars(\n        createVars(nestedPrimaryTokens, prefix),\n        createVars(nestedSecondaryTokens, prefix),\n        createVars(nestedAnimationTokens, prefix),\n      )({ ...primaryTokens, ...secondaryTokens, ...animationTokens })\n\n      cssVars = {\n        ...cssVars,\n        [`[data-theme=${themeScheme}] &:not([data-theme]), &[data-theme=${themeScheme}]`]:\n          nestedCSSVars,\n      }\n    }\n  }\n\n  const defaultCSSVars: Dict = {}\n\n  Object.assign(theme, {\n    __config: config,\n    __cssVars: { ...defaultCSSVars, ...cssVars },\n    __cssMap: cssMap,\n    __breakpoints: analyzeBreakpoints(breakpoints),\n  })\n\n  return theme\n}\n\nconst createTokens = (\n  theme: Dict,\n  target: \"primary\" | \"secondary\" | \"animation\" = \"primary\",\n): VarTokens => {\n  let defaultTokens: string[] = []\n  let semanticTokens: string[] = []\n  let omitKeys: string[] = []\n\n  switch (target) {\n    case \"primary\":\n      defaultTokens = [...primaryTokens]\n      semanticTokens = [...primaryTokens, \"colorSchemes\"]\n\n      break\n\n    case \"secondary\":\n      defaultTokens = [...secondaryTokens]\n      semanticTokens = [...secondaryTokens]\n\n      break\n\n    case \"animation\":\n      defaultTokens = [\"animations\"]\n      semanticTokens = [\"animations\"]\n      omitKeys = [\"keyframes\"]\n\n      break\n\n    default:\n      break\n  }\n\n  const defaultTokenMap = pickObject(theme, defaultTokens)\n  const semanticTokenMap = pickObject(theme.semantics ?? {}, semanticTokens)\n\n  const defaultTokenEntries: [string, VarToken][] = Object.entries(\n    flattenObject(defaultTokenMap, Infinity, omitKeys),\n  ).map(([token, value]) => {\n    const enhancedToken = { isSemantic: false, value }\n\n    return [token, enhancedToken]\n  })\n  const semanticTokenEntries: [string, VarToken][] = Object.entries(\n    flattenObject(semanticTokenMap, Infinity, omitKeys),\n  ).reduce(\n    (prev, [token, value]) => {\n      if (token.startsWith(\"colorSchemes.\")) {\n        const [, semanticToken] = token.split(\".\")\n\n        hues.forEach((hue) => {\n          const enhancedToken = { isSemantic: true, value: `${value}.${hue}` }\n\n          prev.push([`colors.${semanticToken}.${hue}`, enhancedToken])\n        })\n      } else {\n        const enhancedToken = { isSemantic: true, value }\n\n        prev.push([token, enhancedToken])\n      }\n\n      return prev\n    },\n    [] as [string, VarToken][],\n  )\n\n  return objectFromEntries<VarTokens>([\n    ...defaultTokenEntries,\n    ...semanticTokenEntries,\n  ])\n}\n\nconst createAllVars =\n  (\n    ...funcs: ((arg: {\n      baseTokens?: VarTokens\n      cssMap?: CSSMap\n      cssVars?: Dict\n    }) => { cssMap: CSSMap; cssVars: Dict })[]\n  ) =>\n  (baseTokens?: VarTokens) => {\n    let resolvedCSSMap: CSSMap = {}\n    let resolvedCSSVars: Dict = {}\n\n    for (const func of funcs) {\n      const { cssMap, cssVars } = func({\n        baseTokens,\n        cssMap: resolvedCSSMap,\n        cssVars: resolvedCSSVars,\n      })\n\n      resolvedCSSMap = { ...resolvedCSSMap, ...cssMap }\n      resolvedCSSVars = { ...resolvedCSSVars, ...cssVars }\n    }\n\n    return { cssMap: resolvedCSSMap, cssVars: resolvedCSSVars }\n  }\n\nconst omitTheme = (theme: Dict): Dict =>\n  omitObject(theme, [\"__cssMap\", \"__cssVar\", \"__breakpoints\"])\n\nexport const omitThemeProps = <T extends ThemeProps>(props: T) =>\n  omitObject(props, [\"size\", \"variant\", \"colorScheme\"])\n\nexport const mergeStyle = <T extends ComponentStyle | ComponentMultiStyle>(\n  target: T,\n  source: T,\n): T => {\n  let result = Object.assign({}, target) as T\n\n  if (isObject(source)) {\n    if (isObject(target)) {\n      for (const [sourceKey, sourceValue] of Object.entries(source)) {\n        const targetValue = target[sourceKey as keyof T]\n\n        if (target.hasOwnProperty(sourceKey)) {\n          if (!isFunction(targetValue) && !isFunction(sourceValue)) {\n            result[sourceKey as keyof T] = mergeStyle(\n              targetValue,\n              sourceValue,\n            ) as T[keyof T]\n          } else {\n            result[sourceKey as keyof T] = ((props: UIStyleProps) =>\n              mergeStyle(\n                runIfFunc(targetValue, props) as T,\n                runIfFunc(sourceValue, props) as T,\n              )) as T[keyof T]\n          }\n        } else {\n          Object.assign(result, { [sourceKey]: sourceValue })\n        }\n      }\n    } else {\n      result = source\n    }\n  }\n\n  return result as T\n}\n","import { Theme } from \"../theme.types\"\n\ntype ThemeSchemeScriptProps = {\n  type?: \"localStorage\" | \"cookie\"\n  initialThemeScheme?: Theme[\"themeSchemes\"]\n  storageKey?: string\n  nonce?: string\n}\n\nexport const THEME_SCHEME_STORAGE_KEY = \"ui-theme-scheme\"\n\nexport const getThemeSchemeScript = ({\n  initialThemeScheme: init = \"base\",\n  type = \"localStorage\",\n  storageKey = THEME_SCHEME_STORAGE_KEY,\n}: Omit<ThemeSchemeScriptProps, \"nonce\">) => {\n  const isCookie = type === \"cookie\"\n\n  const cookieScript = `(function(){try{var a=function(c){var o=document.documentElement;return o.dataset.theme=c,c},h='${init}',r='${storageKey}',t=document.cookie.match(new RegExp('(^| )'.concat(r,'=([^;]+)'))),c=t?t[2]:null;c?a(c):(document.cookie=''.concat(r,'=').concat(a(h),'; max-age=31536000; path=/'))}catch(a){}})()`\n\n  const localStorageScript = `(function(){try{var a=function(c){var o=document.documentElement;return o.dataset.theme=c,c},m='${init}',e='${storageKey}',t=localStorage.getItem(e);t?a(t):localStorage.setItem(e, a(m))}catch(a){}})()`\n\n  const fn = isCookie ? cookieScript : localStorageScript\n\n  return `!${fn}`.trim()\n}\n\nexport const ThemeSchemeScript = ({\n  nonce,\n  ...rest\n}: ThemeSchemeScriptProps) => {\n  const html = getThemeSchemeScript(rest)\n\n  return (\n    <script\n      id=\"ui-theme-script\"\n      nonce={nonce}\n      dangerouslySetInnerHTML={{ __html: html }}\n    />\n  )\n}\n","import { Theme } from \"../theme.types\"\nimport { THEME_SCHEME_STORAGE_KEY } from \"./theme-script\"\n\nconst hasSupport = !!globalThis?.document\n\nexport type ThemeSchemeManager = {\n  type: \"cookie\" | \"localStorage\"\n  ssr?: boolean\n  get: (initialThemeScheme?: Theme[\"themeSchemes\"]) => Theme[\"themeSchemes\"]\n  set: (themeScheme: Theme[\"themeSchemes\"]) => void\n}\n\nconst createLocalStorage = (storageKey: string): ThemeSchemeManager => ({\n  ssr: false,\n  type: \"localStorage\",\n  get: (initThemeScheme = \"base\") => {\n    if (!hasSupport) return initThemeScheme\n\n    try {\n      const themeScheme = localStorage.getItem(storageKey) as\n        | Theme[\"themeSchemes\"]\n        | null\n\n      return themeScheme || initThemeScheme\n    } catch (e) {\n      return initThemeScheme\n    }\n  },\n\n  set: (themeScheme) => {\n    try {\n      localStorage.setItem(storageKey, String(themeScheme))\n    } catch (e) {}\n  },\n})\n\nconst parseCookie = (\n  cookie: string,\n  key: string,\n): Theme[\"themeSchemes\"] | undefined => {\n  const match = cookie.match(new RegExp(`(^| )${key}=([^;]+)`))\n\n  return match?.[2] as Theme[\"themeSchemes\"] | undefined\n}\n\nconst createCookieStorage = (\n  key: string,\n  cookie?: string,\n): ThemeSchemeManager => ({\n  ssr: !!cookie,\n  type: \"cookie\",\n  get: (initThemeScheme = \"base\") => {\n    if (cookie) return parseCookie(cookie, key) || initThemeScheme\n\n    if (!hasSupport) return initThemeScheme\n\n    return parseCookie(document.cookie, key) || initThemeScheme\n  },\n\n  set: (themeScheme) => {\n    document.cookie = `${key}=${themeScheme}; max-age=31536000; path=/`\n  },\n})\n\nconst cookieStorageSSR = (cookie: string) =>\n  createCookieStorage(THEME_SCHEME_STORAGE_KEY, cookie)\n\nexport const themeSchemeManager = {\n  localStorage: createLocalStorage(THEME_SCHEME_STORAGE_KEY),\n  cookieStorage: createCookieStorage(THEME_SCHEME_STORAGE_KEY),\n  createLocalStorage,\n  cookieStorageSSR,\n  createCookieStorage,\n}\n","import {\n  Global,\n  ThemeContext,\n  ThemeProvider as EmotionThemeProvider,\n  ThemeProviderProps as EmotionThemeProviderProps,\n  Interpolation,\n  Theme,\n  CSSObject,\n} from \"@emotion/react\"\nimport {\n  Dict,\n  runIfFunc,\n  getMemoizedObject as get,\n  isUndefined,\n  merge,\n} from \"@yamada-ui/utils\"\nimport {\n  FC,\n  useMemo,\n  useContext,\n  useState,\n  useCallback,\n  useEffect,\n} from \"react\"\nimport { css, UIStyle } from \"../css\"\nimport { transformTheme } from \"../theme\"\nimport {\n  ChangeThemeScheme,\n  PropsTheme,\n  StyledTheme,\n  ThemeConfig,\n  Theme as UITheme,\n  UsageTheme,\n} from \"../theme.types\"\nimport { useColorMode } from \"./color-mode-provider\"\nimport { themeSchemeManager, ThemeSchemeManager } from \"./theme-manager\"\n\nconst { localStorage } = themeSchemeManager\n\ntype ThemeProviderOptions = {\n  /**\n   * The theme of the yamada ui.\n   */\n  theme?: Dict\n  /**\n   * The config of the yamada ui.\n   */\n  config?: ThemeConfig\n  /**\n   * Manager to persist a user's theme scheme preference.\n   *\n   * Omit if you don't render server-side.\n   * For SSR, choose `cookieStorageManager`.\n   *\n   * @default 'localStorageManager'\n   */\n  themeSchemeManager?: ThemeSchemeManager\n}\n\nexport type ThemeProviderProps = Omit<EmotionThemeProviderProps, \"theme\"> &\n  ThemeProviderOptions\n\nexport const ThemeProvider: FC<ThemeProviderProps> = ({\n  theme: initialTheme = {},\n  config,\n  themeSchemeManager = localStorage,\n  children,\n}) => {\n  const [themeScheme, setThemeScheme] = useState<UITheme[\"themeSchemes\"]>(\n    themeSchemeManager.get(config?.initialThemeScheme),\n  )\n\n  const changeThemeScheme: ChangeThemeScheme = useCallback(\n    (themeScheme) => {\n      const cleanup = config?.disableTransitionOnChange\n        ? preventTransition()\n        : undefined\n\n      document.documentElement.dataset.theme = themeScheme\n\n      cleanup?.()\n\n      setThemeScheme(themeScheme)\n\n      themeSchemeManager.set(themeScheme)\n    },\n    [config, themeSchemeManager],\n  )\n\n  const theme = useMemo(\n    () => transformTheme(initialTheme, config),\n    [initialTheme, config],\n  )\n\n  useEffect(() => {\n    const managerValue = themeSchemeManager.get()\n\n    if (managerValue) changeThemeScheme(managerValue)\n  }, [changeThemeScheme, themeSchemeManager])\n\n  return (\n    <EmotionThemeProvider theme={{ themeScheme, changeThemeScheme, ...theme }}>\n      <CSSVars />\n      {children}\n    </EmotionThemeProvider>\n  )\n}\n\nexport const CSSVars: FC = () => {\n  return (\n    <Global\n      styles={\n        (({ __cssVars }: PropsTheme) => {\n          return { \":host, :root, [data-mode]\": __cssVars } as CSSObject\n        }) as Interpolation<Theme>\n      }\n    />\n  )\n}\n\nexport const ResetStyle: FC = () => {\n  const { colorMode } = useColorMode()\n\n  return (\n    <Global\n      styles={\n        ((theme: PropsTheme) => {\n          const { themeScheme } = theme\n          let style = get<UIStyle>(theme, \"styles.resetStyle\", {})\n\n          const computedStyle = runIfFunc(style, {\n            theme,\n            colorMode,\n            themeScheme,\n          })\n\n          if (!computedStyle) return undefined\n\n          return css(computedStyle)(theme)\n        }) as Interpolation<Theme>\n      }\n    />\n  )\n}\n\nexport const GlobalStyle: FC = () => {\n  const { colorMode } = useColorMode()\n\n  return (\n    <Global\n      styles={\n        ((theme: PropsTheme) => {\n          const { themeScheme } = theme\n          let style = get<UIStyle>(theme, \"styles.globalStyle\", {})\n\n          const computedStyle = runIfFunc(style, {\n            theme,\n            colorMode,\n            themeScheme,\n          })\n\n          if (!computedStyle) return undefined\n\n          return css(computedStyle)(theme)\n        }) as Interpolation<Theme>\n      }\n    />\n  )\n}\n\nexport const useTheme = <T extends object = Dict>() => {\n  const { themeScheme, changeThemeScheme, ...internalTheme } = useContext(\n    ThemeContext,\n  ) as PropsTheme<UsageTheme>\n\n  if (!internalTheme)\n    throw Error(\n      \"useTheme: `theme` is undefined. Seems you forgot to wrap your app in `<UIProvider />`\",\n    )\n\n  const theme = useMemo(() => {\n    if (isUndefined(themeScheme) || themeScheme === \"base\") return internalTheme\n\n    const nestedTheme = internalTheme.themeSchemes?.[themeScheme]\n\n    if (!nestedTheme) return internalTheme\n\n    return merge(internalTheme, nestedTheme)\n  }, [themeScheme, internalTheme])\n\n  const value = useMemo(\n    () =>\n      ({ themeScheme, changeThemeScheme, theme, internalTheme }) as Pick<\n        PropsTheme,\n        \"themeScheme\" | \"changeThemeScheme\"\n      > & {\n        theme: StyledTheme<T>\n        internalTheme: StyledTheme<T>\n      },\n    [themeScheme, changeThemeScheme, theme, internalTheme],\n  )\n\n  return value\n}\n\nconst preventTransition = () => {\n  const css = document.createElement(\"style\")\n\n  const node = document.createTextNode(\n    `*{-webkit-transition:none!important;-moz-transition:none!important;-o-transition:none!important;-ms-transition:none!important;transition:none!important}`,\n  )\n\n  css.appendChild(node)\n\n  document.head.appendChild(css)\n\n  return () => {\n    ;(() => window.getComputedStyle(document.body))()\n\n    requestAnimationFrame(() => {\n      requestAnimationFrame(() => {\n        document.head.removeChild(css)\n      })\n    })\n  }\n}\n"],"names":["escape","value","replaceValue","toExpression","operator","args","add","subtract","multiply","divide","negate","calc","x","guard","low","high","ColorError","color","ColorError$1","parseToRgba","normalizedColor","namedColorRegex","nameToHex","reducedHexMatch","reducedHexRegex","arr","r","hexMatch","hexRegex","rgbaMatch","rgbaRegex","hslaMatch","hslaRegex","h","s","a","hslToRgb","hash","str","i","colorToInt","compressedColorMap","acc","next","key","hex","prefix","normalizedColorName","result","amount","roundColor","hue","saturation","lightness","l","huePrime","chroma","secondComponent","red","green","blue","lightnessModification","finalRed","finalGreen","finalBlue","rgba","alpha","mix","color1","color2","weight","normalize","n","index","r1","g1","b1","a1","r2","g2","b2","a2","alphaDelta","normalizedWeight","weight2","weight1","g","b","transparentize","toHex","hues","isGray","colorScheme","getColor","fallback","theme","colorMode","token","relatedToken","_a","semanticToken","get","isArray","shadeColor","raw","transparentizeColor","randomColor","string","colors","randomHex","randomColorFromList","randomColorFromString","randomFromList","j","list","getBrightness","isTone","isDark","createQuery","min","max","query","createQueries","breakpoints","breakpoint","maxW","entry","minW","transformBreakpoints","fontSize","createdDom","name","analyzeBreakpoints","keys","keysFormObject","queries","obj","_keys","createVar","variable","reference","tokenToVar","createVars","tokens","baseTokens","cssMap","cssVars","isSemantic","fetchParent","parent","resolvedLightValue","resplvedDarkValue","generateAnimation","lightValue","darkValue","lightParentVar","lightParentRef","darkParentVar","darkParentRef","generateGradient","isUndefined","firstKey","restKeys","negativeToken","negativeValue","negativeReference","merge","pseudos","parentVar","parentRef","primaryTokens","secondaryTokens","transformTheme","config","omitTheme","themeSchemes","createTokens","animationTokens","createAllVars","themeScheme","nestedTheme","nestedPrimaryTokens","nestedSecondaryTokens","nestedAnimationTokens","nestedCSSVars","target","defaultTokens","semanticTokens","omitKeys","defaultTokenMap","pickObject","semanticTokenMap","defaultTokenEntries","flattenObject","semanticTokenEntries","prev","enhancedToken","objectFromEntries","funcs","resolvedCSSMap","resolvedCSSVars","func","omitObject","omitThemeProps","props","mergeStyle","source","isObject","sourceKey","sourceValue","targetValue","isFunction","runIfFunc","THEME_SCHEME_STORAGE_KEY","hasSupport","createLocalStorage","storageKey","initThemeScheme","parseCookie","cookie","match","createCookieStorage","cookieStorageSSR","themeSchemeManager","localStorage","ThemeProvider","initialTheme","children","setThemeScheme","useState","changeThemeScheme","useCallback","cleanup","preventTransition","useMemo","useEffect","managerValue","jsxs","EmotionThemeProvider","jsx","CSSVars","Global","__cssVars","ResetStyle","useColorMode","style","computedStyle","css","GlobalStyle","useTheme","internalTheme","useContext","ThemeContext","node"],"mappings":"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","x_google_ignoreList":[2]}