{"version":3,"file":"preview-6ff442d2.js","sources":["../../.storybook/theme.ts","../../.storybook/components.tsx","../../.storybook/preview.tsx"],"sourcesContent":["import { defaultTheme } from '@yamada-ui/react'\n\nconst baseTheme = {\n  brandTitle: 'Yamada UI',\n  brandUrl: 'https://github.com/hirotomoyamada/yamada-ui',\n  brandImage:\n    'https://raw.githubusercontent.com/hirotomoyamada/yamada-ui/main/logo/logo-colored@2x.png',\n\n  // Colors\n  colorPrimary: defaultTheme.colors.green[500],\n  colorSecondary: defaultTheme.colors.blue[500],\n\n  // UI\n  appBorderRadius: 0,\n\n  // Toolbar default and active colors\n  barSelectedColor: defaultTheme.colors.blue[500],\n\n  // Typography\n  fontBase: `-apple-system, BlinkMacSystemFont, \"Segoe UI\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"`,\n  fontCode: `SFMono-Regular,Menlo,Monaco,Consolas,\"Liberation Mono\",\"Courier New\",monospace`,\n}\n\nexport const UITheme = {\n  light: {\n    ...baseTheme,\n    base: 'light',\n\n    // UI\n    appBg: defaultTheme.colors.white,\n    appContentBg: defaultTheme.colors.white,\n\n    // Toolbar default and active colors\n    barBg: defaultTheme.colors.white,\n    barTextColor: defaultTheme.colors.blackAlpha[500],\n\n    // Text colors\n    textColor: defaultTheme.colors.black,\n    textInverseColor: defaultTheme.colors.black,\n  },\n  dark: {\n    ...baseTheme,\n    base: 'dark',\n\n    // UI\n    appContentBg: defaultTheme.colors.black,\n    appBg: defaultTheme.colors.black,\n\n    // Toolbar default and active colors\n    barBg: defaultTheme.colors.black,\n    barTextColor: defaultTheme.colors.whiteAlpha[500],\n\n    // Text colors\n    textColor: defaultTheme.colors.white,\n    textInverseColor: defaultTheme.colors.white,\n  },\n}\n","import React, { FC, ReactNode, useEffect } from 'react'\nimport { useDarkMode } from 'storybook-dark-mode'\nimport {\n  Container,\n  ContainerProps,\n  UIProvider,\n  useColorMode,\n} from '@yamada-ui/react'\nimport {\n  DocsContainer as StorybookDocsContainer,\n  DocsContainerProps,\n} from '@storybook/blocks'\nimport { themes } from '@storybook/theming'\n\nexport const StoryProvider: FC<{ children: ReactNode }> = ({ children }) => {\n  return (\n    <UIProvider>\n      <App p='md'>{children}</App>\n    </UIProvider>\n  )\n}\n\nconst App: FC<ContainerProps> = ({ p, children }) => {\n  const { changeColorMode } = useColorMode()\n\n  const colorMode = useDarkMode() ? 'dark' : 'light'\n\n  useEffect(() => {\n    changeColorMode(colorMode)\n  }, [colorMode])\n\n  return (\n    <Container p={p} gap='md' alignItems='flex-start'>\n      {children}\n    </Container>\n  )\n}\n\nexport const DocsContainer: FC<\n  DocsContainerProps & { children: ReactNode }\n> = ({ children, theme, ...rest }) => {\n  const dark = useDarkMode()\n\n  theme = dark ? themes.dark : themes.light\n\n  return (\n    <StorybookDocsContainer theme={theme} {...rest}>\n      {children}\n    </StorybookDocsContainer>\n  )\n}\n","import React from 'react'\nimport { Decorator, Parameters } from '@storybook/react'\nimport { themes } from '@storybook/theming'\nimport { UITheme } from './theme'\nimport { StoryProvider, DocsContainer } from './components'\n\nexport const parameters: Parameters = {\n  darkMode: {\n    light: { ...themes.light, ...UITheme.light },\n    dark: { ...themes.dark, ...UITheme.dark },\n  },\n  options: {\n    storySort: {\n      order: ['Documents', ['Welcome', '*'], 'Components', 'Hooks', 'System'],\n    },\n  },\n  backgrounds: { disable: true },\n  controls: { expanded: true },\n  docs: { container: DocsContainer },\n  layout: 'fullscreen',\n}\n\nexport const decorators: Decorator[] = [\n  (Story) => {\n    return (\n      <StoryProvider>\n        <Story />\n      </StoryProvider>\n    )\n  },\n]\n"],"names":["baseTheme","defaultTheme","UITheme","StoryProvider","children","UIProvider","jsx","App","p","changeColorMode","useColorMode","colorMode","useDarkMode","useEffect","Container","DocsContainer","theme","rest","themes","StorybookDocsContainer","parameters","decorators","Story"],"mappings":"ysCAEA,MAAMA,EAAY,CAChB,WAAY,YACZ,SAAU,8CACV,WACE,2FAGF,aAAcC,EAAa,OAAO,MAAM,GAAG,EAC3C,eAAgBA,EAAa,OAAO,KAAK,GAAG,EAG5C,gBAAiB,EAGjB,iBAAkBA,EAAa,OAAO,KAAK,GAAG,EAG9C,SAAU,wIACV,SAAU,gFACZ,EAEaC,EAAU,CACrB,MAAO,CACL,GAAGF,EACH,KAAM,QAGN,MAAOC,EAAa,OAAO,MAC3B,aAAcA,EAAa,OAAO,MAGlC,MAAOA,EAAa,OAAO,MAC3B,aAAcA,EAAa,OAAO,WAAW,GAAG,EAGhD,UAAWA,EAAa,OAAO,MAC/B,iBAAkBA,EAAa,OAAO,KACxC,EACA,KAAM,CACJ,GAAGD,EACH,KAAM,OAGN,aAAcC,EAAa,OAAO,MAClC,MAAOA,EAAa,OAAO,MAG3B,MAAOA,EAAa,OAAO,MAC3B,aAAcA,EAAa,OAAO,WAAW,GAAG,EAGhD,UAAWA,EAAa,OAAO,MAC/B,iBAAkBA,EAAa,OAAO,KACxC,CACF,EC1CaE,EAA6C,CAAC,CAAE,SAAAC,OAExDC,EACC,CAAA,SAAAC,EAACC,GAAI,EAAE,KAAM,SAAAH,CAAS,CAAA,CACxB,CAAA,EAIEG,EAA0B,CAAC,CAAE,EAAAC,EAAG,SAAAJ,KAAe,CAC7C,KAAA,CAAE,gBAAAK,GAAoBC,IAEtBC,EAAYC,IAAgB,OAAS,QAE3CC,OAAAA,EAAAA,UAAU,IAAM,CACdJ,EAAgBE,CAAS,CAAA,EACxB,CAACA,CAAS,CAAC,IAGXG,EAAU,CAAA,EAAAN,EAAM,IAAI,KAAK,WAAW,aAClC,SAAAJ,CACH,CAAA,CAEJ,EAEaW,EAET,CAAC,CAAE,SAAAX,EAAU,MAAAY,EAAO,GAAGC,MAGjBD,EAFKJ,IAEEM,EAAO,KAAOA,EAAO,MAGjCZ,EAAAa,EAAA,CAAuB,MAAAH,EAAe,GAAGC,EACvC,SAAAb,CACH,CAAA,GC1CSgB,EAAyB,CACpC,SAAU,CACR,MAAO,CAAE,GAAGF,EAAO,MAAO,GAAGhB,EAAQ,KAAM,EAC3C,KAAM,CAAE,GAAGgB,EAAO,KAAM,GAAGhB,EAAQ,IAAK,CAC1C,EACA,QAAS,CACP,UAAW,CACT,MAAO,CAAC,YAAa,CAAC,UAAW,GAAG,EAAG,aAAc,QAAS,QAAQ,CACxE,CACF,EACA,YAAa,CAAE,QAAS,EAAK,EAC7B,SAAU,CAAE,SAAU,EAAK,EAC3B,KAAM,CAAE,UAAWa,CAAc,EACjC,OAAQ,YACV,EAEaM,EAA0B,CACpCC,GAEIhB,EAAAH,EAAA,CACC,SAACG,EAAAgB,EAAA,CAAA,CAAM,CACT,CAAA,CAGN"}